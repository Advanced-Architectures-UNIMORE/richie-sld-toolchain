// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="rayMarching,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.026250,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1647,HLS_SYN_DSP=6,HLS_SYN_FF=2066,HLS_SYN_LUT=4274,HLS_VERSION=2019_2}" *)

module rayMarching (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        port0_TDATA,
        port0_TVALID,
        port0_TREADY,
        port011_TDATA,
        port011_TVALID,
        port011_TREADY,
        port1_TDATA,
        port1_TVALID,
        port1_TREADY,
        port2_TDATA,
        port2_TVALID,
        port2_TREADY,
        n_particles,
        orig_x,
        orig_y,
        angleMin,
        angleIncrement,
        map_resolution,
        map_height,
        map_width,
        maxRange,
        port012_TDATA,
        port012_TVALID,
        port012_TREADY
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] port0_TDATA;
input   port0_TVALID;
output   port0_TREADY;
input  [31:0] port011_TDATA;
input   port011_TVALID;
output   port011_TREADY;
input  [31:0] port1_TDATA;
input   port1_TVALID;
output   port1_TREADY;
input  [31:0] port2_TDATA;
input   port2_TVALID;
output   port2_TREADY;
input  [31:0] n_particles;
input  [31:0] orig_x;
input  [31:0] orig_y;
input  [31:0] angleMin;
input  [31:0] angleIncrement;
input  [31:0] map_resolution;
input  [31:0] map_height;
input  [31:0] map_width;
input  [31:0] maxRange;
output  [31:0] port012_TDATA;
output   port012_TVALID;
input   port012_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg port0_TREADY;
reg port011_TREADY;
reg port1_TREADY;
reg port2_TREADY;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    port0_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln140_fu_372_p2;
wire   [17:0] add_ln140_fu_378_p2;
reg    ap_block_state2;
wire   [8:0] select_ln144_1_fu_404_p3;
wire   [8:0] j_fu_428_p2;
reg   [17:0] p_distMap_0_address0;
reg    p_distMap_0_ce0;
reg    p_distMap_0_we0;
wire   [31:0] p_distMap_0_q0;
reg   [17:0] p_distMap_1_address0;
reg    p_distMap_1_ce0;
reg    p_distMap_1_we0;
wire   [31:0] p_distMap_1_q0;
reg   [17:0] p_distMap_2_address0;
reg    p_distMap_2_ce0;
reg    p_distMap_2_we0;
wire   [31:0] p_distMap_2_q0;
reg   [17:0] p_distMap_3_address0;
reg    p_distMap_3_ce0;
reg    p_distMap_3_we0;
wire   [31:0] p_distMap_3_q0;
reg   [17:0] p_distMap_4_address0;
reg    p_distMap_4_ce0;
reg    p_distMap_4_we0;
wire   [31:0] p_distMap_4_q0;
wire   [17:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_0_address0;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_0_ce0;
wire   [31:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_0_d0;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_0_we0;
wire   [17:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_0_address1;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_0_ce1;
wire   [31:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_0_d1;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_0_we1;
wire   [17:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_1_address0;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_1_ce0;
wire   [31:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_1_d0;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_1_we0;
wire   [17:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_1_address1;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_1_ce1;
wire   [31:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_1_d1;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_1_we1;
wire   [17:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_2_address0;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_2_ce0;
wire   [31:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_2_d0;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_2_we0;
wire   [17:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_2_address1;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_2_ce1;
wire   [31:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_2_d1;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_2_we1;
wire   [17:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_3_address0;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_3_ce0;
wire   [31:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_3_d0;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_3_we0;
wire   [17:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_3_address1;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_3_ce1;
wire   [31:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_3_d1;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_3_we1;
wire   [17:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_4_address0;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_4_ce0;
wire   [31:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_4_d0;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_4_we0;
wire   [17:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_4_address1;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_4_ce1;
wire   [31:0] grp_dataflow_parent_loop_1_fu_348_p_distMap_4_d1;
wire    grp_dataflow_parent_loop_1_fu_348_p_distMap_4_we1;
wire   [31:0] grp_dataflow_parent_loop_1_fu_348_rays_TDATA;
wire    grp_dataflow_parent_loop_1_fu_348_yaw_TREADY;
wire    grp_dataflow_parent_loop_1_fu_348_y_TREADY;
wire    grp_dataflow_parent_loop_1_fu_348_x_TREADY;
wire    grp_dataflow_parent_loop_1_fu_348_rays_TVALID;
wire    grp_dataflow_parent_loop_1_fu_348_rays_TREADY;
wire    grp_dataflow_parent_loop_1_fu_348_ap_start;
wire    grp_dataflow_parent_loop_1_fu_348_ap_done;
wire    grp_dataflow_parent_loop_1_fu_348_ap_ready;
wire    grp_dataflow_parent_loop_1_fu_348_ap_idle;
reg    grp_dataflow_parent_loop_1_fu_348_ap_continue;
reg   [17:0] indvar_flatten_reg_315;
reg   [8:0] i_0_reg_326;
reg   [8:0] j_0_reg_337;
reg    grp_dataflow_parent_loop_1_fu_348_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_sync_grp_dataflow_parent_loop_1_fu_348_ap_ready;
wire    ap_sync_grp_dataflow_parent_loop_1_fu_348_ap_done;
reg    ap_block_state4_on_subcall_done;
reg    ap_sync_reg_grp_dataflow_parent_loop_1_fu_348_ap_ready;
reg    ap_sync_reg_grp_dataflow_parent_loop_1_fu_348_ap_done;
wire   [63:0] zext_ln146_2_fu_420_p1;
wire   [0:0] icmp_ln141_fu_390_p2;
wire   [8:0] i_fu_384_p2;
wire   [8:0] select_ln144_fu_396_p3;
wire   [17:0] grp_fu_434_p3;
wire   [8:0] grp_fu_434_p0;
wire   [9:0] grp_fu_434_p1;
wire   [8:0] grp_fu_434_p2;
wire    ap_CS_fsm_state5;
wire    regslice_both_port012_U_apdone_blk;
reg   [4:0] ap_NS_fsm;
wire    regslice_both_port0_U_apdone_blk;
wire   [31:0] port0_TDATA_int;
wire    port0_TVALID_int;
reg    port0_TREADY_int;
wire    regslice_both_port0_U_ack_in;
wire    regslice_both_port011_U_apdone_blk;
wire   [31:0] port011_TDATA_int;
wire    port011_TVALID_int;
reg    port011_TREADY_int;
wire    regslice_both_port011_U_ack_in;
wire    regslice_both_port1_U_apdone_blk;
wire   [31:0] port1_TDATA_int;
wire    port1_TVALID_int;
reg    port1_TREADY_int;
wire    regslice_both_port1_U_ack_in;
wire    regslice_both_port2_U_apdone_blk;
wire   [31:0] port2_TDATA_int;
wire    port2_TVALID_int;
reg    port2_TREADY_int;
wire    regslice_both_port2_U_ack_in;
wire    port012_TREADY_int;
wire    regslice_both_port012_U_vld_out;
wire   [17:0] grp_fu_434_p00;
wire   [17:0] grp_fu_434_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 grp_dataflow_parent_loop_1_fu_348_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_1_fu_348_ap_ready = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_1_fu_348_ap_done = 1'b0;
end

rayMarching_p_disdEe #(
    .DataWidth( 32 ),
    .AddressRange( 183815 ),
    .AddressWidth( 18 ))
p_distMap_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(p_distMap_0_address0),
    .ce0(p_distMap_0_ce0),
    .we0(p_distMap_0_we0),
    .d0(port0_TDATA_int),
    .q0(p_distMap_0_q0)
);

rayMarching_p_disdEe #(
    .DataWidth( 32 ),
    .AddressRange( 183815 ),
    .AddressWidth( 18 ))
p_distMap_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(p_distMap_1_address0),
    .ce0(p_distMap_1_ce0),
    .we0(p_distMap_1_we0),
    .d0(port0_TDATA_int),
    .q0(p_distMap_1_q0)
);

rayMarching_p_disdEe #(
    .DataWidth( 32 ),
    .AddressRange( 183815 ),
    .AddressWidth( 18 ))
p_distMap_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(p_distMap_2_address0),
    .ce0(p_distMap_2_ce0),
    .we0(p_distMap_2_we0),
    .d0(port0_TDATA_int),
    .q0(p_distMap_2_q0)
);

rayMarching_p_disdEe #(
    .DataWidth( 32 ),
    .AddressRange( 183815 ),
    .AddressWidth( 18 ))
p_distMap_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(p_distMap_3_address0),
    .ce0(p_distMap_3_ce0),
    .we0(p_distMap_3_we0),
    .d0(port0_TDATA_int),
    .q0(p_distMap_3_q0)
);

rayMarching_p_disdEe #(
    .DataWidth( 32 ),
    .AddressRange( 183815 ),
    .AddressWidth( 18 ))
p_distMap_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(p_distMap_4_address0),
    .ce0(p_distMap_4_ce0),
    .we0(p_distMap_4_we0),
    .d0(port0_TDATA_int),
    .q0(p_distMap_4_q0)
);

dataflow_parent_loop_1 grp_dataflow_parent_loop_1_fu_348(
    .n_particles(n_particles),
    .yaw_TDATA(port2_TDATA_int),
    .y_TDATA(port1_TDATA_int),
    .x_TDATA(port011_TDATA_int),
    .p_distMap_0_address0(grp_dataflow_parent_loop_1_fu_348_p_distMap_0_address0),
    .p_distMap_0_ce0(grp_dataflow_parent_loop_1_fu_348_p_distMap_0_ce0),
    .p_distMap_0_d0(grp_dataflow_parent_loop_1_fu_348_p_distMap_0_d0),
    .p_distMap_0_q0(p_distMap_0_q0),
    .p_distMap_0_we0(grp_dataflow_parent_loop_1_fu_348_p_distMap_0_we0),
    .p_distMap_0_address1(grp_dataflow_parent_loop_1_fu_348_p_distMap_0_address1),
    .p_distMap_0_ce1(grp_dataflow_parent_loop_1_fu_348_p_distMap_0_ce1),
    .p_distMap_0_d1(grp_dataflow_parent_loop_1_fu_348_p_distMap_0_d1),
    .p_distMap_0_q1(32'd0),
    .p_distMap_0_we1(grp_dataflow_parent_loop_1_fu_348_p_distMap_0_we1),
    .orig_x(orig_x),
    .orig_y(orig_y),
    .map_width(map_width),
    .map_height(map_height),
    .map_resolution(map_resolution),
    .maxRange(maxRange),
    .p_distMap_1_address0(grp_dataflow_parent_loop_1_fu_348_p_distMap_1_address0),
    .p_distMap_1_ce0(grp_dataflow_parent_loop_1_fu_348_p_distMap_1_ce0),
    .p_distMap_1_d0(grp_dataflow_parent_loop_1_fu_348_p_distMap_1_d0),
    .p_distMap_1_q0(p_distMap_1_q0),
    .p_distMap_1_we0(grp_dataflow_parent_loop_1_fu_348_p_distMap_1_we0),
    .p_distMap_1_address1(grp_dataflow_parent_loop_1_fu_348_p_distMap_1_address1),
    .p_distMap_1_ce1(grp_dataflow_parent_loop_1_fu_348_p_distMap_1_ce1),
    .p_distMap_1_d1(grp_dataflow_parent_loop_1_fu_348_p_distMap_1_d1),
    .p_distMap_1_q1(32'd0),
    .p_distMap_1_we1(grp_dataflow_parent_loop_1_fu_348_p_distMap_1_we1),
    .p_distMap_2_address0(grp_dataflow_parent_loop_1_fu_348_p_distMap_2_address0),
    .p_distMap_2_ce0(grp_dataflow_parent_loop_1_fu_348_p_distMap_2_ce0),
    .p_distMap_2_d0(grp_dataflow_parent_loop_1_fu_348_p_distMap_2_d0),
    .p_distMap_2_q0(p_distMap_2_q0),
    .p_distMap_2_we0(grp_dataflow_parent_loop_1_fu_348_p_distMap_2_we0),
    .p_distMap_2_address1(grp_dataflow_parent_loop_1_fu_348_p_distMap_2_address1),
    .p_distMap_2_ce1(grp_dataflow_parent_loop_1_fu_348_p_distMap_2_ce1),
    .p_distMap_2_d1(grp_dataflow_parent_loop_1_fu_348_p_distMap_2_d1),
    .p_distMap_2_q1(32'd0),
    .p_distMap_2_we1(grp_dataflow_parent_loop_1_fu_348_p_distMap_2_we1),
    .p_distMap_3_address0(grp_dataflow_parent_loop_1_fu_348_p_distMap_3_address0),
    .p_distMap_3_ce0(grp_dataflow_parent_loop_1_fu_348_p_distMap_3_ce0),
    .p_distMap_3_d0(grp_dataflow_parent_loop_1_fu_348_p_distMap_3_d0),
    .p_distMap_3_q0(p_distMap_3_q0),
    .p_distMap_3_we0(grp_dataflow_parent_loop_1_fu_348_p_distMap_3_we0),
    .p_distMap_3_address1(grp_dataflow_parent_loop_1_fu_348_p_distMap_3_address1),
    .p_distMap_3_ce1(grp_dataflow_parent_loop_1_fu_348_p_distMap_3_ce1),
    .p_distMap_3_d1(grp_dataflow_parent_loop_1_fu_348_p_distMap_3_d1),
    .p_distMap_3_q1(32'd0),
    .p_distMap_3_we1(grp_dataflow_parent_loop_1_fu_348_p_distMap_3_we1),
    .p_distMap_4_address0(grp_dataflow_parent_loop_1_fu_348_p_distMap_4_address0),
    .p_distMap_4_ce0(grp_dataflow_parent_loop_1_fu_348_p_distMap_4_ce0),
    .p_distMap_4_d0(grp_dataflow_parent_loop_1_fu_348_p_distMap_4_d0),
    .p_distMap_4_q0(p_distMap_4_q0),
    .p_distMap_4_we0(grp_dataflow_parent_loop_1_fu_348_p_distMap_4_we0),
    .p_distMap_4_address1(grp_dataflow_parent_loop_1_fu_348_p_distMap_4_address1),
    .p_distMap_4_ce1(grp_dataflow_parent_loop_1_fu_348_p_distMap_4_ce1),
    .p_distMap_4_d1(grp_dataflow_parent_loop_1_fu_348_p_distMap_4_d1),
    .p_distMap_4_q1(32'd0),
    .p_distMap_4_we1(grp_dataflow_parent_loop_1_fu_348_p_distMap_4_we1),
    .rays_TDATA(grp_dataflow_parent_loop_1_fu_348_rays_TDATA),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .yaw_TVALID(port2_TVALID_int),
    .yaw_TREADY(grp_dataflow_parent_loop_1_fu_348_yaw_TREADY),
    .y_TVALID(port1_TVALID_int),
    .y_TREADY(grp_dataflow_parent_loop_1_fu_348_y_TREADY),
    .x_TVALID(port011_TVALID_int),
    .x_TREADY(grp_dataflow_parent_loop_1_fu_348_x_TREADY),
    .orig_x_ap_vld(1'b1),
    .orig_y_ap_vld(1'b1),
    .map_width_ap_vld(1'b1),
    .map_height_ap_vld(1'b1),
    .map_resolution_ap_vld(1'b1),
    .maxRange_ap_vld(1'b1),
    .rays_TVALID(grp_dataflow_parent_loop_1_fu_348_rays_TVALID),
    .rays_TREADY(grp_dataflow_parent_loop_1_fu_348_rays_TREADY),
    .ap_start(grp_dataflow_parent_loop_1_fu_348_ap_start),
    .ap_done(grp_dataflow_parent_loop_1_fu_348_ap_done),
    .ap_ready(grp_dataflow_parent_loop_1_fu_348_ap_ready),
    .ap_idle(grp_dataflow_parent_loop_1_fu_348_ap_idle),
    .ap_continue(grp_dataflow_parent_loop_1_fu_348_ap_continue)
);

rayMarching_mac_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
rayMarching_mac_mibs_U101(
    .din0(grp_fu_434_p0),
    .din1(grp_fu_434_p1),
    .din2(grp_fu_434_p2),
    .dout(grp_fu_434_p3)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_port0_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(port0_TDATA),
    .vld_in(port0_TVALID),
    .ack_in(regslice_both_port0_U_ack_in),
    .data_out(port0_TDATA_int),
    .vld_out(port0_TVALID_int),
    .ack_out(port0_TREADY_int),
    .apdone_blk(regslice_both_port0_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_port011_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(port011_TDATA),
    .vld_in(port011_TVALID),
    .ack_in(regslice_both_port011_U_ack_in),
    .data_out(port011_TDATA_int),
    .vld_out(port011_TVALID_int),
    .ack_out(port011_TREADY_int),
    .apdone_blk(regslice_both_port011_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_port1_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(port1_TDATA),
    .vld_in(port1_TVALID),
    .ack_in(regslice_both_port1_U_ack_in),
    .data_out(port1_TDATA_int),
    .vld_out(port1_TVALID_int),
    .ack_out(port1_TREADY_int),
    .apdone_blk(regslice_both_port1_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_port2_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(port2_TDATA),
    .vld_in(port2_TVALID),
    .ack_in(regslice_both_port2_U_ack_in),
    .data_out(port2_TDATA_int),
    .vld_out(port2_TVALID_int),
    .ack_out(port2_TREADY_int),
    .apdone_blk(regslice_both_port2_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_port012_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_dataflow_parent_loop_1_fu_348_rays_TDATA),
    .vld_in(grp_dataflow_parent_loop_1_fu_348_rays_TVALID),
    .ack_in(port012_TREADY_int),
    .data_out(port012_TDATA),
    .vld_out(regslice_both_port012_U_vld_out),
    .ack_out(port012_TREADY),
    .apdone_blk(regslice_both_port012_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_1_fu_348_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_sync_reg_grp_dataflow_parent_loop_1_fu_348_ap_done <= 1'b0;
        end else if ((grp_dataflow_parent_loop_1_fu_348_ap_done == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_1_fu_348_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_1_fu_348_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_sync_reg_grp_dataflow_parent_loop_1_fu_348_ap_ready <= 1'b0;
        end else if ((grp_dataflow_parent_loop_1_fu_348_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_1_fu_348_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dataflow_parent_loop_1_fu_348_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((ap_sync_grp_dataflow_parent_loop_1_fu_348_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state4)))) begin
            grp_dataflow_parent_loop_1_fu_348_ap_start_reg <= 1'b1;
        end else if ((grp_dataflow_parent_loop_1_fu_348_ap_ready == 1'b1)) begin
            grp_dataflow_parent_loop_1_fu_348_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0)) & (icmp_ln140_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_326 <= select_ln144_1_fu_404_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_326 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0)) & (icmp_ln140_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_315 <= add_ln140_fu_378_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_315 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0)) & (icmp_ln140_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_337 <= j_fu_428_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_0_reg_337 <= 9'd0;
    end
end

always @ (*) begin
    if (((regslice_both_port012_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_port012_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
        grp_dataflow_parent_loop_1_fu_348_ap_continue = 1'b1;
    end else begin
        grp_dataflow_parent_loop_1_fu_348_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_distMap_0_address0 = zext_ln146_2_fu_420_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_distMap_0_address0 = grp_dataflow_parent_loop_1_fu_348_p_distMap_0_address0;
    end else begin
        p_distMap_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_distMap_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_distMap_0_ce0 = grp_dataflow_parent_loop_1_fu_348_p_distMap_0_ce0;
    end else begin
        p_distMap_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0)) & (icmp_ln140_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_distMap_0_we0 = 1'b1;
    end else begin
        p_distMap_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_distMap_1_address0 = zext_ln146_2_fu_420_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_distMap_1_address0 = grp_dataflow_parent_loop_1_fu_348_p_distMap_1_address0;
    end else begin
        p_distMap_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_distMap_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_distMap_1_ce0 = grp_dataflow_parent_loop_1_fu_348_p_distMap_1_ce0;
    end else begin
        p_distMap_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0)) & (icmp_ln140_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_distMap_1_we0 = 1'b1;
    end else begin
        p_distMap_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_distMap_2_address0 = zext_ln146_2_fu_420_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_distMap_2_address0 = grp_dataflow_parent_loop_1_fu_348_p_distMap_2_address0;
    end else begin
        p_distMap_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_distMap_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_distMap_2_ce0 = grp_dataflow_parent_loop_1_fu_348_p_distMap_2_ce0;
    end else begin
        p_distMap_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0)) & (icmp_ln140_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_distMap_2_we0 = 1'b1;
    end else begin
        p_distMap_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_distMap_3_address0 = zext_ln146_2_fu_420_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_distMap_3_address0 = grp_dataflow_parent_loop_1_fu_348_p_distMap_3_address0;
    end else begin
        p_distMap_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_distMap_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_distMap_3_ce0 = grp_dataflow_parent_loop_1_fu_348_p_distMap_3_ce0;
    end else begin
        p_distMap_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0)) & (icmp_ln140_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_distMap_3_we0 = 1'b1;
    end else begin
        p_distMap_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_distMap_4_address0 = zext_ln146_2_fu_420_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_distMap_4_address0 = grp_dataflow_parent_loop_1_fu_348_p_distMap_4_address0;
    end else begin
        p_distMap_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_distMap_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_distMap_4_ce0 = grp_dataflow_parent_loop_1_fu_348_p_distMap_4_ce0;
    end else begin
        p_distMap_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0)) & (icmp_ln140_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_distMap_4_we0 = 1'b1;
    end else begin
        p_distMap_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_port011_U_ack_in == 1'b1) & (port011_TVALID == 1'b1))) begin
        port011_TREADY = 1'b1;
    end else begin
        port011_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        port011_TREADY_int = grp_dataflow_parent_loop_1_fu_348_x_TREADY;
    end else begin
        port011_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln140_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        port0_TDATA_blk_n = port0_TVALID_int;
    end else begin
        port0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_both_port0_U_ack_in == 1'b1) & (port0_TVALID == 1'b1))) begin
        port0_TREADY = 1'b1;
    end else begin
        port0_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0)) & (icmp_ln140_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        port0_TREADY_int = 1'b1;
    end else begin
        port0_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_port1_U_ack_in == 1'b1) & (port1_TVALID == 1'b1))) begin
        port1_TREADY = 1'b1;
    end else begin
        port1_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        port1_TREADY_int = grp_dataflow_parent_loop_1_fu_348_y_TREADY;
    end else begin
        port1_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_port2_U_ack_in == 1'b1) & (port2_TVALID == 1'b1))) begin
        port2_TREADY = 1'b1;
    end else begin
        port2_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        port2_TREADY_int = grp_dataflow_parent_loop_1_fu_348_yaw_TREADY;
    end else begin
        port2_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0)) & (icmp_ln140_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0)) & (icmp_ln140_fu_372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((regslice_both_port012_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln140_fu_378_p2 = (indvar_flatten_reg_315 + 18'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state2 = ((icmp_ln140_fu_372_p2 == 1'd0) & (port0_TVALID_int == 1'b0));
end

always @ (*) begin
    ap_block_state4_on_subcall_done = ((ap_sync_grp_dataflow_parent_loop_1_fu_348_ap_ready & ap_sync_grp_dataflow_parent_loop_1_fu_348_ap_done) == 1'b0);
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_grp_dataflow_parent_loop_1_fu_348_ap_done = (grp_dataflow_parent_loop_1_fu_348_ap_done | ap_sync_reg_grp_dataflow_parent_loop_1_fu_348_ap_done);

assign ap_sync_grp_dataflow_parent_loop_1_fu_348_ap_ready = (grp_dataflow_parent_loop_1_fu_348_ap_ready | ap_sync_reg_grp_dataflow_parent_loop_1_fu_348_ap_ready);

assign grp_dataflow_parent_loop_1_fu_348_ap_start = grp_dataflow_parent_loop_1_fu_348_ap_start_reg;

assign grp_dataflow_parent_loop_1_fu_348_rays_TREADY = (port012_TREADY_int & ap_CS_fsm_state4);

assign grp_fu_434_p0 = grp_fu_434_p00;

assign grp_fu_434_p00 = select_ln144_1_fu_404_p3;

assign grp_fu_434_p1 = 18'd485;

assign grp_fu_434_p2 = grp_fu_434_p20;

assign grp_fu_434_p20 = select_ln144_fu_396_p3;

assign i_fu_384_p2 = (i_0_reg_326 + 9'd1);

assign icmp_ln140_fu_372_p2 = ((indvar_flatten_reg_315 == 18'd183815) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_390_p2 = ((j_0_reg_337 == 9'd485) ? 1'b1 : 1'b0);

assign j_fu_428_p2 = (select_ln144_fu_396_p3 + 9'd1);

assign port012_TVALID = regslice_both_port012_U_vld_out;

assign select_ln144_1_fu_404_p3 = ((icmp_ln141_fu_390_p2[0:0] === 1'b1) ? i_fu_384_p2 : i_0_reg_326);

assign select_ln144_fu_396_p3 = ((icmp_ln141_fu_390_p2[0:0] === 1'b1) ? 9'd0 : j_0_reg_337);

assign zext_ln146_2_fu_420_p1 = grp_fu_434_p3;

endmodule //rayMarching
