// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_HConvH_proc6.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_HConvH_proc6::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_HConvH_proc6::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Loop_HConvH_proc6::ap_ST_fsm_state1 = "1";
const sc_lv<3> Loop_HConvH_proc6::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Loop_HConvH_proc6::ap_ST_fsm_state4 = "100";
const bool Loop_HConvH_proc6::ap_const_boolean_1 = true;
const sc_lv<32> Loop_HConvH_proc6::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Loop_HConvH_proc6::ap_const_lv32_1 = "1";
const bool Loop_HConvH_proc6::ap_const_boolean_0 = false;
const sc_lv<1> Loop_HConvH_proc6::ap_const_lv1_0 = "0";
const sc_lv<1> Loop_HConvH_proc6::ap_const_lv1_1 = "1";
const sc_lv<64> Loop_HConvH_proc6::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<11> Loop_HConvH_proc6::ap_const_lv11_0 = "00000000000";
const sc_lv<64> Loop_HConvH_proc6::ap_const_lv64_1 = "1";
const sc_lv<32> Loop_HConvH_proc6::ap_const_lv32_5 = "101";
const sc_lv<32> Loop_HConvH_proc6::ap_const_lv32_2 = "10";
const sc_lv<32> Loop_HConvH_proc6::ap_const_lv32_6F = "1101111";
const sc_lv<32> Loop_HConvH_proc6::ap_const_lv32_10A = "100001010";
const sc_lv<32> Loop_HConvH_proc6::ap_const_lv32_1F2 = "111110010";
const sc_lv<32> Loop_HConvH_proc6::ap_const_lv32_2D4 = "1011010100";
const sc_lv<32> Loop_HConvH_proc6::ap_const_lv32_335 = "1100110101";
const sc_lv<11> Loop_HConvH_proc6::ap_const_lv11_9 = "1001";
const sc_lv<11> Loop_HConvH_proc6::ap_const_lv11_1 = "1";

Loop_HConvH_proc6::Loop_HConvH_proc6(sc_module_name name) : sc_module(name), mVcdFile(0) {
    regslice_both_src_V_U = new regslice_both<32>("regslice_both_src_V_U");
    regslice_both_src_V_U->ap_clk(ap_clk);
    regslice_both_src_V_U->ap_rst(ap_rst);
    regslice_both_src_V_U->data_in(src_V_TDATA);
    regslice_both_src_V_U->vld_in(src_V_TVALID);
    regslice_both_src_V_U->ack_in(regslice_both_src_V_U_ack_in);
    regslice_both_src_V_U->data_out(src_V_TDATA_int);
    regslice_both_src_V_U->vld_out(src_V_TVALID_int);
    regslice_both_src_V_U->ack_out(src_V_TREADY_int);
    regslice_both_src_V_U->apdone_blk(regslice_both_src_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln139_fu_221_p2);
    sensitive << ( indvar_flatten_reg_141 );

    SC_METHOD(thread_add_ln147_10_fu_415_p2);
    sensitive << ( add_ln147_9_fu_409_p2 );
    sensitive << ( add_ln147_6_fu_391_p2 );

    SC_METHOD(thread_add_ln147_1_fu_367_p2);
    sensitive << ( add_ln147_fu_361_p2 );
    sensitive << ( shl_ln147_3_fu_355_p2 );

    SC_METHOD(thread_add_ln147_2_fu_373_p2);
    sensitive << ( mul_ln147_fu_295_p2 );
    sensitive << ( mul_ln147_1_fu_301_p2 );

    SC_METHOD(thread_add_ln147_3_fu_379_p2);
    sensitive << ( add_ln147_2_fu_373_p2 );
    sensitive << ( shl_ln147_1_fu_289_p2 );

    SC_METHOD(thread_add_ln147_4_fu_438_p2);
    sensitive << ( add_ln147_1_reg_528 );
    sensitive << ( add_ln147_3_reg_533 );

    SC_METHOD(thread_add_ln147_5_fu_385_p2);
    sensitive << ( mul_ln147_3_fu_313_p2 );
    sensitive << ( mul_ln147_4_fu_319_p2 );

    SC_METHOD(thread_add_ln147_6_fu_391_p2);
    sensitive << ( add_ln147_5_fu_385_p2 );
    sensitive << ( mul_ln147_2_fu_307_p2 );

    SC_METHOD(thread_add_ln147_7_fu_397_p2);
    sensitive << ( mul_ln147_5_fu_325_p2 );
    sensitive << ( mul_ln147_6_fu_331_p2 );

    SC_METHOD(thread_add_ln147_8_fu_403_p2);
    sensitive << ( mul_ln147_7_fu_337_p2 );
    sensitive << ( mul_ln147_8_fu_343_p2 );

    SC_METHOD(thread_add_ln147_9_fu_409_p2);
    sensitive << ( add_ln147_8_fu_403_p2 );
    sensitive << ( add_ln147_7_fu_397_p2 );

    SC_METHOD(thread_add_ln147_fu_361_p2);
    sensitive << ( shl_ln147_2_fu_349_p2 );
    sensitive << ( shl_ln147_fu_283_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( hconv_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln139_fu_216_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln149_reg_543 );
    sensitive << ( src_V_TVALID_int );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( hconv_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln139_fu_216_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln149_reg_543 );
    sensitive << ( src_V_TVALID_int );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( hconv_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln139_fu_216_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln149_reg_543 );
    sensitive << ( src_V_TVALID_int );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( height_empty_n );
    sensitive << ( width_empty_n );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);
    sensitive << ( icmp_ln139_fu_216_p2 );
    sensitive << ( src_V_TVALID_int );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( hconv_V_full_n );
    sensitive << ( icmp_ln149_reg_543 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln139_fu_216_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_bound_fu_171_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_171_p00 );

    SC_METHOD(thread_bound_fu_171_p00);
    sensitive << ( width_dout );

    SC_METHOD(thread_bound_fu_171_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_171_p10 );

    SC_METHOD(thread_bound_fu_171_p10);
    sensitive << ( height_dout );

    SC_METHOD(thread_bound_fu_171_p2);
    sensitive << ( bound_fu_171_p0 );
    sensitive << ( bound_fu_171_p1 );

    SC_METHOD(thread_hconv_V_blk_n);
    sensitive << ( hconv_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln149_reg_543 );

    SC_METHOD(thread_hconv_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln149_reg_543 );
    sensitive << ( add_ln147_10_reg_538 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( add_ln147_4_fu_438_p2 );

    SC_METHOD(thread_hconv_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln149_reg_543 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_height_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( height_empty_n );

    SC_METHOD(thread_height_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( height_empty_n );
    sensitive << ( width_empty_n );

    SC_METHOD(thread_icmp_ln139_fu_216_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( indvar_flatten_reg_141 );
    sensitive << ( bound_reg_514 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln140_fu_211_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( width_read_reg_509 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( zext_ln140_fu_207_p1 );

    SC_METHOD(thread_icmp_ln149_fu_421_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln139_fu_216_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( select_ln140_fu_275_p3 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_mul_ln147_1_fu_301_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( hwin_2_fu_84 );

    SC_METHOD(thread_mul_ln147_1_fu_301_p2);
    sensitive << ( mul_ln147_1_fu_301_p1 );

    SC_METHOD(thread_mul_ln147_2_fu_307_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( hwin_3_fu_88 );

    SC_METHOD(thread_mul_ln147_2_fu_307_p2);
    sensitive << ( mul_ln147_2_fu_307_p1 );

    SC_METHOD(thread_mul_ln147_3_fu_313_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( hwin_4_fu_92 );

    SC_METHOD(thread_mul_ln147_3_fu_313_p2);
    sensitive << ( mul_ln147_3_fu_313_p1 );

    SC_METHOD(thread_mul_ln147_4_fu_319_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( hwin_5_fu_96 );

    SC_METHOD(thread_mul_ln147_4_fu_319_p2);
    sensitive << ( mul_ln147_4_fu_319_p1 );

    SC_METHOD(thread_mul_ln147_5_fu_325_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( hwin_6_fu_100 );

    SC_METHOD(thread_mul_ln147_5_fu_325_p2);
    sensitive << ( mul_ln147_5_fu_325_p1 );

    SC_METHOD(thread_mul_ln147_6_fu_331_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( hwin_7_fu_104 );

    SC_METHOD(thread_mul_ln147_6_fu_331_p2);
    sensitive << ( mul_ln147_6_fu_331_p1 );

    SC_METHOD(thread_mul_ln147_7_fu_337_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( hwin_8_fu_108 );

    SC_METHOD(thread_mul_ln147_7_fu_337_p2);
    sensitive << ( mul_ln147_7_fu_337_p1 );

    SC_METHOD(thread_mul_ln147_8_fu_343_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( hwin_9_fu_112 );

    SC_METHOD(thread_mul_ln147_8_fu_343_p2);
    sensitive << ( mul_ln147_8_fu_343_p1 );

    SC_METHOD(thread_mul_ln147_fu_295_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( hwin_1_fu_80 );

    SC_METHOD(thread_mul_ln147_fu_295_p2);
    sensitive << ( mul_ln147_fu_295_p1 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_row_fu_432_p2);
    sensitive << ( select_ln140_fu_275_p3 );

    SC_METHOD(thread_select_ln140_fu_275_p3);
    sensitive << ( row_0_i_i_reg_152 );
    sensitive << ( icmp_ln140_fu_211_p2 );

    SC_METHOD(thread_shl_ln147_1_fu_289_p2);
    sensitive << ( hwin_1_1_i_fu_76 );

    SC_METHOD(thread_shl_ln147_2_fu_349_p2);
    sensitive << ( src_V_TDATA_int );

    SC_METHOD(thread_shl_ln147_3_fu_355_p2);
    sensitive << ( src_V_TDATA_int );

    SC_METHOD(thread_shl_ln147_fu_283_p2);
    sensitive << ( hwin_1_1_i_fu_76 );

    SC_METHOD(thread_src_V_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln139_fu_216_p2 );
    sensitive << ( src_V_TVALID_int );

    SC_METHOD(thread_src_V_TREADY);
    sensitive << ( src_V_TVALID );
    sensitive << ( regslice_both_src_V_U_ack_in );

    SC_METHOD(thread_src_V_TREADY_int);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln139_fu_216_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_width_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( width_empty_n );

    SC_METHOD(thread_width_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( height_empty_n );
    sensitive << ( width_empty_n );

    SC_METHOD(thread_zext_ln140_fu_207_p1);
    sensitive << ( row_0_i_i_reg_152 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( height_empty_n );
    sensitive << ( width_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln139_fu_216_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_HConvH_proc6_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, height_dout, "(port)height_dout");
    sc_trace(mVcdFile, height_empty_n, "(port)height_empty_n");
    sc_trace(mVcdFile, height_read, "(port)height_read");
    sc_trace(mVcdFile, width_dout, "(port)width_dout");
    sc_trace(mVcdFile, width_empty_n, "(port)width_empty_n");
    sc_trace(mVcdFile, width_read, "(port)width_read");
    sc_trace(mVcdFile, src_V_TDATA, "(port)src_V_TDATA");
    sc_trace(mVcdFile, src_V_TVALID, "(port)src_V_TVALID");
    sc_trace(mVcdFile, src_V_TREADY, "(port)src_V_TREADY");
    sc_trace(mVcdFile, hconv_V_din, "(port)hconv_V_din");
    sc_trace(mVcdFile, hconv_V_full_n, "(port)hconv_V_full_n");
    sc_trace(mVcdFile, hconv_V_write, "(port)hconv_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, height_blk_n, "height_blk_n");
    sc_trace(mVcdFile, width_blk_n, "width_blk_n");
    sc_trace(mVcdFile, src_V_TDATA_blk_n, "src_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln139_fu_216_p2, "icmp_ln139_fu_216_p2");
    sc_trace(mVcdFile, hconv_V_blk_n, "hconv_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, icmp_ln149_reg_543, "icmp_ln149_reg_543");
    sc_trace(mVcdFile, indvar_flatten_reg_141, "indvar_flatten_reg_141");
    sc_trace(mVcdFile, row_0_i_i_reg_152, "row_0_i_i_reg_152");
    sc_trace(mVcdFile, width_read_reg_509, "width_read_reg_509");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, bound_fu_171_p2, "bound_fu_171_p2");
    sc_trace(mVcdFile, bound_reg_514, "bound_reg_514");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln139_fu_221_p2, "add_ln139_fu_221_p2");
    sc_trace(mVcdFile, add_ln147_1_fu_367_p2, "add_ln147_1_fu_367_p2");
    sc_trace(mVcdFile, add_ln147_1_reg_528, "add_ln147_1_reg_528");
    sc_trace(mVcdFile, add_ln147_3_fu_379_p2, "add_ln147_3_fu_379_p2");
    sc_trace(mVcdFile, add_ln147_3_reg_533, "add_ln147_3_reg_533");
    sc_trace(mVcdFile, add_ln147_10_fu_415_p2, "add_ln147_10_fu_415_p2");
    sc_trace(mVcdFile, add_ln147_10_reg_538, "add_ln147_10_reg_538");
    sc_trace(mVcdFile, icmp_ln149_fu_421_p2, "icmp_ln149_fu_421_p2");
    sc_trace(mVcdFile, row_fu_432_p2, "row_fu_432_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, hwin_1_1_i_fu_76, "hwin_1_1_i_fu_76");
    sc_trace(mVcdFile, hwin_1_fu_80, "hwin_1_fu_80");
    sc_trace(mVcdFile, hwin_2_fu_84, "hwin_2_fu_84");
    sc_trace(mVcdFile, hwin_3_fu_88, "hwin_3_fu_88");
    sc_trace(mVcdFile, hwin_4_fu_92, "hwin_4_fu_92");
    sc_trace(mVcdFile, hwin_5_fu_96, "hwin_5_fu_96");
    sc_trace(mVcdFile, hwin_6_fu_100, "hwin_6_fu_100");
    sc_trace(mVcdFile, hwin_7_fu_104, "hwin_7_fu_104");
    sc_trace(mVcdFile, hwin_8_fu_108, "hwin_8_fu_108");
    sc_trace(mVcdFile, hwin_9_fu_112, "hwin_9_fu_112");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, bound_fu_171_p0, "bound_fu_171_p0");
    sc_trace(mVcdFile, bound_fu_171_p1, "bound_fu_171_p1");
    sc_trace(mVcdFile, zext_ln140_fu_207_p1, "zext_ln140_fu_207_p1");
    sc_trace(mVcdFile, icmp_ln140_fu_211_p2, "icmp_ln140_fu_211_p2");
    sc_trace(mVcdFile, mul_ln147_fu_295_p1, "mul_ln147_fu_295_p1");
    sc_trace(mVcdFile, mul_ln147_1_fu_301_p1, "mul_ln147_1_fu_301_p1");
    sc_trace(mVcdFile, mul_ln147_2_fu_307_p1, "mul_ln147_2_fu_307_p1");
    sc_trace(mVcdFile, mul_ln147_3_fu_313_p1, "mul_ln147_3_fu_313_p1");
    sc_trace(mVcdFile, mul_ln147_4_fu_319_p1, "mul_ln147_4_fu_319_p1");
    sc_trace(mVcdFile, mul_ln147_5_fu_325_p1, "mul_ln147_5_fu_325_p1");
    sc_trace(mVcdFile, mul_ln147_6_fu_331_p1, "mul_ln147_6_fu_331_p1");
    sc_trace(mVcdFile, mul_ln147_7_fu_337_p1, "mul_ln147_7_fu_337_p1");
    sc_trace(mVcdFile, mul_ln147_8_fu_343_p1, "mul_ln147_8_fu_343_p1");
    sc_trace(mVcdFile, shl_ln147_2_fu_349_p2, "shl_ln147_2_fu_349_p2");
    sc_trace(mVcdFile, shl_ln147_fu_283_p2, "shl_ln147_fu_283_p2");
    sc_trace(mVcdFile, add_ln147_fu_361_p2, "add_ln147_fu_361_p2");
    sc_trace(mVcdFile, shl_ln147_3_fu_355_p2, "shl_ln147_3_fu_355_p2");
    sc_trace(mVcdFile, mul_ln147_fu_295_p2, "mul_ln147_fu_295_p2");
    sc_trace(mVcdFile, mul_ln147_1_fu_301_p2, "mul_ln147_1_fu_301_p2");
    sc_trace(mVcdFile, add_ln147_2_fu_373_p2, "add_ln147_2_fu_373_p2");
    sc_trace(mVcdFile, shl_ln147_1_fu_289_p2, "shl_ln147_1_fu_289_p2");
    sc_trace(mVcdFile, mul_ln147_3_fu_313_p2, "mul_ln147_3_fu_313_p2");
    sc_trace(mVcdFile, mul_ln147_4_fu_319_p2, "mul_ln147_4_fu_319_p2");
    sc_trace(mVcdFile, add_ln147_5_fu_385_p2, "add_ln147_5_fu_385_p2");
    sc_trace(mVcdFile, mul_ln147_2_fu_307_p2, "mul_ln147_2_fu_307_p2");
    sc_trace(mVcdFile, mul_ln147_5_fu_325_p2, "mul_ln147_5_fu_325_p2");
    sc_trace(mVcdFile, mul_ln147_6_fu_331_p2, "mul_ln147_6_fu_331_p2");
    sc_trace(mVcdFile, mul_ln147_7_fu_337_p2, "mul_ln147_7_fu_337_p2");
    sc_trace(mVcdFile, mul_ln147_8_fu_343_p2, "mul_ln147_8_fu_343_p2");
    sc_trace(mVcdFile, add_ln147_8_fu_403_p2, "add_ln147_8_fu_403_p2");
    sc_trace(mVcdFile, add_ln147_7_fu_397_p2, "add_ln147_7_fu_397_p2");
    sc_trace(mVcdFile, add_ln147_9_fu_409_p2, "add_ln147_9_fu_409_p2");
    sc_trace(mVcdFile, add_ln147_6_fu_391_p2, "add_ln147_6_fu_391_p2");
    sc_trace(mVcdFile, select_ln140_fu_275_p3, "select_ln140_fu_275_p3");
    sc_trace(mVcdFile, add_ln147_4_fu_438_p2, "add_ln147_4_fu_438_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, regslice_both_src_V_U_apdone_blk, "regslice_both_src_V_U_apdone_blk");
    sc_trace(mVcdFile, src_V_TDATA_int, "src_V_TDATA_int");
    sc_trace(mVcdFile, src_V_TVALID_int, "src_V_TVALID_int");
    sc_trace(mVcdFile, src_V_TREADY_int, "src_V_TREADY_int");
    sc_trace(mVcdFile, regslice_both_src_V_U_ack_in, "regslice_both_src_V_U_ack_in");
    sc_trace(mVcdFile, bound_fu_171_p00, "bound_fu_171_p00");
    sc_trace(mVcdFile, bound_fu_171_p10, "bound_fu_171_p10");
#endif

    }
}

Loop_HConvH_proc6::~Loop_HConvH_proc6() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete regslice_both_src_V_U;
}

void Loop_HConvH_proc6::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read())))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln139_fu_216_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_reg_141 = add_ln139_fu_221_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read())))) {
        indvar_flatten_reg_141 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln139_fu_216_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        row_0_i_i_reg_152 = row_fu_432_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read())))) {
        row_0_i_i_reg_152 = ap_const_lv11_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln139_fu_216_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        add_ln147_10_reg_538 = add_ln147_10_fu_415_p2.read();
        add_ln147_1_reg_528 = add_ln147_1_fu_367_p2.read();
        add_ln147_3_reg_533 = add_ln147_3_fu_379_p2.read();
        icmp_ln149_reg_543 = icmp_ln149_fu_421_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read())))) {
        bound_reg_514 = bound_fu_171_p2.read();
        width_read_reg_509 = width_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        hwin_1_1_i_fu_76 = hwin_1_fu_80.read();
        hwin_1_fu_80 = hwin_2_fu_84.read();
        hwin_2_fu_84 = hwin_3_fu_88.read();
        hwin_3_fu_88 = hwin_4_fu_92.read();
        hwin_4_fu_92 = hwin_5_fu_96.read();
        hwin_5_fu_96 = hwin_6_fu_100.read();
        hwin_6_fu_100 = hwin_7_fu_104.read();
        hwin_7_fu_104 = hwin_8_fu_108.read();
        hwin_8_fu_108 = hwin_9_fu_112.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln139_fu_216_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        hwin_9_fu_112 = src_V_TDATA_int.read();
    }
}

void Loop_HConvH_proc6::thread_add_ln139_fu_221_p2() {
    add_ln139_fu_221_p2 = (!indvar_flatten_reg_141.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(indvar_flatten_reg_141.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void Loop_HConvH_proc6::thread_add_ln147_10_fu_415_p2() {
    add_ln147_10_fu_415_p2 = (!add_ln147_9_fu_409_p2.read().is_01() || !add_ln147_6_fu_391_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln147_9_fu_409_p2.read()) + sc_biguint<32>(add_ln147_6_fu_391_p2.read()));
}

void Loop_HConvH_proc6::thread_add_ln147_1_fu_367_p2() {
    add_ln147_1_fu_367_p2 = (!add_ln147_fu_361_p2.read().is_01() || !shl_ln147_3_fu_355_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln147_fu_361_p2.read()) + sc_biguint<32>(shl_ln147_3_fu_355_p2.read()));
}

void Loop_HConvH_proc6::thread_add_ln147_2_fu_373_p2() {
    add_ln147_2_fu_373_p2 = (!mul_ln147_fu_295_p2.read().is_01() || !mul_ln147_1_fu_301_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln147_fu_295_p2.read()) + sc_biguint<32>(mul_ln147_1_fu_301_p2.read()));
}

void Loop_HConvH_proc6::thread_add_ln147_3_fu_379_p2() {
    add_ln147_3_fu_379_p2 = (!add_ln147_2_fu_373_p2.read().is_01() || !shl_ln147_1_fu_289_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln147_2_fu_373_p2.read()) + sc_biguint<32>(shl_ln147_1_fu_289_p2.read()));
}

void Loop_HConvH_proc6::thread_add_ln147_4_fu_438_p2() {
    add_ln147_4_fu_438_p2 = (!add_ln147_3_reg_533.read().is_01() || !add_ln147_1_reg_528.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln147_3_reg_533.read()) + sc_biguint<32>(add_ln147_1_reg_528.read()));
}

void Loop_HConvH_proc6::thread_add_ln147_5_fu_385_p2() {
    add_ln147_5_fu_385_p2 = (!mul_ln147_3_fu_313_p2.read().is_01() || !mul_ln147_4_fu_319_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln147_3_fu_313_p2.read()) + sc_biguint<32>(mul_ln147_4_fu_319_p2.read()));
}

void Loop_HConvH_proc6::thread_add_ln147_6_fu_391_p2() {
    add_ln147_6_fu_391_p2 = (!add_ln147_5_fu_385_p2.read().is_01() || !mul_ln147_2_fu_307_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln147_5_fu_385_p2.read()) + sc_biguint<32>(mul_ln147_2_fu_307_p2.read()));
}

void Loop_HConvH_proc6::thread_add_ln147_7_fu_397_p2() {
    add_ln147_7_fu_397_p2 = (!mul_ln147_5_fu_325_p2.read().is_01() || !mul_ln147_6_fu_331_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln147_5_fu_325_p2.read()) + sc_biguint<32>(mul_ln147_6_fu_331_p2.read()));
}

void Loop_HConvH_proc6::thread_add_ln147_8_fu_403_p2() {
    add_ln147_8_fu_403_p2 = (!mul_ln147_7_fu_337_p2.read().is_01() || !mul_ln147_8_fu_343_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln147_7_fu_337_p2.read()) + sc_biguint<32>(mul_ln147_8_fu_343_p2.read()));
}

void Loop_HConvH_proc6::thread_add_ln147_9_fu_409_p2() {
    add_ln147_9_fu_409_p2 = (!add_ln147_8_fu_403_p2.read().is_01() || !add_ln147_7_fu_397_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln147_8_fu_403_p2.read()) + sc_biguint<32>(add_ln147_7_fu_397_p2.read()));
}

void Loop_HConvH_proc6::thread_add_ln147_fu_361_p2() {
    add_ln147_fu_361_p2 = (!shl_ln147_2_fu_349_p2.read().is_01() || !shl_ln147_fu_283_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(shl_ln147_2_fu_349_p2.read()) + sc_biguint<32>(shl_ln147_fu_283_p2.read()));
}

void Loop_HConvH_proc6::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Loop_HConvH_proc6::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_HConvH_proc6::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void Loop_HConvH_proc6::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_HConvH_proc6::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln149_reg_543.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, hconv_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(icmp_ln139_fu_216_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_V_TVALID_int.read())));
}

void Loop_HConvH_proc6::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln149_reg_543.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, hconv_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(icmp_ln139_fu_216_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_V_TVALID_int.read())));
}

void Loop_HConvH_proc6::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln149_reg_543.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, hconv_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(icmp_ln139_fu_216_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_V_TVALID_int.read())));
}

void Loop_HConvH_proc6::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()));
}

void Loop_HConvH_proc6::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = (esl_seteq<1,1,1>(icmp_ln139_fu_216_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, src_V_TVALID_int.read()));
}

void Loop_HConvH_proc6::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(icmp_ln149_reg_543.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, hconv_V_full_n.read()));
}

void Loop_HConvH_proc6::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln139_fu_216_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Loop_HConvH_proc6::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_HConvH_proc6::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_HConvH_proc6::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_HConvH_proc6::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_HConvH_proc6::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void Loop_HConvH_proc6::thread_bound_fu_171_p0() {
    bound_fu_171_p0 =  (sc_lv<32>) (bound_fu_171_p00.read());
}

void Loop_HConvH_proc6::thread_bound_fu_171_p00() {
    bound_fu_171_p00 = esl_zext<64,32>(width_dout.read());
}

void Loop_HConvH_proc6::thread_bound_fu_171_p1() {
    bound_fu_171_p1 =  (sc_lv<32>) (bound_fu_171_p10.read());
}

void Loop_HConvH_proc6::thread_bound_fu_171_p10() {
    bound_fu_171_p10 = esl_zext<64,32>(height_dout.read());
}

void Loop_HConvH_proc6::thread_bound_fu_171_p2() {
    bound_fu_171_p2 = (!bound_fu_171_p0.read().is_01() || !bound_fu_171_p1.read().is_01())? sc_lv<64>(): sc_biguint<32>(bound_fu_171_p0.read()) * sc_biguint<32>(bound_fu_171_p1.read());
}

void Loop_HConvH_proc6::thread_hconv_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln149_reg_543.read(), ap_const_lv1_1))) {
        hconv_V_blk_n = hconv_V_full_n.read();
    } else {
        hconv_V_blk_n = ap_const_logic_1;
    }
}

void Loop_HConvH_proc6::thread_hconv_V_din() {
    hconv_V_din = (!add_ln147_10_reg_538.read().is_01() || !add_ln147_4_fu_438_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln147_10_reg_538.read()) + sc_biguint<32>(add_ln147_4_fu_438_p2.read()));
}

void Loop_HConvH_proc6::thread_hconv_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln149_reg_543.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        hconv_V_write = ap_const_logic_1;
    } else {
        hconv_V_write = ap_const_logic_0;
    }
}

void Loop_HConvH_proc6::thread_height_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        height_blk_n = height_empty_n.read();
    } else {
        height_blk_n = ap_const_logic_1;
    }
}

void Loop_HConvH_proc6::thread_height_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read())))) {
        height_read = ap_const_logic_1;
    } else {
        height_read = ap_const_logic_0;
    }
}

void Loop_HConvH_proc6::thread_icmp_ln139_fu_216_p2() {
    icmp_ln139_fu_216_p2 = (!indvar_flatten_reg_141.read().is_01() || !bound_reg_514.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_141.read() == bound_reg_514.read());
}

void Loop_HConvH_proc6::thread_icmp_ln140_fu_211_p2() {
    icmp_ln140_fu_211_p2 = (!zext_ln140_fu_207_p1.read().is_01() || !width_read_reg_509.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln140_fu_207_p1.read()) < sc_bigint<32>(width_read_reg_509.read()));
}

void Loop_HConvH_proc6::thread_icmp_ln149_fu_421_p2() {
    icmp_ln149_fu_421_p2 = (!select_ln140_fu_275_p3.read().is_01() || !ap_const_lv11_9.is_01())? sc_lv<1>(): (sc_biguint<11>(select_ln140_fu_275_p3.read()) > sc_biguint<11>(ap_const_lv11_9));
}

void Loop_HConvH_proc6::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void Loop_HConvH_proc6::thread_mul_ln147_1_fu_301_p1() {
    mul_ln147_1_fu_301_p1 = hwin_2_fu_84.read();
}

void Loop_HConvH_proc6::thread_mul_ln147_1_fu_301_p2() {
    mul_ln147_1_fu_301_p2 = (!ap_const_lv32_10A.is_01() || !mul_ln147_1_fu_301_p1.read().is_01())? sc_lv<32>(): sc_biguint<32>(ap_const_lv32_10A) * sc_bigint<32>(mul_ln147_1_fu_301_p1.read());
}

void Loop_HConvH_proc6::thread_mul_ln147_2_fu_307_p1() {
    mul_ln147_2_fu_307_p1 = hwin_3_fu_88.read();
}

void Loop_HConvH_proc6::thread_mul_ln147_2_fu_307_p2() {
    mul_ln147_2_fu_307_p2 = (!ap_const_lv32_1F2.is_01() || !mul_ln147_2_fu_307_p1.read().is_01())? sc_lv<32>(): sc_biguint<32>(ap_const_lv32_1F2) * sc_bigint<32>(mul_ln147_2_fu_307_p1.read());
}

void Loop_HConvH_proc6::thread_mul_ln147_3_fu_313_p1() {
    mul_ln147_3_fu_313_p1 = hwin_4_fu_92.read();
}

void Loop_HConvH_proc6::thread_mul_ln147_3_fu_313_p2() {
    mul_ln147_3_fu_313_p2 = (!ap_const_lv32_2D4.is_01() || !mul_ln147_3_fu_313_p1.read().is_01())? sc_lv<32>(): sc_biguint<32>(ap_const_lv32_2D4) * sc_bigint<32>(mul_ln147_3_fu_313_p1.read());
}

void Loop_HConvH_proc6::thread_mul_ln147_4_fu_319_p1() {
    mul_ln147_4_fu_319_p1 = hwin_5_fu_96.read();
}

void Loop_HConvH_proc6::thread_mul_ln147_4_fu_319_p2() {
    mul_ln147_4_fu_319_p2 = (!ap_const_lv32_335.is_01() || !mul_ln147_4_fu_319_p1.read().is_01())? sc_lv<32>(): sc_biguint<32>(ap_const_lv32_335) * sc_bigint<32>(mul_ln147_4_fu_319_p1.read());
}

void Loop_HConvH_proc6::thread_mul_ln147_5_fu_325_p1() {
    mul_ln147_5_fu_325_p1 = hwin_6_fu_100.read();
}

void Loop_HConvH_proc6::thread_mul_ln147_5_fu_325_p2() {
    mul_ln147_5_fu_325_p2 = (!ap_const_lv32_2D4.is_01() || !mul_ln147_5_fu_325_p1.read().is_01())? sc_lv<32>(): sc_biguint<32>(ap_const_lv32_2D4) * sc_bigint<32>(mul_ln147_5_fu_325_p1.read());
}

void Loop_HConvH_proc6::thread_mul_ln147_6_fu_331_p1() {
    mul_ln147_6_fu_331_p1 = hwin_7_fu_104.read();
}

void Loop_HConvH_proc6::thread_mul_ln147_6_fu_331_p2() {
    mul_ln147_6_fu_331_p2 = (!ap_const_lv32_1F2.is_01() || !mul_ln147_6_fu_331_p1.read().is_01())? sc_lv<32>(): sc_biguint<32>(ap_const_lv32_1F2) * sc_bigint<32>(mul_ln147_6_fu_331_p1.read());
}

void Loop_HConvH_proc6::thread_mul_ln147_7_fu_337_p1() {
    mul_ln147_7_fu_337_p1 = hwin_8_fu_108.read();
}

void Loop_HConvH_proc6::thread_mul_ln147_7_fu_337_p2() {
    mul_ln147_7_fu_337_p2 = (!ap_const_lv32_10A.is_01() || !mul_ln147_7_fu_337_p1.read().is_01())? sc_lv<32>(): sc_biguint<32>(ap_const_lv32_10A) * sc_bigint<32>(mul_ln147_7_fu_337_p1.read());
}

void Loop_HConvH_proc6::thread_mul_ln147_8_fu_343_p1() {
    mul_ln147_8_fu_343_p1 = hwin_9_fu_112.read();
}

void Loop_HConvH_proc6::thread_mul_ln147_8_fu_343_p2() {
    mul_ln147_8_fu_343_p2 = (!ap_const_lv32_6F.is_01() || !mul_ln147_8_fu_343_p1.read().is_01())? sc_lv<32>(): sc_biguint<32>(ap_const_lv32_6F) * sc_bigint<32>(mul_ln147_8_fu_343_p1.read());
}

void Loop_HConvH_proc6::thread_mul_ln147_fu_295_p1() {
    mul_ln147_fu_295_p1 = hwin_1_fu_80.read();
}

void Loop_HConvH_proc6::thread_mul_ln147_fu_295_p2() {
    mul_ln147_fu_295_p2 = (!ap_const_lv32_6F.is_01() || !mul_ln147_fu_295_p1.read().is_01())? sc_lv<32>(): sc_biguint<32>(ap_const_lv32_6F) * sc_bigint<32>(mul_ln147_fu_295_p1.read());
}

void Loop_HConvH_proc6::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void Loop_HConvH_proc6::thread_row_fu_432_p2() {
    row_fu_432_p2 = (!select_ln140_fu_275_p3.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(select_ln140_fu_275_p3.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void Loop_HConvH_proc6::thread_select_ln140_fu_275_p3() {
    select_ln140_fu_275_p3 = (!icmp_ln140_fu_211_p2.read()[0].is_01())? sc_lv<11>(): ((icmp_ln140_fu_211_p2.read()[0].to_bool())? row_0_i_i_reg_152.read(): ap_const_lv11_0);
}

void Loop_HConvH_proc6::thread_shl_ln147_1_fu_289_p2() {
    shl_ln147_1_fu_289_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): hwin_1_1_i_fu_76.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void Loop_HConvH_proc6::thread_shl_ln147_2_fu_349_p2() {
    shl_ln147_2_fu_349_p2 = (!ap_const_lv32_5.is_01())? sc_lv<32>(): src_V_TDATA_int.read() << (unsigned short)ap_const_lv32_5.to_uint();
}

void Loop_HConvH_proc6::thread_shl_ln147_3_fu_355_p2() {
    shl_ln147_3_fu_355_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): src_V_TDATA_int.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void Loop_HConvH_proc6::thread_shl_ln147_fu_283_p2() {
    shl_ln147_fu_283_p2 = (!ap_const_lv32_5.is_01())? sc_lv<32>(): hwin_1_1_i_fu_76.read() << (unsigned short)ap_const_lv32_5.to_uint();
}

void Loop_HConvH_proc6::thread_src_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln139_fu_216_p2.read(), ap_const_lv1_0))) {
        src_V_TDATA_blk_n = src_V_TVALID_int.read();
    } else {
        src_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void Loop_HConvH_proc6::thread_src_V_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, src_V_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_src_V_U_ack_in.read()))) {
        src_V_TREADY = ap_const_logic_1;
    } else {
        src_V_TREADY = ap_const_logic_0;
    }
}

void Loop_HConvH_proc6::thread_src_V_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln139_fu_216_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        src_V_TREADY_int = ap_const_logic_1;
    } else {
        src_V_TREADY_int = ap_const_logic_0;
    }
}

void Loop_HConvH_proc6::thread_start_out() {
    start_out = real_start.read();
}

void Loop_HConvH_proc6::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void Loop_HConvH_proc6::thread_width_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        width_blk_n = width_empty_n.read();
    } else {
        width_blk_n = ap_const_logic_1;
    }
}

void Loop_HConvH_proc6::thread_width_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read())))) {
        width_read = ap_const_logic_1;
    } else {
        width_read = ap_const_logic_0;
    }
}

void Loop_HConvH_proc6::thread_zext_ln140_fu_207_p1() {
    zext_ln140_fu_207_p1 = esl_zext<32,11>(row_0_i_i_reg_152.read());
}

void Loop_HConvH_proc6::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln139_fu_216_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln139_fu_216_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

