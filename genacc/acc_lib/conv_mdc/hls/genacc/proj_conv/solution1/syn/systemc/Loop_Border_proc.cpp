// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_Border_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_Border_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_Border_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Loop_Border_proc::ap_ST_fsm_state1 = "1";
const sc_lv<3> Loop_Border_proc::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Loop_Border_proc::ap_ST_fsm_state7 = "100";
const sc_lv<32> Loop_Border_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Loop_Border_proc::ap_const_boolean_1 = true;
const bool Loop_Border_proc::ap_const_boolean_0 = false;
const sc_lv<1> Loop_Border_proc::ap_const_lv1_0 = "0";
const sc_lv<32> Loop_Border_proc::ap_const_lv32_1 = "1";
const sc_lv<1> Loop_Border_proc::ap_const_lv1_1 = "1";
const sc_lv<64> Loop_Border_proc::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<11> Loop_Border_proc::ap_const_lv11_0 = "00000000000";
const sc_lv<32> Loop_Border_proc::ap_const_lv32_FFFFFFF5 = "11111111111111111111111111110101";
const sc_lv<32> Loop_Border_proc::ap_const_lv32_FFFFFFFA = "11111111111111111111111111111010";
const sc_lv<32> Loop_Border_proc::ap_const_lv32_FFFFFFFB = "11111111111111111111111111111011";
const sc_lv<11> Loop_Border_proc::ap_const_lv11_5 = "101";
const sc_lv<64> Loop_Border_proc::ap_const_lv64_1 = "1";
const sc_lv<11> Loop_Border_proc::ap_const_lv11_1 = "1";
const sc_lv<11> Loop_Border_proc::ap_const_lv11_6 = "110";
const sc_lv<11> Loop_Border_proc::ap_const_lv11_7FB = "11111111011";
const sc_lv<32> Loop_Border_proc::ap_const_lv32_2 = "10";

Loop_Border_proc::Loop_Border_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    borderbuf_U = new Loop_Border_proc_lbW("borderbuf_U");
    borderbuf_U->clk(ap_clk);
    borderbuf_U->reset(ap_rst);
    borderbuf_U->address0(borderbuf_address0);
    borderbuf_U->ce0(borderbuf_ce0);
    borderbuf_U->we0(borderbuf_we0);
    borderbuf_U->d0(vconv_V_dout);
    borderbuf_U->address1(borderbuf_address1);
    borderbuf_U->ce1(borderbuf_ce1);
    borderbuf_U->q1(borderbuf_q1);
    regslice_both_dst_V_U = new regslice_both<32>("regslice_both_dst_V_U");
    regslice_both_dst_V_U->ap_clk(ap_clk);
    regslice_both_dst_V_U->ap_rst(ap_rst);
    regslice_both_dst_V_U->data_in(dst_V_TDATA_int);
    regslice_both_dst_V_U->vld_in(dst_V_TVALID_int);
    regslice_both_dst_V_U->ack_in(dst_V_TREADY_int);
    regslice_both_dst_V_U->data_out(dst_V_TDATA);
    regslice_both_dst_V_U->vld_out(regslice_both_dst_V_U_vld_out);
    regslice_both_dst_V_U->ack_out(dst_V_TREADY);
    regslice_both_dst_V_U->apdone_blk(regslice_both_dst_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln175_1_fu_267_p2);
    sensitive << ( i6_0_i_i_i_reg_160 );

    SC_METHOD(thread_add_ln175_fu_261_p2);
    sensitive << ( indvar_flatten_reg_149 );

    SC_METHOD(thread_add_ln179_fu_194_p2);
    sensitive << ( height_dout );

    SC_METHOD(thread_add_ln189_fu_182_p2);
    sensitive << ( width_dout );

    SC_METHOD(thread_add_ln196_fu_188_p2);
    sensitive << ( width_dout );

    SC_METHOD(thread_add_ln199_fu_408_p2);
    sensitive << ( select_ln175_reg_510_pp0_iter1_reg );

    SC_METHOD(thread_and_ln179_1_fu_302_p2);
    sensitive << ( icmp_ln179_5_fu_297_p2 );
    sensitive << ( icmp_ln179_4_fu_291_p2 );

    SC_METHOD(thread_and_ln179_fu_235_p2);
    sensitive << ( icmp_ln179_2_fu_230_p2 );
    sensitive << ( icmp_ln179_1_fu_224_p2 );

    SC_METHOD(thread_and_ln196_fu_429_p2);
    sensitive << ( icmp_ln196_reg_536_pp0_iter2_reg );
    sensitive << ( xor_ln194_fu_424_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( vconv_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op58_read_state3 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( vconv_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op58_read_state3 );
    sensitive << ( ap_block_state5_io );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( vconv_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op58_read_state3 );
    sensitive << ( ap_block_state5_io );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( width_empty_n );
    sensitive << ( height_empty_n );
    sensitive << ( vconv_xlim_loc_empty_n );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( vconv_V_empty_n );
    sensitive << ( ap_predicate_op58_read_state3 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( icmp_ln175_reg_501_pp0_iter2_reg );
    sensitive << ( dst_V_TREADY_int );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_io);
    sensitive << ( icmp_ln175_reg_501_pp0_iter3_reg );
    sensitive << ( dst_V_TREADY_int );

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln175_fu_256_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( regslice_both_dst_V_U_apdone_blk );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_predicate_op58_read_state3);
    sensitive << ( select_ln175_1_reg_518 );
    sensitive << ( icmp_ln182_reg_527 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( regslice_both_dst_V_U_apdone_blk );

    SC_METHOD(thread_borderbuf_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( zext_ln184_fu_355_p1 );

    SC_METHOD(thread_borderbuf_address1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( zext_ln199_fu_413_p1 );

    SC_METHOD(thread_borderbuf_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_borderbuf_ce1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_borderbuf_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( select_ln175_1_reg_518 );
    sensitive << ( icmp_ln182_reg_527 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_bound_fu_208_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_208_p00 );

    SC_METHOD(thread_bound_fu_208_p00);
    sensitive << ( width_dout );

    SC_METHOD(thread_bound_fu_208_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_208_p10 );

    SC_METHOD(thread_bound_fu_208_p10);
    sensitive << ( height_dout );

    SC_METHOD(thread_bound_fu_208_p2);
    sensitive << ( bound_fu_208_p0 );
    sensitive << ( bound_fu_208_p1 );

    SC_METHOD(thread_dst_V_TDATA_blk_n);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln175_reg_501_pp0_iter2_reg );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( icmp_ln175_reg_501_pp0_iter3_reg );
    sensitive << ( dst_V_TREADY_int );

    SC_METHOD(thread_dst_V_TDATA_int);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln175_reg_501_pp0_iter2_reg );
    sensitive << ( icmp_ln194_reg_546 );
    sensitive << ( pix_out_1_fu_86 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( pix_out_8_fu_434_p3 );

    SC_METHOD(thread_dst_V_TVALID);
    sensitive << ( regslice_both_dst_V_U_vld_out );

    SC_METHOD(thread_dst_V_TVALID_int);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln175_reg_501_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_height_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( height_empty_n );

    SC_METHOD(thread_height_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( width_empty_n );
    sensitive << ( height_empty_n );
    sensitive << ( vconv_xlim_loc_empty_n );

    SC_METHOD(thread_icmp_ln175_fu_256_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_149 );
    sensitive << ( bound_reg_496 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln176_fu_251_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( width_read_reg_470 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln176_fu_247_p1 );

    SC_METHOD(thread_icmp_ln179_1_fu_224_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i6_0_i_i_i_reg_160 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln179_2_fu_230_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln179_reg_490 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln175_1_fu_214_p1 );

    SC_METHOD(thread_icmp_ln179_3_fu_285_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln175_fu_256_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( add_ln175_1_fu_267_p2 );

    SC_METHOD(thread_icmp_ln179_4_fu_291_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln175_fu_256_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( add_ln175_1_fu_267_p2 );

    SC_METHOD(thread_icmp_ln179_5_fu_297_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln179_reg_490 );
    sensitive << ( icmp_ln175_fu_256_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln175_fu_273_p1 );

    SC_METHOD(thread_icmp_ln179_fu_218_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i6_0_i_i_i_reg_160 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln182_fu_334_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( vconv_xlim_loc_read_reg_475 );
    sensitive << ( icmp_ln175_fu_256_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( select_ln175_1_fu_314_p3 );
    sensitive << ( zext_ln175_2_fu_322_p1 );

    SC_METHOD(thread_icmp_ln186_fu_373_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( select_ln175_reg_510_pp0_iter1_reg );
    sensitive << ( select_ln175_1_reg_518_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_icmp_ln189_fu_339_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln189_reg_480 );
    sensitive << ( icmp_ln175_fu_256_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( select_ln175_1_fu_314_p3 );
    sensitive << ( zext_ln175_2_fu_322_p1 );

    SC_METHOD(thread_icmp_ln194_fu_403_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln175_reg_501_pp0_iter1_reg );
    sensitive << ( select_ln175_reg_510_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_icmp_ln196_fu_344_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln196_reg_485 );
    sensitive << ( icmp_ln175_fu_256_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln175_2_fu_322_p1 );

    SC_METHOD(thread_j_fu_349_p2);
    sensitive << ( select_ln175_fu_277_p3 );

    SC_METHOD(thread_l_edge_pix_fu_386_p3);
    sensitive << ( icmp_ln189_reg_531_pp0_iter1_reg );
    sensitive << ( r_edge_pix_fu_78 );
    sensitive << ( pix_out_fu_82 );

    SC_METHOD(thread_or_ln179_1_fu_308_p2);
    sensitive << ( icmp_ln179_3_fu_285_p2 );
    sensitive << ( and_ln179_1_fu_302_p2 );

    SC_METHOD(thread_or_ln179_fu_241_p2);
    sensitive << ( icmp_ln179_fu_218_p2 );
    sensitive << ( and_ln179_fu_235_p2 );

    SC_METHOD(thread_pix_out_8_fu_434_p3);
    sensitive << ( borderbuf_q1 );
    sensitive << ( pix_out_fu_82 );
    sensitive << ( and_ln196_fu_429_p2 );

    SC_METHOD(thread_select_ln175_1_fu_314_p3);
    sensitive << ( icmp_ln176_fu_251_p2 );
    sensitive << ( or_ln179_fu_241_p2 );
    sensitive << ( or_ln179_1_fu_308_p2 );

    SC_METHOD(thread_select_ln175_2_fu_326_p3);
    sensitive << ( i6_0_i_i_i_reg_160 );
    sensitive << ( add_ln175_1_fu_267_p2 );
    sensitive << ( icmp_ln176_fu_251_p2 );

    SC_METHOD(thread_select_ln175_fu_277_p3);
    sensitive << ( j_0_i_i_i_reg_171 );
    sensitive << ( icmp_ln176_fu_251_p2 );

    SC_METHOD(thread_select_ln186_fu_378_p3);
    sensitive << ( r_edge_pix_fu_78 );
    sensitive << ( pix_out_1_fu_86 );
    sensitive << ( icmp_ln186_fu_373_p2 );

    SC_METHOD(thread_vconv_V_blk_n);
    sensitive << ( vconv_V_empty_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( select_ln175_1_reg_518 );
    sensitive << ( icmp_ln182_reg_527 );

    SC_METHOD(thread_vconv_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op58_read_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_vconv_xlim_loc_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( vconv_xlim_loc_empty_n );

    SC_METHOD(thread_vconv_xlim_loc_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( width_empty_n );
    sensitive << ( height_empty_n );
    sensitive << ( vconv_xlim_loc_empty_n );

    SC_METHOD(thread_width_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( width_empty_n );

    SC_METHOD(thread_width_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( width_empty_n );
    sensitive << ( height_empty_n );
    sensitive << ( vconv_xlim_loc_empty_n );

    SC_METHOD(thread_xor_ln194_fu_424_p2);
    sensitive << ( icmp_ln194_reg_546 );

    SC_METHOD(thread_zext_ln175_1_fu_214_p1);
    sensitive << ( i6_0_i_i_i_reg_160 );

    SC_METHOD(thread_zext_ln175_2_fu_322_p1);
    sensitive << ( select_ln175_fu_277_p3 );

    SC_METHOD(thread_zext_ln175_fu_273_p1);
    sensitive << ( add_ln175_1_fu_267_p2 );

    SC_METHOD(thread_zext_ln176_fu_247_p1);
    sensitive << ( j_0_i_i_i_reg_171 );

    SC_METHOD(thread_zext_ln184_fu_355_p1);
    sensitive << ( select_ln175_reg_510 );

    SC_METHOD(thread_zext_ln199_fu_413_p1);
    sensitive << ( add_ln199_fu_408_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( width_empty_n );
    sensitive << ( height_empty_n );
    sensitive << ( vconv_xlim_loc_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln175_fu_256_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( regslice_both_dst_V_U_apdone_blk );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_Border_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, width_dout, "(port)width_dout");
    sc_trace(mVcdFile, width_empty_n, "(port)width_empty_n");
    sc_trace(mVcdFile, width_read, "(port)width_read");
    sc_trace(mVcdFile, height_dout, "(port)height_dout");
    sc_trace(mVcdFile, height_empty_n, "(port)height_empty_n");
    sc_trace(mVcdFile, height_read, "(port)height_read");
    sc_trace(mVcdFile, dst_V_TDATA, "(port)dst_V_TDATA");
    sc_trace(mVcdFile, dst_V_TVALID, "(port)dst_V_TVALID");
    sc_trace(mVcdFile, dst_V_TREADY, "(port)dst_V_TREADY");
    sc_trace(mVcdFile, vconv_xlim_loc_dout, "(port)vconv_xlim_loc_dout");
    sc_trace(mVcdFile, vconv_xlim_loc_empty_n, "(port)vconv_xlim_loc_empty_n");
    sc_trace(mVcdFile, vconv_xlim_loc_read, "(port)vconv_xlim_loc_read");
    sc_trace(mVcdFile, vconv_V_dout, "(port)vconv_V_dout");
    sc_trace(mVcdFile, vconv_V_empty_n, "(port)vconv_V_empty_n");
    sc_trace(mVcdFile, vconv_V_read, "(port)vconv_V_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, width_blk_n, "width_blk_n");
    sc_trace(mVcdFile, height_blk_n, "height_blk_n");
    sc_trace(mVcdFile, dst_V_TDATA_blk_n, "dst_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln175_reg_501, "icmp_ln175_reg_501");
    sc_trace(mVcdFile, icmp_ln175_reg_501_pp0_iter2_reg, "icmp_ln175_reg_501_pp0_iter2_reg");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, icmp_ln175_reg_501_pp0_iter3_reg, "icmp_ln175_reg_501_pp0_iter3_reg");
    sc_trace(mVcdFile, vconv_xlim_loc_blk_n, "vconv_xlim_loc_blk_n");
    sc_trace(mVcdFile, vconv_V_blk_n, "vconv_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, select_ln175_1_reg_518, "select_ln175_1_reg_518");
    sc_trace(mVcdFile, icmp_ln182_reg_527, "icmp_ln182_reg_527");
    sc_trace(mVcdFile, indvar_flatten_reg_149, "indvar_flatten_reg_149");
    sc_trace(mVcdFile, i6_0_i_i_i_reg_160, "i6_0_i_i_i_reg_160");
    sc_trace(mVcdFile, j_0_i_i_i_reg_171, "j_0_i_i_i_reg_171");
    sc_trace(mVcdFile, width_read_reg_470, "width_read_reg_470");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, vconv_xlim_loc_read_reg_475, "vconv_xlim_loc_read_reg_475");
    sc_trace(mVcdFile, add_ln189_fu_182_p2, "add_ln189_fu_182_p2");
    sc_trace(mVcdFile, add_ln189_reg_480, "add_ln189_reg_480");
    sc_trace(mVcdFile, add_ln196_fu_188_p2, "add_ln196_fu_188_p2");
    sc_trace(mVcdFile, add_ln196_reg_485, "add_ln196_reg_485");
    sc_trace(mVcdFile, add_ln179_fu_194_p2, "add_ln179_fu_194_p2");
    sc_trace(mVcdFile, add_ln179_reg_490, "add_ln179_reg_490");
    sc_trace(mVcdFile, bound_fu_208_p2, "bound_fu_208_p2");
    sc_trace(mVcdFile, bound_reg_496, "bound_reg_496");
    sc_trace(mVcdFile, icmp_ln175_fu_256_p2, "icmp_ln175_fu_256_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_predicate_op58_read_state3, "ap_predicate_op58_read_state3");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state6_io, "ap_block_state6_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln175_reg_501_pp0_iter1_reg, "icmp_ln175_reg_501_pp0_iter1_reg");
    sc_trace(mVcdFile, add_ln175_fu_261_p2, "add_ln175_fu_261_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln175_fu_277_p3, "select_ln175_fu_277_p3");
    sc_trace(mVcdFile, select_ln175_reg_510, "select_ln175_reg_510");
    sc_trace(mVcdFile, select_ln175_reg_510_pp0_iter1_reg, "select_ln175_reg_510_pp0_iter1_reg");
    sc_trace(mVcdFile, select_ln175_1_fu_314_p3, "select_ln175_1_fu_314_p3");
    sc_trace(mVcdFile, select_ln175_1_reg_518_pp0_iter1_reg, "select_ln175_1_reg_518_pp0_iter1_reg");
    sc_trace(mVcdFile, select_ln175_2_fu_326_p3, "select_ln175_2_fu_326_p3");
    sc_trace(mVcdFile, icmp_ln182_fu_334_p2, "icmp_ln182_fu_334_p2");
    sc_trace(mVcdFile, icmp_ln189_fu_339_p2, "icmp_ln189_fu_339_p2");
    sc_trace(mVcdFile, icmp_ln189_reg_531, "icmp_ln189_reg_531");
    sc_trace(mVcdFile, icmp_ln189_reg_531_pp0_iter1_reg, "icmp_ln189_reg_531_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln196_fu_344_p2, "icmp_ln196_fu_344_p2");
    sc_trace(mVcdFile, icmp_ln196_reg_536, "icmp_ln196_reg_536");
    sc_trace(mVcdFile, icmp_ln196_reg_536_pp0_iter1_reg, "icmp_ln196_reg_536_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln196_reg_536_pp0_iter2_reg, "icmp_ln196_reg_536_pp0_iter2_reg");
    sc_trace(mVcdFile, j_fu_349_p2, "j_fu_349_p2");
    sc_trace(mVcdFile, icmp_ln194_fu_403_p2, "icmp_ln194_fu_403_p2");
    sc_trace(mVcdFile, icmp_ln194_reg_546, "icmp_ln194_reg_546");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, borderbuf_address0, "borderbuf_address0");
    sc_trace(mVcdFile, borderbuf_ce0, "borderbuf_ce0");
    sc_trace(mVcdFile, borderbuf_we0, "borderbuf_we0");
    sc_trace(mVcdFile, borderbuf_address1, "borderbuf_address1");
    sc_trace(mVcdFile, borderbuf_ce1, "borderbuf_ce1");
    sc_trace(mVcdFile, borderbuf_q1, "borderbuf_q1");
    sc_trace(mVcdFile, zext_ln184_fu_355_p1, "zext_ln184_fu_355_p1");
    sc_trace(mVcdFile, zext_ln199_fu_413_p1, "zext_ln199_fu_413_p1");
    sc_trace(mVcdFile, r_edge_pix_fu_78, "r_edge_pix_fu_78");
    sc_trace(mVcdFile, pix_out_fu_82, "pix_out_fu_82");
    sc_trace(mVcdFile, l_edge_pix_fu_386_p3, "l_edge_pix_fu_386_p3");
    sc_trace(mVcdFile, pix_out_1_fu_86, "pix_out_1_fu_86");
    sc_trace(mVcdFile, select_ln186_fu_378_p3, "select_ln186_fu_378_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, bound_fu_208_p0, "bound_fu_208_p0");
    sc_trace(mVcdFile, bound_fu_208_p1, "bound_fu_208_p1");
    sc_trace(mVcdFile, zext_ln175_1_fu_214_p1, "zext_ln175_1_fu_214_p1");
    sc_trace(mVcdFile, icmp_ln179_2_fu_230_p2, "icmp_ln179_2_fu_230_p2");
    sc_trace(mVcdFile, icmp_ln179_1_fu_224_p2, "icmp_ln179_1_fu_224_p2");
    sc_trace(mVcdFile, icmp_ln179_fu_218_p2, "icmp_ln179_fu_218_p2");
    sc_trace(mVcdFile, and_ln179_fu_235_p2, "and_ln179_fu_235_p2");
    sc_trace(mVcdFile, zext_ln176_fu_247_p1, "zext_ln176_fu_247_p1");
    sc_trace(mVcdFile, add_ln175_1_fu_267_p2, "add_ln175_1_fu_267_p2");
    sc_trace(mVcdFile, icmp_ln176_fu_251_p2, "icmp_ln176_fu_251_p2");
    sc_trace(mVcdFile, zext_ln175_fu_273_p1, "zext_ln175_fu_273_p1");
    sc_trace(mVcdFile, icmp_ln179_5_fu_297_p2, "icmp_ln179_5_fu_297_p2");
    sc_trace(mVcdFile, icmp_ln179_4_fu_291_p2, "icmp_ln179_4_fu_291_p2");
    sc_trace(mVcdFile, icmp_ln179_3_fu_285_p2, "icmp_ln179_3_fu_285_p2");
    sc_trace(mVcdFile, and_ln179_1_fu_302_p2, "and_ln179_1_fu_302_p2");
    sc_trace(mVcdFile, or_ln179_fu_241_p2, "or_ln179_fu_241_p2");
    sc_trace(mVcdFile, or_ln179_1_fu_308_p2, "or_ln179_1_fu_308_p2");
    sc_trace(mVcdFile, zext_ln175_2_fu_322_p1, "zext_ln175_2_fu_322_p1");
    sc_trace(mVcdFile, icmp_ln186_fu_373_p2, "icmp_ln186_fu_373_p2");
    sc_trace(mVcdFile, add_ln199_fu_408_p2, "add_ln199_fu_408_p2");
    sc_trace(mVcdFile, xor_ln194_fu_424_p2, "xor_ln194_fu_424_p2");
    sc_trace(mVcdFile, and_ln196_fu_429_p2, "and_ln196_fu_429_p2");
    sc_trace(mVcdFile, pix_out_8_fu_434_p3, "pix_out_8_fu_434_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, regslice_both_dst_V_U_apdone_blk, "regslice_both_dst_V_U_apdone_blk");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, dst_V_TDATA_int, "dst_V_TDATA_int");
    sc_trace(mVcdFile, dst_V_TVALID_int, "dst_V_TVALID_int");
    sc_trace(mVcdFile, dst_V_TREADY_int, "dst_V_TREADY_int");
    sc_trace(mVcdFile, regslice_both_dst_V_U_vld_out, "regslice_both_dst_V_U_vld_out");
    sc_trace(mVcdFile, bound_fu_208_p00, "bound_fu_208_p00");
    sc_trace(mVcdFile, bound_fu_208_p10, "bound_fu_208_p10");
#endif

    }
}

Loop_Border_proc::~Loop_Border_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete borderbuf_U;
    delete regslice_both_dst_V_U;
}

void Loop_Border_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                    esl_seteq<1,1,1>(regslice_both_dst_V_U_apdone_blk.read(), ap_const_logic_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read())))) {
            ap_enable_reg_pp0_iter4 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln175_fu_256_p2.read()))) {
        i6_0_i_i_i_reg_160 = select_ln175_2_fu_326_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read())))) {
        i6_0_i_i_i_reg_160 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln175_fu_256_p2.read()))) {
        indvar_flatten_reg_149 = add_ln175_fu_261_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read())))) {
        indvar_flatten_reg_149 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln175_fu_256_p2.read()))) {
        j_0_i_i_i_reg_171 = j_fu_349_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read())))) {
        j_0_i_i_i_reg_171 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read())))) {
        add_ln179_reg_490 = add_ln179_fu_194_p2.read();
        add_ln189_reg_480 = add_ln189_fu_182_p2.read();
        add_ln196_reg_485 = add_ln196_fu_188_p2.read();
        bound_reg_496 = bound_fu_208_p2.read();
        vconv_xlim_loc_read_reg_475 = vconv_xlim_loc_dout.read();
        width_read_reg_470 = width_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln175_reg_501 = icmp_ln175_fu_256_p2.read();
        icmp_ln175_reg_501_pp0_iter1_reg = icmp_ln175_reg_501.read();
        icmp_ln189_reg_531_pp0_iter1_reg = icmp_ln189_reg_531.read();
        icmp_ln196_reg_536_pp0_iter1_reg = icmp_ln196_reg_536.read();
        select_ln175_1_reg_518_pp0_iter1_reg = select_ln175_1_reg_518.read();
        select_ln175_reg_510_pp0_iter1_reg = select_ln175_reg_510.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln175_reg_501_pp0_iter2_reg = icmp_ln175_reg_501_pp0_iter1_reg.read();
        icmp_ln175_reg_501_pp0_iter3_reg = icmp_ln175_reg_501_pp0_iter2_reg.read();
        icmp_ln196_reg_536_pp0_iter2_reg = icmp_ln196_reg_536_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln175_fu_256_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, select_ln175_1_fu_314_p3.read()))) {
        icmp_ln182_reg_527 = icmp_ln182_fu_334_p2.read();
        icmp_ln189_reg_531 = icmp_ln189_fu_339_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln175_reg_501_pp0_iter1_reg.read()))) {
        icmp_ln194_reg_546 = icmp_ln194_fu_403_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln175_fu_256_p2.read()))) {
        icmp_ln196_reg_536 = icmp_ln196_fu_344_p2.read();
        select_ln175_1_reg_518 = select_ln175_1_fu_314_p3.read();
        select_ln175_reg_510 = select_ln175_fu_277_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, select_ln175_1_reg_518_pp0_iter1_reg.read()))) {
        pix_out_1_fu_86 = select_ln186_fu_378_p3.read();
        pix_out_fu_82 = l_edge_pix_fu_386_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(select_ln175_1_reg_518.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln182_reg_527.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        r_edge_pix_fu_78 = vconv_V_dout.read();
    }
}

void Loop_Border_proc::thread_add_ln175_1_fu_267_p2() {
    add_ln175_1_fu_267_p2 = (!i6_0_i_i_i_reg_160.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(i6_0_i_i_i_reg_160.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void Loop_Border_proc::thread_add_ln175_fu_261_p2() {
    add_ln175_fu_261_p2 = (!indvar_flatten_reg_149.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(indvar_flatten_reg_149.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void Loop_Border_proc::thread_add_ln179_fu_194_p2() {
    add_ln179_fu_194_p2 = (!height_dout.read().is_01() || !ap_const_lv32_FFFFFFFB.is_01())? sc_lv<32>(): (sc_biguint<32>(height_dout.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFB));
}

void Loop_Border_proc::thread_add_ln189_fu_182_p2() {
    add_ln189_fu_182_p2 = (!width_dout.read().is_01() || !ap_const_lv32_FFFFFFF5.is_01())? sc_lv<32>(): (sc_biguint<32>(width_dout.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFF5));
}

void Loop_Border_proc::thread_add_ln196_fu_188_p2() {
    add_ln196_fu_188_p2 = (!width_dout.read().is_01() || !ap_const_lv32_FFFFFFFA.is_01())? sc_lv<32>(): (sc_biguint<32>(width_dout.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFA));
}

void Loop_Border_proc::thread_add_ln199_fu_408_p2() {
    add_ln199_fu_408_p2 = (!select_ln175_reg_510_pp0_iter1_reg.read().is_01() || !ap_const_lv11_7FB.is_01())? sc_lv<11>(): (sc_biguint<11>(select_ln175_reg_510_pp0_iter1_reg.read()) + sc_bigint<11>(ap_const_lv11_7FB));
}

void Loop_Border_proc::thread_and_ln179_1_fu_302_p2() {
    and_ln179_1_fu_302_p2 = (icmp_ln179_5_fu_297_p2.read() & icmp_ln179_4_fu_291_p2.read());
}

void Loop_Border_proc::thread_and_ln179_fu_235_p2() {
    and_ln179_fu_235_p2 = (icmp_ln179_2_fu_230_p2.read() & icmp_ln179_1_fu_224_p2.read());
}

void Loop_Border_proc::thread_and_ln196_fu_429_p2() {
    and_ln196_fu_429_p2 = (icmp_ln196_reg_536_pp0_iter2_reg.read() & xor_ln194_fu_424_p2.read());
}

void Loop_Border_proc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Loop_Border_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_Border_proc::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[2];
}

void Loop_Border_proc::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_Border_proc::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, vconv_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state3.read()));
}

void Loop_Border_proc::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, vconv_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void Loop_Border_proc::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, vconv_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void Loop_Border_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read()));
}

void Loop_Border_proc::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_Border_proc::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, vconv_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state3.read()));
}

void Loop_Border_proc::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_Border_proc::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(icmp_ln175_reg_501_pp0_iter2_reg.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_TREADY_int.read()));
}

void Loop_Border_proc::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_Border_proc::thread_ap_block_state6_io() {
    ap_block_state6_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln175_reg_501_pp0_iter3_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_TREADY_int.read()));
}

void Loop_Border_proc::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_Border_proc::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln175_fu_256_p2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(regslice_both_dst_V_U_apdone_blk.read(), ap_const_logic_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_Border_proc::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_Border_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_ap_predicate_op58_read_state3() {
    ap_predicate_op58_read_state3 = (esl_seteq<1,1,1>(select_ln175_1_reg_518.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln182_reg_527.read()));
}

void Loop_Border_proc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(regslice_both_dst_V_U_apdone_blk.read(), ap_const_logic_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_borderbuf_address0() {
    borderbuf_address0 =  (sc_lv<11>) (zext_ln184_fu_355_p1.read());
}

void Loop_Border_proc::thread_borderbuf_address1() {
    borderbuf_address1 =  (sc_lv<11>) (zext_ln199_fu_413_p1.read());
}

void Loop_Border_proc::thread_borderbuf_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        borderbuf_ce0 = ap_const_logic_1;
    } else {
        borderbuf_ce0 = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_borderbuf_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        borderbuf_ce1 = ap_const_logic_1;
    } else {
        borderbuf_ce1 = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_borderbuf_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(select_ln175_1_reg_518.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln182_reg_527.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        borderbuf_we0 = ap_const_logic_1;
    } else {
        borderbuf_we0 = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_bound_fu_208_p0() {
    bound_fu_208_p0 =  (sc_lv<32>) (bound_fu_208_p00.read());
}

void Loop_Border_proc::thread_bound_fu_208_p00() {
    bound_fu_208_p00 = esl_zext<64,32>(width_dout.read());
}

void Loop_Border_proc::thread_bound_fu_208_p1() {
    bound_fu_208_p1 =  (sc_lv<32>) (bound_fu_208_p10.read());
}

void Loop_Border_proc::thread_bound_fu_208_p10() {
    bound_fu_208_p10 = esl_zext<64,32>(height_dout.read());
}

void Loop_Border_proc::thread_bound_fu_208_p2() {
    bound_fu_208_p2 = (!bound_fu_208_p0.read().is_01() || !bound_fu_208_p1.read().is_01())? sc_lv<64>(): sc_biguint<32>(bound_fu_208_p0.read()) * sc_biguint<32>(bound_fu_208_p1.read());
}

void Loop_Border_proc::thread_dst_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln175_reg_501_pp0_iter2_reg.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln175_reg_501_pp0_iter3_reg.read())))) {
        dst_V_TDATA_blk_n = dst_V_TREADY_int.read();
    } else {
        dst_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void Loop_Border_proc::thread_dst_V_TDATA_int() {
    dst_V_TDATA_int = (!icmp_ln194_reg_546.read()[0].is_01())? sc_lv<32>(): ((icmp_ln194_reg_546.read()[0].to_bool())? pix_out_1_fu_86.read(): pix_out_8_fu_434_p3.read());
}

void Loop_Border_proc::thread_dst_V_TVALID() {
    dst_V_TVALID = regslice_both_dst_V_U_vld_out.read();
}

void Loop_Border_proc::thread_dst_V_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(icmp_ln175_reg_501_pp0_iter2_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_V_TVALID_int = ap_const_logic_1;
    } else {
        dst_V_TVALID_int = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_height_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        height_blk_n = height_empty_n.read();
    } else {
        height_blk_n = ap_const_logic_1;
    }
}

void Loop_Border_proc::thread_height_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read())))) {
        height_read = ap_const_logic_1;
    } else {
        height_read = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_icmp_ln175_fu_256_p2() {
    icmp_ln175_fu_256_p2 = (!indvar_flatten_reg_149.read().is_01() || !bound_reg_496.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_149.read() == bound_reg_496.read());
}

void Loop_Border_proc::thread_icmp_ln176_fu_251_p2() {
    icmp_ln176_fu_251_p2 = (!zext_ln176_fu_247_p1.read().is_01() || !width_read_reg_470.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln176_fu_247_p1.read()) < sc_bigint<32>(width_read_reg_470.read()));
}

void Loop_Border_proc::thread_icmp_ln179_1_fu_224_p2() {
    icmp_ln179_1_fu_224_p2 = (!i6_0_i_i_i_reg_160.read().is_01() || !ap_const_lv11_5.is_01())? sc_lv<1>(): (sc_biguint<11>(i6_0_i_i_i_reg_160.read()) > sc_biguint<11>(ap_const_lv11_5));
}

void Loop_Border_proc::thread_icmp_ln179_2_fu_230_p2() {
    icmp_ln179_2_fu_230_p2 = (!zext_ln175_1_fu_214_p1.read().is_01() || !add_ln179_reg_490.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln175_1_fu_214_p1.read()) < sc_bigint<32>(add_ln179_reg_490.read()));
}

void Loop_Border_proc::thread_icmp_ln179_3_fu_285_p2() {
    icmp_ln179_3_fu_285_p2 = (!add_ln175_1_fu_267_p2.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): sc_lv<1>(add_ln175_1_fu_267_p2.read() == ap_const_lv11_0);
}

void Loop_Border_proc::thread_icmp_ln179_4_fu_291_p2() {
    icmp_ln179_4_fu_291_p2 = (!add_ln175_1_fu_267_p2.read().is_01() || !ap_const_lv11_5.is_01())? sc_lv<1>(): (sc_biguint<11>(add_ln175_1_fu_267_p2.read()) > sc_biguint<11>(ap_const_lv11_5));
}

void Loop_Border_proc::thread_icmp_ln179_5_fu_297_p2() {
    icmp_ln179_5_fu_297_p2 = (!zext_ln175_fu_273_p1.read().is_01() || !add_ln179_reg_490.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln175_fu_273_p1.read()) < sc_bigint<32>(add_ln179_reg_490.read()));
}

void Loop_Border_proc::thread_icmp_ln179_fu_218_p2() {
    icmp_ln179_fu_218_p2 = (!i6_0_i_i_i_reg_160.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): sc_lv<1>(i6_0_i_i_i_reg_160.read() == ap_const_lv11_0);
}

void Loop_Border_proc::thread_icmp_ln182_fu_334_p2() {
    icmp_ln182_fu_334_p2 = (!zext_ln175_2_fu_322_p1.read().is_01() || !vconv_xlim_loc_read_reg_475.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln175_2_fu_322_p1.read()) < sc_bigint<32>(vconv_xlim_loc_read_reg_475.read()));
}

void Loop_Border_proc::thread_icmp_ln186_fu_373_p2() {
    icmp_ln186_fu_373_p2 = (!select_ln175_reg_510_pp0_iter1_reg.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): sc_lv<1>(select_ln175_reg_510_pp0_iter1_reg.read() == ap_const_lv11_0);
}

void Loop_Border_proc::thread_icmp_ln189_fu_339_p2() {
    icmp_ln189_fu_339_p2 = (!zext_ln175_2_fu_322_p1.read().is_01() || !add_ln189_reg_480.read().is_01())? sc_lv<1>(): sc_lv<1>(zext_ln175_2_fu_322_p1.read() == add_ln189_reg_480.read());
}

void Loop_Border_proc::thread_icmp_ln194_fu_403_p2() {
    icmp_ln194_fu_403_p2 = (!select_ln175_reg_510_pp0_iter1_reg.read().is_01() || !ap_const_lv11_6.is_01())? sc_lv<1>(): (sc_biguint<11>(select_ln175_reg_510_pp0_iter1_reg.read()) < sc_biguint<11>(ap_const_lv11_6));
}

void Loop_Border_proc::thread_icmp_ln196_fu_344_p2() {
    icmp_ln196_fu_344_p2 = (!zext_ln175_2_fu_322_p1.read().is_01() || !add_ln196_reg_485.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln175_2_fu_322_p1.read()) < sc_bigint<32>(add_ln196_reg_485.read()));
}

void Loop_Border_proc::thread_j_fu_349_p2() {
    j_fu_349_p2 = (!select_ln175_fu_277_p3.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(select_ln175_fu_277_p3.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void Loop_Border_proc::thread_l_edge_pix_fu_386_p3() {
    l_edge_pix_fu_386_p3 = (!icmp_ln189_reg_531_pp0_iter1_reg.read()[0].is_01())? sc_lv<32>(): ((icmp_ln189_reg_531_pp0_iter1_reg.read()[0].to_bool())? r_edge_pix_fu_78.read(): pix_out_fu_82.read());
}

void Loop_Border_proc::thread_or_ln179_1_fu_308_p2() {
    or_ln179_1_fu_308_p2 = (icmp_ln179_3_fu_285_p2.read() | and_ln179_1_fu_302_p2.read());
}

void Loop_Border_proc::thread_or_ln179_fu_241_p2() {
    or_ln179_fu_241_p2 = (icmp_ln179_fu_218_p2.read() | and_ln179_fu_235_p2.read());
}

void Loop_Border_proc::thread_pix_out_8_fu_434_p3() {
    pix_out_8_fu_434_p3 = (!and_ln196_fu_429_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln196_fu_429_p2.read()[0].to_bool())? borderbuf_q1.read(): pix_out_fu_82.read());
}

void Loop_Border_proc::thread_select_ln175_1_fu_314_p3() {
    select_ln175_1_fu_314_p3 = (!icmp_ln176_fu_251_p2.read()[0].is_01())? sc_lv<1>(): ((icmp_ln176_fu_251_p2.read()[0].to_bool())? or_ln179_fu_241_p2.read(): or_ln179_1_fu_308_p2.read());
}

void Loop_Border_proc::thread_select_ln175_2_fu_326_p3() {
    select_ln175_2_fu_326_p3 = (!icmp_ln176_fu_251_p2.read()[0].is_01())? sc_lv<11>(): ((icmp_ln176_fu_251_p2.read()[0].to_bool())? i6_0_i_i_i_reg_160.read(): add_ln175_1_fu_267_p2.read());
}

void Loop_Border_proc::thread_select_ln175_fu_277_p3() {
    select_ln175_fu_277_p3 = (!icmp_ln176_fu_251_p2.read()[0].is_01())? sc_lv<11>(): ((icmp_ln176_fu_251_p2.read()[0].to_bool())? j_0_i_i_i_reg_171.read(): ap_const_lv11_0);
}

void Loop_Border_proc::thread_select_ln186_fu_378_p3() {
    select_ln186_fu_378_p3 = (!icmp_ln186_fu_373_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln186_fu_373_p2.read()[0].to_bool())? r_edge_pix_fu_78.read(): pix_out_1_fu_86.read());
}

void Loop_Border_proc::thread_vconv_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(select_ln175_1_reg_518.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln182_reg_527.read()))) {
        vconv_V_blk_n = vconv_V_empty_n.read();
    } else {
        vconv_V_blk_n = ap_const_logic_1;
    }
}

void Loop_Border_proc::thread_vconv_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        vconv_V_read = ap_const_logic_1;
    } else {
        vconv_V_read = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_vconv_xlim_loc_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        vconv_xlim_loc_blk_n = vconv_xlim_loc_empty_n.read();
    } else {
        vconv_xlim_loc_blk_n = ap_const_logic_1;
    }
}

void Loop_Border_proc::thread_vconv_xlim_loc_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read())))) {
        vconv_xlim_loc_read = ap_const_logic_1;
    } else {
        vconv_xlim_loc_read = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_width_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        width_blk_n = width_empty_n.read();
    } else {
        width_blk_n = ap_const_logic_1;
    }
}

void Loop_Border_proc::thread_width_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read())))) {
        width_read = ap_const_logic_1;
    } else {
        width_read = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_xor_ln194_fu_424_p2() {
    xor_ln194_fu_424_p2 = (icmp_ln194_reg_546.read() ^ ap_const_lv1_1);
}

void Loop_Border_proc::thread_zext_ln175_1_fu_214_p1() {
    zext_ln175_1_fu_214_p1 = esl_zext<32,11>(i6_0_i_i_i_reg_160.read());
}

void Loop_Border_proc::thread_zext_ln175_2_fu_322_p1() {
    zext_ln175_2_fu_322_p1 = esl_zext<32,11>(select_ln175_fu_277_p3.read());
}

void Loop_Border_proc::thread_zext_ln175_fu_273_p1() {
    zext_ln175_fu_273_p1 = esl_zext<32,11>(add_ln175_1_fu_267_p2.read());
}

void Loop_Border_proc::thread_zext_ln176_fu_247_p1() {
    zext_ln176_fu_247_p1 = esl_zext<32,11>(j_0_i_i_i_reg_171.read());
}

void Loop_Border_proc::thread_zext_ln184_fu_355_p1() {
    zext_ln184_fu_355_p1 = esl_zext<64,11>(select_ln175_reg_510.read());
}

void Loop_Border_proc::thread_zext_ln199_fu_413_p1() {
    zext_ln199_fu_413_p1 = esl_zext<64,11>(add_ln199_fu_408_p2.read());
}

void Loop_Border_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln175_fu_256_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln175_fu_256_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(regslice_both_dst_V_U_apdone_blk.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

