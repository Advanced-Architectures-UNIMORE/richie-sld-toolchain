// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_VConvH_proc_HH_
#define _Loop_VConvH_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Loop_VConvH_proc_bkb.h"
#include "Loop_VConvH_proc_cud.h"

namespace ap_rtl {

struct Loop_VConvH_proc : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > height_dout;
    sc_in< sc_logic > height_empty_n;
    sc_out< sc_logic > height_read;
    sc_in< sc_lv<32> > vconv_xlim_loc_dout;
    sc_in< sc_logic > vconv_xlim_loc_empty_n;
    sc_out< sc_logic > vconv_xlim_loc_read;
    sc_in< sc_lv<32> > hconv_V_dout;
    sc_in< sc_logic > hconv_V_empty_n;
    sc_out< sc_logic > hconv_V_read;
    sc_out< sc_lv<32> > vconv_V_din;
    sc_in< sc_logic > vconv_V_full_n;
    sc_out< sc_logic > vconv_V_write;
    sc_out< sc_lv<32> > height_out_din;
    sc_in< sc_logic > height_out_full_n;
    sc_out< sc_logic > height_out_write;
    sc_out< sc_lv<32> > vconv_xlim_loc_out_din;
    sc_in< sc_logic > vconv_xlim_loc_out_full_n;
    sc_out< sc_logic > vconv_xlim_loc_out_write;


    // Module declarations
    Loop_VConvH_proc(sc_module_name name);
    SC_HAS_PROCESS(Loop_VConvH_proc);

    ~Loop_VConvH_proc();

    sc_trace_file* mVcdFile;

    Loop_VConvH_proc_bkb* linebuf_0_U;
    Loop_VConvH_proc_cud* linebuf_1_U;
    Loop_VConvH_proc_cud* linebuf_2_U;
    Loop_VConvH_proc_cud* linebuf_3_U;
    Loop_VConvH_proc_cud* linebuf_4_U;
    Loop_VConvH_proc_cud* linebuf_5_U;
    Loop_VConvH_proc_cud* linebuf_6_U;
    Loop_VConvH_proc_cud* linebuf_7_U;
    Loop_VConvH_proc_cud* linebuf_8_U;
    Loop_VConvH_proc_cud* linebuf_9_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<11> > linebuf_0_address0;
    sc_signal< sc_logic > linebuf_0_ce0;
    sc_signal< sc_logic > linebuf_0_we0;
    sc_signal< sc_lv<32> > linebuf_0_q0;
    sc_signal< sc_lv<11> > linebuf_1_address0;
    sc_signal< sc_logic > linebuf_1_ce0;
    sc_signal< sc_lv<32> > linebuf_1_q0;
    sc_signal< sc_lv<11> > linebuf_1_address1;
    sc_signal< sc_logic > linebuf_1_ce1;
    sc_signal< sc_logic > linebuf_1_we1;
    sc_signal< sc_lv<11> > linebuf_2_address0;
    sc_signal< sc_logic > linebuf_2_ce0;
    sc_signal< sc_lv<32> > linebuf_2_q0;
    sc_signal< sc_lv<11> > linebuf_2_address1;
    sc_signal< sc_logic > linebuf_2_ce1;
    sc_signal< sc_logic > linebuf_2_we1;
    sc_signal< sc_lv<11> > linebuf_3_address0;
    sc_signal< sc_logic > linebuf_3_ce0;
    sc_signal< sc_lv<32> > linebuf_3_q0;
    sc_signal< sc_lv<11> > linebuf_3_address1;
    sc_signal< sc_logic > linebuf_3_ce1;
    sc_signal< sc_logic > linebuf_3_we1;
    sc_signal< sc_lv<11> > linebuf_4_address0;
    sc_signal< sc_logic > linebuf_4_ce0;
    sc_signal< sc_lv<32> > linebuf_4_q0;
    sc_signal< sc_lv<11> > linebuf_4_address1;
    sc_signal< sc_logic > linebuf_4_ce1;
    sc_signal< sc_logic > linebuf_4_we1;
    sc_signal< sc_lv<11> > linebuf_5_address0;
    sc_signal< sc_logic > linebuf_5_ce0;
    sc_signal< sc_lv<32> > linebuf_5_q0;
    sc_signal< sc_lv<11> > linebuf_5_address1;
    sc_signal< sc_logic > linebuf_5_ce1;
    sc_signal< sc_logic > linebuf_5_we1;
    sc_signal< sc_lv<11> > linebuf_6_address0;
    sc_signal< sc_logic > linebuf_6_ce0;
    sc_signal< sc_lv<32> > linebuf_6_q0;
    sc_signal< sc_lv<11> > linebuf_6_address1;
    sc_signal< sc_logic > linebuf_6_ce1;
    sc_signal< sc_logic > linebuf_6_we1;
    sc_signal< sc_lv<11> > linebuf_7_address0;
    sc_signal< sc_logic > linebuf_7_ce0;
    sc_signal< sc_lv<32> > linebuf_7_q0;
    sc_signal< sc_lv<11> > linebuf_7_address1;
    sc_signal< sc_logic > linebuf_7_ce1;
    sc_signal< sc_logic > linebuf_7_we1;
    sc_signal< sc_lv<11> > linebuf_8_address0;
    sc_signal< sc_logic > linebuf_8_ce0;
    sc_signal< sc_lv<32> > linebuf_8_q0;
    sc_signal< sc_lv<11> > linebuf_8_address1;
    sc_signal< sc_logic > linebuf_8_ce1;
    sc_signal< sc_logic > linebuf_8_we1;
    sc_signal< sc_lv<11> > linebuf_9_address0;
    sc_signal< sc_logic > linebuf_9_ce0;
    sc_signal< sc_lv<32> > linebuf_9_q0;
    sc_signal< sc_lv<11> > linebuf_9_address1;
    sc_signal< sc_logic > linebuf_9_ce1;
    sc_signal< sc_logic > linebuf_9_we1;
    sc_signal< sc_logic > height_blk_n;
    sc_signal< sc_logic > vconv_xlim_loc_blk_n;
    sc_signal< sc_logic > hconv_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln156_reg_597;
    sc_signal< sc_logic > vconv_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > select_ln156_1_reg_606;
    sc_signal< sc_lv<1> > select_ln156_1_reg_606_pp0_iter1_reg;
    sc_signal< sc_logic > height_out_blk_n;
    sc_signal< sc_logic > vconv_xlim_loc_out_blk_n;
    sc_signal< sc_lv<64> > indvar_flatten_reg_314;
    sc_signal< sc_lv<11> > col1_0_i_i_i_reg_325;
    sc_signal< sc_lv<11> > row2_0_i_i_i_reg_336;
    sc_signal< sc_lv<32> > vconv_xlim_loc_read_reg_587;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<64> > bound_fu_355_p2;
    sc_signal< sc_lv<64> > bound_reg_592;
    sc_signal< sc_lv<1> > icmp_ln156_fu_370_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln156_reg_597_pp0_iter1_reg;
    sc_signal< sc_lv<64> > add_ln156_fu_375_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > select_ln156_1_fu_407_p3;
    sc_signal< sc_lv<11> > select_ln156_2_fu_415_p3;
    sc_signal< sc_lv<11> > linebuf_0_addr_reg_615;
    sc_signal< sc_lv<11> > linebuf_1_addr_reg_620;
    sc_signal< sc_lv<11> > linebuf_2_addr_reg_626;
    sc_signal< sc_lv<11> > linebuf_3_addr_reg_632;
    sc_signal< sc_lv<11> > linebuf_4_addr_reg_638;
    sc_signal< sc_lv<11> > linebuf_5_addr_reg_644;
    sc_signal< sc_lv<11> > linebuf_6_addr_reg_650;
    sc_signal< sc_lv<11> > linebuf_7_addr_reg_656;
    sc_signal< sc_lv<11> > linebuf_8_addr_reg_662;
    sc_signal< sc_lv<11> > linebuf_9_addr_reg_668;
    sc_signal< sc_lv<11> > row_fu_437_p2;
    sc_signal< sc_lv<32> > tmp_1_reg_679;
    sc_signal< sc_lv<32> > mul_ln165_fu_443_p2;
    sc_signal< sc_lv<32> > mul_ln165_reg_685;
    sc_signal< sc_lv<32> > mul_ln165_1_fu_449_p2;
    sc_signal< sc_lv<32> > mul_ln165_1_reg_690;
    sc_signal< sc_lv<32> > mul_ln165_2_fu_455_p2;
    sc_signal< sc_lv<32> > mul_ln165_2_reg_695;
    sc_signal< sc_lv<32> > add_ln165_5_fu_497_p2;
    sc_signal< sc_lv<32> > add_ln165_5_reg_700;
    sc_signal< sc_lv<32> > add_ln165_9_fu_515_p2;
    sc_signal< sc_lv<32> > add_ln165_9_reg_705;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<64> > zext_ln164_fu_423_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > bound_fu_355_p0;
    sc_signal< sc_lv<32> > bound_fu_355_p1;
    sc_signal< sc_lv<32> > zext_ln157_fu_361_p1;
    sc_signal< sc_lv<1> > icmp_ln157_fu_365_p2;
    sc_signal< sc_lv<11> > add_ln156_1_fu_389_p2;
    sc_signal< sc_lv<1> > icmp_ln169_1_fu_401_p2;
    sc_signal< sc_lv<1> > icmp_ln169_fu_395_p2;
    sc_signal< sc_lv<11> > select_ln156_fu_381_p3;
    sc_signal< sc_lv<32> > mul_ln165_fu_443_p1;
    sc_signal< sc_lv<32> > mul_ln165_1_fu_449_p1;
    sc_signal< sc_lv<32> > mul_ln165_2_fu_455_p1;
    sc_signal< sc_lv<32> > mul_ln165_3_fu_461_p1;
    sc_signal< sc_lv<32> > mul_ln165_4_fu_467_p1;
    sc_signal< sc_lv<32> > mul_ln165_5_fu_473_p1;
    sc_signal< sc_lv<32> > mul_ln165_6_fu_479_p1;
    sc_signal< sc_lv<32> > mul_ln165_7_fu_485_p1;
    sc_signal< sc_lv<32> > mul_ln165_8_fu_491_p1;
    sc_signal< sc_lv<32> > mul_ln165_3_fu_461_p2;
    sc_signal< sc_lv<32> > mul_ln165_4_fu_467_p2;
    sc_signal< sc_lv<32> > mul_ln165_5_fu_473_p2;
    sc_signal< sc_lv<32> > mul_ln165_6_fu_479_p2;
    sc_signal< sc_lv<32> > mul_ln165_7_fu_485_p2;
    sc_signal< sc_lv<32> > mul_ln165_8_fu_491_p2;
    sc_signal< sc_lv<32> > add_ln165_8_fu_509_p2;
    sc_signal< sc_lv<32> > add_ln165_7_fu_503_p2;
    sc_signal< sc_lv<32> > shl_ln165_2_fu_533_p2;
    sc_signal< sc_lv<32> > shl_ln165_fu_521_p2;
    sc_signal< sc_lv<32> > add_ln165_fu_543_p2;
    sc_signal< sc_lv<32> > shl_ln165_3_fu_538_p2;
    sc_signal< sc_lv<32> > add_ln165_2_fu_555_p2;
    sc_signal< sc_lv<32> > shl_ln165_1_fu_527_p2;
    sc_signal< sc_lv<32> > add_ln165_3_fu_559_p2;
    sc_signal< sc_lv<32> > add_ln165_1_fu_549_p2;
    sc_signal< sc_lv<32> > add_ln165_6_fu_571_p2;
    sc_signal< sc_lv<32> > add_ln165_10_fu_575_p2;
    sc_signal< sc_lv<32> > add_ln165_4_fu_565_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0;
    sc_signal< bool > ap_enable_operation_37;
    sc_signal< bool > ap_enable_state2_pp0_iter0_stage0;
    sc_signal< bool > ap_enable_operation_58;
    sc_signal< bool > ap_enable_state3_pp0_iter1_stage0;
    sc_signal< bool > ap_enable_operation_63;
    sc_signal< bool > ap_enable_operation_60;
    sc_signal< bool > ap_enable_operation_57;
    sc_signal< bool > ap_enable_operation_95;
    sc_signal< bool > ap_enable_state4_pp0_iter2_stage0;
    sc_signal< bool > ap_enable_operation_39;
    sc_signal< bool > ap_enable_operation_61;
    sc_signal< bool > ap_enable_operation_66;
    sc_signal< bool > ap_enable_operation_41;
    sc_signal< bool > ap_enable_operation_64;
    sc_signal< bool > ap_enable_operation_69;
    sc_signal< bool > ap_enable_operation_43;
    sc_signal< bool > ap_enable_operation_67;
    sc_signal< bool > ap_enable_operation_72;
    sc_signal< bool > ap_enable_operation_45;
    sc_signal< bool > ap_enable_operation_70;
    sc_signal< bool > ap_enable_operation_75;
    sc_signal< bool > ap_enable_operation_47;
    sc_signal< bool > ap_enable_operation_73;
    sc_signal< bool > ap_enable_operation_78;
    sc_signal< bool > ap_enable_operation_49;
    sc_signal< bool > ap_enable_operation_76;
    sc_signal< bool > ap_enable_operation_81;
    sc_signal< bool > ap_enable_operation_51;
    sc_signal< bool > ap_enable_operation_79;
    sc_signal< bool > ap_enable_operation_84;
    sc_signal< bool > ap_enable_operation_53;
    sc_signal< bool > ap_enable_operation_82;
    sc_signal< bool > ap_enable_operation_89;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<64> > bound_fu_355_p00;
    sc_signal< sc_lv<64> > bound_fu_355_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<11> ap_const_lv11_9;
    static const sc_lv<32> ap_const_lv32_6F;
    static const sc_lv<32> ap_const_lv32_10A;
    static const sc_lv<32> ap_const_lv32_1F2;
    static const sc_lv<32> ap_const_lv32_2D4;
    static const sc_lv<32> ap_const_lv32_335;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln156_1_fu_389_p2();
    void thread_add_ln156_fu_375_p2();
    void thread_add_ln165_10_fu_575_p2();
    void thread_add_ln165_1_fu_549_p2();
    void thread_add_ln165_2_fu_555_p2();
    void thread_add_ln165_3_fu_559_p2();
    void thread_add_ln165_4_fu_565_p2();
    void thread_add_ln165_5_fu_497_p2();
    void thread_add_ln165_6_fu_571_p2();
    void thread_add_ln165_7_fu_503_p2();
    void thread_add_ln165_8_fu_509_p2();
    void thread_add_ln165_9_fu_515_p2();
    void thread_add_ln165_fu_543_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_operation_37();
    void thread_ap_enable_operation_39();
    void thread_ap_enable_operation_41();
    void thread_ap_enable_operation_43();
    void thread_ap_enable_operation_45();
    void thread_ap_enable_operation_47();
    void thread_ap_enable_operation_49();
    void thread_ap_enable_operation_51();
    void thread_ap_enable_operation_53();
    void thread_ap_enable_operation_57();
    void thread_ap_enable_operation_58();
    void thread_ap_enable_operation_60();
    void thread_ap_enable_operation_61();
    void thread_ap_enable_operation_63();
    void thread_ap_enable_operation_64();
    void thread_ap_enable_operation_66();
    void thread_ap_enable_operation_67();
    void thread_ap_enable_operation_69();
    void thread_ap_enable_operation_70();
    void thread_ap_enable_operation_72();
    void thread_ap_enable_operation_73();
    void thread_ap_enable_operation_75();
    void thread_ap_enable_operation_76();
    void thread_ap_enable_operation_78();
    void thread_ap_enable_operation_79();
    void thread_ap_enable_operation_81();
    void thread_ap_enable_operation_82();
    void thread_ap_enable_operation_84();
    void thread_ap_enable_operation_89();
    void thread_ap_enable_operation_95();
    void thread_ap_enable_pp0();
    void thread_ap_enable_state2_pp0_iter0_stage0();
    void thread_ap_enable_state3_pp0_iter1_stage0();
    void thread_ap_enable_state4_pp0_iter2_stage0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_bound_fu_355_p0();
    void thread_bound_fu_355_p00();
    void thread_bound_fu_355_p1();
    void thread_bound_fu_355_p10();
    void thread_bound_fu_355_p2();
    void thread_hconv_V_blk_n();
    void thread_hconv_V_read();
    void thread_height_blk_n();
    void thread_height_out_blk_n();
    void thread_height_out_din();
    void thread_height_out_write();
    void thread_height_read();
    void thread_icmp_ln156_fu_370_p2();
    void thread_icmp_ln157_fu_365_p2();
    void thread_icmp_ln169_1_fu_401_p2();
    void thread_icmp_ln169_fu_395_p2();
    void thread_linebuf_0_address0();
    void thread_linebuf_0_ce0();
    void thread_linebuf_0_we0();
    void thread_linebuf_1_address0();
    void thread_linebuf_1_address1();
    void thread_linebuf_1_ce0();
    void thread_linebuf_1_ce1();
    void thread_linebuf_1_we1();
    void thread_linebuf_2_address0();
    void thread_linebuf_2_address1();
    void thread_linebuf_2_ce0();
    void thread_linebuf_2_ce1();
    void thread_linebuf_2_we1();
    void thread_linebuf_3_address0();
    void thread_linebuf_3_address1();
    void thread_linebuf_3_ce0();
    void thread_linebuf_3_ce1();
    void thread_linebuf_3_we1();
    void thread_linebuf_4_address0();
    void thread_linebuf_4_address1();
    void thread_linebuf_4_ce0();
    void thread_linebuf_4_ce1();
    void thread_linebuf_4_we1();
    void thread_linebuf_5_address0();
    void thread_linebuf_5_address1();
    void thread_linebuf_5_ce0();
    void thread_linebuf_5_ce1();
    void thread_linebuf_5_we1();
    void thread_linebuf_6_address0();
    void thread_linebuf_6_address1();
    void thread_linebuf_6_ce0();
    void thread_linebuf_6_ce1();
    void thread_linebuf_6_we1();
    void thread_linebuf_7_address0();
    void thread_linebuf_7_address1();
    void thread_linebuf_7_ce0();
    void thread_linebuf_7_ce1();
    void thread_linebuf_7_we1();
    void thread_linebuf_8_address0();
    void thread_linebuf_8_address1();
    void thread_linebuf_8_ce0();
    void thread_linebuf_8_ce1();
    void thread_linebuf_8_we1();
    void thread_linebuf_9_address0();
    void thread_linebuf_9_address1();
    void thread_linebuf_9_ce0();
    void thread_linebuf_9_ce1();
    void thread_linebuf_9_we1();
    void thread_mul_ln165_1_fu_449_p1();
    void thread_mul_ln165_1_fu_449_p2();
    void thread_mul_ln165_2_fu_455_p1();
    void thread_mul_ln165_2_fu_455_p2();
    void thread_mul_ln165_3_fu_461_p1();
    void thread_mul_ln165_3_fu_461_p2();
    void thread_mul_ln165_4_fu_467_p1();
    void thread_mul_ln165_4_fu_467_p2();
    void thread_mul_ln165_5_fu_473_p1();
    void thread_mul_ln165_5_fu_473_p2();
    void thread_mul_ln165_6_fu_479_p1();
    void thread_mul_ln165_6_fu_479_p2();
    void thread_mul_ln165_7_fu_485_p1();
    void thread_mul_ln165_7_fu_485_p2();
    void thread_mul_ln165_8_fu_491_p1();
    void thread_mul_ln165_8_fu_491_p2();
    void thread_mul_ln165_fu_443_p1();
    void thread_mul_ln165_fu_443_p2();
    void thread_row_fu_437_p2();
    void thread_select_ln156_1_fu_407_p3();
    void thread_select_ln156_2_fu_415_p3();
    void thread_select_ln156_fu_381_p3();
    void thread_shl_ln165_1_fu_527_p2();
    void thread_shl_ln165_2_fu_533_p2();
    void thread_shl_ln165_3_fu_538_p2();
    void thread_shl_ln165_fu_521_p2();
    void thread_vconv_V_blk_n();
    void thread_vconv_V_din();
    void thread_vconv_V_write();
    void thread_vconv_xlim_loc_blk_n();
    void thread_vconv_xlim_loc_out_blk_n();
    void thread_vconv_xlim_loc_out_din();
    void thread_vconv_xlim_loc_out_write();
    void thread_vconv_xlim_loc_read();
    void thread_zext_ln157_fu_361_p1();
    void thread_zext_ln164_fu_423_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
