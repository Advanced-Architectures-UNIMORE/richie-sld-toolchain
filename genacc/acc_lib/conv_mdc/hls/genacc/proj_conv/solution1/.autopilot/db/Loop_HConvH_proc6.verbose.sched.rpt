

================================================================
== Vivado HLS Report for 'Loop_HConvH_proc6'
================================================================
* Date:           Fri Nov  5 09:19:57 2021

* Version:        2019.2.1 (Build 2724168 on Thu Dec 05 05:19:09 MST 2019)
* Project:        proj_conv
* Solution:       solution1
* Product family: virtexuplus
* Target device:  xcvu9p-flga2104-2-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 6.66 ns | 5.301 ns |   0.83 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+---------+---------+
    |  Latency (cycles) |   Latency (absolute)  |    Interval   | Pipeline|
    |   min   |   max   |    min    |    max    | min |   max   |   Type  |
    +---------+---------+-----------+-----------+-----+---------+---------+
    |        2|  2070603| 13.320 ns | 13.790 ms |    2|  2070603|   none  |
    +---------+---------+-----------+-----------+-----+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+---------+---------+----------+-----------+-----------+-------------+----------+
        |                 |  Latency (cycles) | Iteration|  Initiation Interval  |     Trip    |          |
        |    Loop Name    |   min   |   max   |  Latency |  achieved |   target  |    Count    | Pipelined|
        +-----------------+---------+---------+----------+-----------+-----------+-------------+----------+
        |- HConvH_HConvW  |        0|  2070601|         2|          1|          1| 0 ~ 2070601 |    yes   |
        +-----------------+---------+---------+----------+-----------+-----------+-------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.62>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%hwin_1_1_i = alloca i32"   --->   Operation 5 'alloca' 'hwin_1_1_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%hwin_1 = alloca i32"   --->   Operation 6 'alloca' 'hwin_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%hwin_2 = alloca i32"   --->   Operation 7 'alloca' 'hwin_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%hwin_3 = alloca i32"   --->   Operation 8 'alloca' 'hwin_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%hwin_4 = alloca i32"   --->   Operation 9 'alloca' 'hwin_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%hwin_5 = alloca i32"   --->   Operation 10 'alloca' 'hwin_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%hwin_6 = alloca i32"   --->   Operation 11 'alloca' 'hwin_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%hwin_7 = alloca i32"   --->   Operation 12 'alloca' 'hwin_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%hwin_8 = alloca i32"   --->   Operation 13 'alloca' 'hwin_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%hwin_9 = alloca i32"   --->   Operation 14 'alloca' 'hwin_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %src_V, [5 x i8]* @p_str4, i32 1, i32 1, [5 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 15 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %hconv_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 16 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %width, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [11 x i8]* @ScalarProp_str)"   --->   Operation 17 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %height, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [11 x i8]* @ScalarProp_str)"   --->   Operation 18 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (1.45ns)   --->   "%height_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %height)" [conv.cpp:139->conv.cpp:239]   --->   Operation 19 'read' 'height_read' <Predicate = true> <Delay = 1.45> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 1.45> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_1 : Operation 20 [1/1] (1.45ns)   --->   "%width_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %width)" [conv.cpp:140->conv.cpp:239]   --->   Operation 20 'read' 'width_read' <Predicate = true> <Delay = 1.45> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 1.45> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%cast = zext i32 %height_read to i64" [conv.cpp:139->conv.cpp:239]   --->   Operation 21 'zext' 'cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%cast1 = zext i32 %width_read to i64" [conv.cpp:140->conv.cpp:239]   --->   Operation 22 'zext' 'cast1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (3.17ns)   --->   "%bound = mul i64 %cast1, %cast" [conv.cpp:140->conv.cpp:239]   --->   Operation 23 'mul' 'bound' <Predicate = true> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.60ns)   --->   "br label %0"   --->   Operation 24 'br' <Predicate = true> <Delay = 0.60>

State 2 <SV = 1> <Delay = 5.30>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i64 [ 0, %entry ], [ %add_ln139, %HConvW_end ]" [conv.cpp:139->conv.cpp:239]   --->   Operation 25 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%row_0_i_i = phi i11 [ 0, %entry ], [ %row, %HConvW_end ]"   --->   Operation 26 'phi' 'row_0_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%hwin_1_1_i_load = load i32* %hwin_1_1_i" [conv.cpp:147->conv.cpp:239]   --->   Operation 27 'load' 'hwin_1_1_i_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%hwin_1_load = load i32* %hwin_1" [conv.cpp:147->conv.cpp:239]   --->   Operation 28 'load' 'hwin_1_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%hwin_2_load = load i32* %hwin_2" [conv.cpp:147->conv.cpp:239]   --->   Operation 29 'load' 'hwin_2_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%hwin_3_load = load i32* %hwin_3" [conv.cpp:147->conv.cpp:239]   --->   Operation 30 'load' 'hwin_3_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%hwin_4_load = load i32* %hwin_4" [conv.cpp:147->conv.cpp:239]   --->   Operation 31 'load' 'hwin_4_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%hwin_5_load = load i32* %hwin_5" [conv.cpp:147->conv.cpp:239]   --->   Operation 32 'load' 'hwin_5_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%hwin_6_load = load i32* %hwin_6" [conv.cpp:147->conv.cpp:239]   --->   Operation 33 'load' 'hwin_6_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%hwin_7_load = load i32* %hwin_7" [conv.cpp:147->conv.cpp:239]   --->   Operation 34 'load' 'hwin_7_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%hwin_8_load = load i32* %hwin_8" [conv.cpp:147->conv.cpp:239]   --->   Operation 35 'load' 'hwin_8_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%hwin_9_load_1 = load i32* %hwin_9"   --->   Operation 36 'load' 'hwin_9_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln140 = zext i11 %row_0_i_i to i32" [conv.cpp:140->conv.cpp:239]   --->   Operation 37 'zext' 'zext_ln140' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.85ns)   --->   "%icmp_ln140 = icmp slt i32 %zext_ln140, %width_read" [conv.cpp:140->conv.cpp:239]   --->   Operation 38 'icmp' 'icmp_ln140' <Predicate = true> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (1.06ns)   --->   "%icmp_ln139 = icmp eq i64 %indvar_flatten, %bound" [conv.cpp:139->conv.cpp:239]   --->   Operation 39 'icmp' 'icmp_ln139' <Predicate = true> <Delay = 1.06> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.84ns)   --->   "%add_ln139 = add i64 %indvar_flatten, 1" [conv.cpp:139->conv.cpp:239]   --->   Operation 40 'add' 'add_ln139' <Predicate = true> <Delay = 0.84> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "store i32 %hwin_9_load_1, i32* %hwin_8"   --->   Operation 41 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "store i32 %hwin_8_load, i32* %hwin_7" [conv.cpp:147->conv.cpp:239]   --->   Operation 42 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "store i32 %hwin_7_load, i32* %hwin_6" [conv.cpp:147->conv.cpp:239]   --->   Operation 43 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "store i32 %hwin_6_load, i32* %hwin_5" [conv.cpp:147->conv.cpp:239]   --->   Operation 44 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "store i32 %hwin_5_load, i32* %hwin_4" [conv.cpp:147->conv.cpp:239]   --->   Operation 45 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "store i32 %hwin_4_load, i32* %hwin_3" [conv.cpp:147->conv.cpp:239]   --->   Operation 46 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "store i32 %hwin_3_load, i32* %hwin_2" [conv.cpp:147->conv.cpp:239]   --->   Operation 47 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "store i32 %hwin_2_load, i32* %hwin_1" [conv.cpp:147->conv.cpp:239]   --->   Operation 48 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "store i32 %hwin_1_load, i32* %hwin_1_1_i" [conv.cpp:147->conv.cpp:239]   --->   Operation 49 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "br i1 %icmp_ln139, label %.exit, label %HConvW_begin" [conv.cpp:139->conv.cpp:239]   --->   Operation 50 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%hwin_9_load = load i32* %hwin_9" [conv.cpp:147->conv.cpp:239]   --->   Operation 51 'load' 'hwin_9_load' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.30ns)   --->   "%select_ln140 = select i1 %icmp_ln140, i11 %row_0_i_i, i11 0" [conv.cpp:140->conv.cpp:239]   --->   Operation 52 'select' 'select_ln140' <Predicate = (!icmp_ln139)> <Delay = 0.30> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 @_ssdm_op_Read.axis.volatile.i32P(i32* %src_V)" [conv.cpp:142->conv.cpp:239]   --->   Operation 53 'read' 'tmp_2' <Predicate = (!icmp_ln139)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%shl_ln147 = shl i32 %hwin_1_1_i_load, 5" [conv.cpp:147->conv.cpp:239]   --->   Operation 54 'shl' 'shl_ln147' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%shl_ln147_1 = shl i32 %hwin_1_1_i_load, 2" [conv.cpp:147->conv.cpp:239]   --->   Operation 55 'shl' 'shl_ln147_1' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (3.17ns)   --->   "%mul_ln147 = mul i32 111, %hwin_1_load" [conv.cpp:147->conv.cpp:239]   --->   Operation 56 'mul' 'mul_ln147' <Predicate = (!icmp_ln139)> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (3.17ns)   --->   "%mul_ln147_1 = mul i32 266, %hwin_2_load" [conv.cpp:147->conv.cpp:239]   --->   Operation 57 'mul' 'mul_ln147_1' <Predicate = (!icmp_ln139)> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (3.17ns)   --->   "%mul_ln147_2 = mul i32 498, %hwin_3_load" [conv.cpp:147->conv.cpp:239]   --->   Operation 58 'mul' 'mul_ln147_2' <Predicate = (!icmp_ln139)> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (3.17ns)   --->   "%mul_ln147_3 = mul i32 724, %hwin_4_load" [conv.cpp:147->conv.cpp:239]   --->   Operation 59 'mul' 'mul_ln147_3' <Predicate = (!icmp_ln139)> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (3.17ns)   --->   "%mul_ln147_4 = mul i32 821, %hwin_5_load" [conv.cpp:147->conv.cpp:239]   --->   Operation 60 'mul' 'mul_ln147_4' <Predicate = (!icmp_ln139)> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (3.17ns)   --->   "%mul_ln147_5 = mul i32 724, %hwin_6_load" [conv.cpp:147->conv.cpp:239]   --->   Operation 61 'mul' 'mul_ln147_5' <Predicate = (!icmp_ln139)> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (3.17ns)   --->   "%mul_ln147_6 = mul i32 498, %hwin_7_load" [conv.cpp:147->conv.cpp:239]   --->   Operation 62 'mul' 'mul_ln147_6' <Predicate = (!icmp_ln139)> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (3.17ns)   --->   "%mul_ln147_7 = mul i32 266, %hwin_8_load" [conv.cpp:147->conv.cpp:239]   --->   Operation 63 'mul' 'mul_ln147_7' <Predicate = (!icmp_ln139)> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (3.17ns)   --->   "%mul_ln147_8 = mul i32 111, %hwin_9_load" [conv.cpp:147->conv.cpp:239]   --->   Operation 64 'mul' 'mul_ln147_8' <Predicate = (!icmp_ln139)> <Delay = 3.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%shl_ln147_2 = shl i32 %tmp_2, 5" [conv.cpp:147->conv.cpp:239]   --->   Operation 65 'shl' 'shl_ln147_2' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%shl_ln147_3 = shl i32 %tmp_2, 2" [conv.cpp:147->conv.cpp:239]   --->   Operation 66 'shl' 'shl_ln147_3' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln147 = add i32 %shl_ln147_2, %shl_ln147" [conv.cpp:147->conv.cpp:239]   --->   Operation 67 'add' 'add_ln147' <Predicate = (!icmp_ln139)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 68 [1/1] (0.73ns) (root node of TernaryAdder)   --->   "%add_ln147_1 = add i32 %add_ln147, %shl_ln147_3" [conv.cpp:147->conv.cpp:239]   --->   Operation 68 'add' 'add_ln147_1' <Predicate = (!icmp_ln139)> <Delay = 0.73> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 69 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln147_2 = add i32 %mul_ln147, %mul_ln147_1" [conv.cpp:147->conv.cpp:239]   --->   Operation 69 'add' 'add_ln147_2' <Predicate = (!icmp_ln139)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 70 [1/1] (0.73ns) (root node of TernaryAdder)   --->   "%add_ln147_3 = add i32 %add_ln147_2, %shl_ln147_1" [conv.cpp:147->conv.cpp:239]   --->   Operation 70 'add' 'add_ln147_3' <Predicate = (!icmp_ln139)> <Delay = 0.73> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 71 [1/1] (0.66ns)   --->   "%add_ln147_5 = add i32 %mul_ln147_3, %mul_ln147_4" [conv.cpp:147->conv.cpp:239]   --->   Operation 71 'add' 'add_ln147_5' <Predicate = (!icmp_ln139)> <Delay = 0.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln147_6 = add i32 %add_ln147_5, %mul_ln147_2" [conv.cpp:147->conv.cpp:239]   --->   Operation 72 'add' 'add_ln147_6' <Predicate = (!icmp_ln139)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 73 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln147_7 = add i32 %mul_ln147_5, %mul_ln147_6" [conv.cpp:147->conv.cpp:239]   --->   Operation 73 'add' 'add_ln147_7' <Predicate = (!icmp_ln139)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 74 [1/1] (0.66ns)   --->   "%add_ln147_8 = add i32 %mul_ln147_7, %mul_ln147_8" [conv.cpp:147->conv.cpp:239]   --->   Operation 74 'add' 'add_ln147_8' <Predicate = (!icmp_ln139)> <Delay = 0.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (0.73ns) (root node of TernaryAdder)   --->   "%add_ln147_9 = add i32 %add_ln147_8, %add_ln147_7" [conv.cpp:147->conv.cpp:239]   --->   Operation 75 'add' 'add_ln147_9' <Predicate = (!icmp_ln139)> <Delay = 0.73> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 76 [1/1] (0.73ns) (root node of TernaryAdder)   --->   "%add_ln147_10 = add i32 %add_ln147_9, %add_ln147_6" [conv.cpp:147->conv.cpp:239]   --->   Operation 76 'add' 'add_ln147_10' <Predicate = (!icmp_ln139)> <Delay = 0.73> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 77 [1/1] (0.61ns)   --->   "%icmp_ln149 = icmp ugt i11 %select_ln140, 9" [conv.cpp:149->conv.cpp:239]   --->   Operation 77 'icmp' 'icmp_ln149' <Predicate = (!icmp_ln139)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "store i32 %tmp_2, i32* %hwin_9" [conv.cpp:149->conv.cpp:239]   --->   Operation 78 'store' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "br i1 %icmp_ln149, label %1, label %HConvW_end" [conv.cpp:149->conv.cpp:239]   --->   Operation 79 'br' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.53ns)   --->   "%row = add i11 %select_ln140, 1" [conv.cpp:140->conv.cpp:239]   --->   Operation 80 'add' 'row' <Predicate = (!icmp_ln139)> <Delay = 0.53> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 2.18>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @HConvH_HConvW_str)"   --->   Operation 81 'specloopname' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 2070601, i64 0)"   --->   Operation 82 'speclooptripcount' 'empty' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str15) nounwind" [conv.cpp:140->conv.cpp:239]   --->   Operation 83 'specloopname' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_9_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str15)" [conv.cpp:140->conv.cpp:239]   --->   Operation 84 'specregionbegin' 'tmp_9_i' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [conv.cpp:141->conv.cpp:239]   --->   Operation 85 'specpipeline' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln147_4 = add i32 %add_ln147_3, %add_ln147_1" [conv.cpp:147->conv.cpp:239]   --->   Operation 86 'add' 'add_ln147_4' <Predicate = (!icmp_ln139)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 87 [1/1] (0.73ns) (root node of TernaryAdder)   --->   "%tmp = add i32 %add_ln147_10, %add_ln147_4" [conv.cpp:147->conv.cpp:239]   --->   Operation 87 'add' 'tmp' <Predicate = (!icmp_ln139)> <Delay = 0.73> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 88 [1/1] (1.45ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* %hconv_V, i32 %tmp)" [conv.cpp:150->conv.cpp:239]   --->   Operation 88 'write' <Predicate = (icmp_ln149)> <Delay = 1.45> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 1.45> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "br label %HConvW_end" [conv.cpp:150->conv.cpp:239]   --->   Operation 89 'br' <Predicate = (icmp_ln149)> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%empty_15 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str15, i32 %tmp_9_i)" [conv.cpp:151->conv.cpp:239]   --->   Operation 90 'specregionend' 'empty_15' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "br label %0" [conv.cpp:140->conv.cpp:239]   --->   Operation 91 'br' <Predicate = (!icmp_ln139)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.00>
ST_4 : Operation 92 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 92 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 6.66ns, clock uncertainty: 0.832ns.

 <State 1>: 4.63ns
The critical path consists of the following:
	fifo read on port 'height' (conv.cpp:139->conv.cpp:239) [19]  (1.46 ns)
	'mul' operation ('bound', conv.cpp:140->conv.cpp:239) [23]  (3.17 ns)

 <State 2>: 5.3ns
The critical path consists of the following:
	'load' operation ('hwin_8_load', conv.cpp:147->conv.cpp:239) on local variable 'hwin[8]' [36]  (0 ns)
	'mul' operation ('mul_ln147_7', conv.cpp:147->conv.cpp:239) [70]  (3.17 ns)
	'add' operation ('add_ln147_8', conv.cpp:147->conv.cpp:239) [82]  (0.669 ns)
	'add' operation ('add_ln147_9', conv.cpp:147->conv.cpp:239) [83]  (0.731 ns)
	'add' operation ('add_ln147_10', conv.cpp:147->conv.cpp:239) [84]  (0.731 ns)

 <State 3>: 2.19ns
The critical path consists of the following:
	'add' operation ('add_ln147_4', conv.cpp:147->conv.cpp:239) [78]  (0 ns)
	'add' operation ('tmp', conv.cpp:147->conv.cpp:239) [85]  (0.731 ns)
	fifo write on port 'hconv_V' (conv.cpp:150->conv.cpp:239) [90]  (1.46 ns)

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
