// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.1 (64-bit)
// Version: 2022.2.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dilate_cv_xfdilate_patch_128_128_1_0_1_0_0_0_129_3_3_Pipeline_VITIS_LOOP_289_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dilate_in_data19_dout,
        dilate_in_data19_num_data_valid,
        dilate_in_data19_fifo_cap,
        dilate_in_data19_empty_n,
        dilate_in_data19_read,
        img_width,
        buf_V_1_address1,
        buf_V_1_ce1,
        buf_V_1_we1,
        buf_V_1_d1
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter2_fsm_state3 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;
parameter    ap_ST_iter2_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] dilate_in_data19_dout;
input  [1:0] dilate_in_data19_num_data_valid;
input  [1:0] dilate_in_data19_fifo_cap;
input   dilate_in_data19_empty_n;
output   dilate_in_data19_read;
input  [15:0] img_width;
output  [6:0] buf_V_1_address1;
output   buf_V_1_ce1;
output   buf_V_1_we1;
output  [7:0] buf_V_1_d1;

reg ap_idle;
reg dilate_in_data19_read;
reg buf_V_1_ce1;
reg buf_V_1_we1;

reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg   [1:0] ap_CS_iter2_fsm;
wire    ap_CS_iter2_fsm_state0;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln1027_reg_130;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_CS_iter1_fsm_state2;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_CS_iter2_fsm_state3;
wire   [0:0] icmp_ln1027_fu_97_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    dilate_in_data19_blk_n;
reg   [12:0] i_col_V_1_reg_125;
reg   [12:0] i_col_V_1_reg_125_pp0_iter1_reg;
reg   [0:0] icmp_ln1027_reg_130_pp0_iter1_reg;
reg   [7:0] dilate_in_data19_read_reg_134;
wire   [63:0] zext_ln541_fu_114_p1;
reg   [12:0] i_col_V_fu_52;
wire   [12:0] i_col_V_2_fu_103_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_i_col_V_1;
wire   [15:0] zext_ln1027_fu_93_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg   [1:0] ap_NS_iter2_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
reg    ap_ST_iter1_fsm_state2_blk;
wire    ap_ST_iter2_fsm_state3_blk;
wire    ap_start_int;
reg    ap_condition_171;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_CS_iter2_fsm = 2'd1;
#0 ap_done_reg = 1'b0;
end

dilate_cv_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_iter2_fsm_state3) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_iter2_fsm_state3) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if ((~((icmp_ln1027_reg_130 == 1'd1) & (dilate_in_data19_empty_n == 1'b0)) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_171)) begin
        if ((icmp_ln1027_fu_97_p2 == 1'd1)) begin
            i_col_V_fu_52 <= i_col_V_2_fu_103_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_col_V_fu_52 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln1027_reg_130 == 1'd1) & (dilate_in_data19_empty_n == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state2))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        i_col_V_1_reg_125 <= ap_sig_allocacmp_i_col_V_1;
        icmp_ln1027_reg_130 <= icmp_ln1027_fu_97_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln1027_reg_130 == 1'd1) & (dilate_in_data19_empty_n == 1'b0)) & (icmp_ln1027_reg_130 == 1'd1) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        dilate_in_data19_read_reg_134 <= dilate_in_data19_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln1027_reg_130 == 1'd1) & (dilate_in_data19_empty_n == 1'b0)) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        i_col_V_1_reg_125_pp0_iter1_reg <= i_col_V_1_reg_125;
        icmp_ln1027_reg_130_pp0_iter1_reg <= icmp_ln1027_reg_130;
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_130 == 1'd1) & (dilate_in_data19_empty_n == 1'b0))) begin
        ap_ST_iter1_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_iter1_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_iter2_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln1027_reg_130 == 1'd1) & (dilate_in_data19_empty_n == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state2))) & (icmp_ln1027_fu_97_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter2_fsm_state3) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter2_fsm_state0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln1027_reg_130 == 1'd1) & (dilate_in_data19_empty_n == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state2))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_col_V_1 = 13'd0;
    end else begin
        ap_sig_allocacmp_i_col_V_1 = i_col_V_fu_52;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter2_fsm_state3)) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_130_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        buf_V_1_we1 = 1'b1;
    end else begin
        buf_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_130 == 1'd1) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        dilate_in_data19_blk_n = dilate_in_data19_empty_n;
    end else begin
        dilate_in_data19_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln1027_reg_130 == 1'd1) & (dilate_in_data19_empty_n == 1'b0)) & (icmp_ln1027_reg_130 == 1'd1) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        dilate_in_data19_read = 1'b1;
    end else begin
        dilate_in_data19_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((icmp_ln1027_reg_130 == 1'd1) & (dilate_in_data19_empty_n == 1'b0)) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_start_int == 1'b1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if ((~((icmp_ln1027_reg_130 == 1'd1) & (dilate_in_data19_empty_n == 1'b0)) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start_int == 1'b0))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((ap_start_int == 1'b0) | ((icmp_ln1027_reg_130 == 1'd1) & (dilate_in_data19_empty_n == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state2))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state3 : begin
            if (((1'b0 == ap_CS_iter1_fsm_state2) | ((icmp_ln1027_reg_130 == 1'd1) & (dilate_in_data19_empty_n == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state2)))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else if (((~((icmp_ln1027_reg_130 == 1'd1) & (dilate_in_data19_empty_n == 1'b0)) & (1'b1 == ap_CS_iter1_fsm_state2)) | ((icmp_ln1027_reg_130_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_iter2_fsm_state3)))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~((icmp_ln1027_reg_130 == 1'd1) & (dilate_in_data19_empty_n == 1'b0)) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter2_fsm_state0 = ap_CS_iter2_fsm[32'd0];

assign ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((icmp_ln1027_reg_130 == 1'd1) & (dilate_in_data19_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_171 = (~((ap_start_int == 1'b0) | ((icmp_ln1027_reg_130 == 1'd1) & (dilate_in_data19_empty_n == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state2))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign buf_V_1_address1 = zext_ln541_fu_114_p1;

assign buf_V_1_d1 = dilate_in_data19_read_reg_134;

assign i_col_V_2_fu_103_p2 = (ap_sig_allocacmp_i_col_V_1 + 13'd1);

assign icmp_ln1027_fu_97_p2 = ((zext_ln1027_fu_93_p1 < img_width) ? 1'b1 : 1'b0);

assign zext_ln1027_fu_93_p1 = ap_sig_allocacmp_i_col_V_1;

assign zext_ln541_fu_114_p1 = i_col_V_1_reg_125_pp0_iter1_reg;

endmodule //dilate_cv_xfdilate_patch_128_128_1_0_1_0_0_0_129_3_3_Pipeline_VITIS_LOOP_289_2
