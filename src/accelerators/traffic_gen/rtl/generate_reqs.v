// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module generate_reqs (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_in_V_TDATA,
        stream_in_V_TVALID,
        stream_in_V_TREADY,
        stream_out_V_TDATA,
        stream_out_V_TVALID,
        stream_out_V_TREADY,
        t_total,
        t_on,
        t_off
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state7 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] stream_in_V_TDATA;
input   stream_in_V_TVALID;
output   stream_in_V_TREADY;
output  [31:0] stream_out_V_TDATA;
output   stream_out_V_TVALID;
input   stream_out_V_TREADY;
input  [31:0] t_total;
input  [31:0] t_on;
input  [31:0] t_off;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stream_in_V_TREADY;
reg stream_out_V_TVALID;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] p_pwm_cnt_w_on;
reg   [31:0] p_pwm_cnt_w_off;
reg   [31:0] p_pwm_cnt_w_array;
reg   [0:0] p_pwm_write_on;
reg    stream_in_V_TDATA_blk_n;
wire    ap_CS_fsm_state3;
reg   [0:0] icmp_ln100_reg_461;
reg   [0:0] icmp_ln103_reg_470;
reg    stream_out_V_TDATA_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] p_pwm_write_on_load_reg_504;
reg   [17:0] jj_0_reg_149;
wire   [17:0] empty_fu_178_p1;
reg   [17:0] empty_reg_455;
wire   [0:0] icmp_ln100_fu_202_p2;
wire    ap_CS_fsm_state2;
wire   [17:0] ii_fu_207_p2;
reg   [17:0] ii_reg_465;
wire   [0:0] icmp_ln103_fu_216_p2;
reg   [31:0] p_pwm_cnt_r_on_0_load_reg_474;
wire   [31:0] select_ln107_fu_239_p3;
reg   [31:0] select_ln107_reg_479;
wire   [31:0] select_ln107_1_fu_247_p3;
reg   [31:0] select_ln107_1_reg_484;
wire   [0:0] icmp_ln114_fu_266_p2;
reg   [0:0] icmp_ln114_reg_489;
wire   [0:0] icmp_ln136_fu_328_p2;
wire    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state6_pp1_stage0_iter1;
reg    ap_block_state6_io;
reg    ap_block_pp1_stage0_11001;
wire   [17:0] jj_fu_333_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] p_pwm_write_on_load_load_fu_339_p1;
wire    ap_CS_fsm_state4;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
reg   [11:0] local_address0;
reg    local_ce0;
reg    local_we0;
wire   [31:0] local_q0;
reg   [17:0] ii_0_reg_138;
reg    ap_predicate_op46_read_state3;
reg    ap_block_state3;
wire   [63:0] zext_ln104_fu_279_p1;
wire   [63:0] zext_ln140_fu_368_p1;
wire   [0:0] icmp_ln150_fu_359_p2;
wire   [31:0] add_ln142_fu_389_p2;
wire   [31:0] add_ln149_fu_347_p2;
wire   [0:0] icmp_ln143_fu_401_p2;
wire   [31:0] add_ln141_fu_373_p2;
reg   [31:0] p_pwm_cnt_r_off_0_fu_66;
wire   [31:0] add_ln113_fu_260_p2;
reg   [31:0] p_pwm_cnt_r_on_0_fu_70;
wire   [31:0] add_ln106_fu_228_p2;
wire   [31:0] select_ln114_fu_306_p3;
reg   [31:0] p_pwm_read_on_0_fu_74;
wire   [31:0] zext_ln114_fu_303_p1;
reg   [31:0] p_pwm_cnt_r_array_0_fu_78;
wire   [31:0] add_ln105_fu_284_p2;
wire    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln107_fu_234_p2;
wire    ap_CS_fsm_state7;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 p_pwm_cnt_w_on = 32'd0;
#0 p_pwm_cnt_w_off = 32'd0;
#0 p_pwm_cnt_w_array = 32'd0;
#0 p_pwm_write_on = 1'd0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
end

generate_reqs_local #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
local_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_address0),
    .ce0(local_ce0),
    .we0(local_we0),
    .d0(stream_in_V_TDATA),
    .q0(local_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state5) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state5) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_in_V_TVALID == 1'b0) & (ap_predicate_op46_read_state3 == 1'b1)) & (icmp_ln100_reg_461 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ii_0_reg_138 <= ii_reg_465;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        ii_0_reg_138 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln136_fu_328_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        jj_0_reg_149 <= jj_fu_333_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        jj_0_reg_149 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_in_V_TVALID == 1'b0) & (ap_predicate_op46_read_state3 == 1'b1)) & (icmp_ln103_reg_470 == 1'd0) & (icmp_ln100_reg_461 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        p_pwm_cnt_r_array_0_fu_78 <= add_ln105_fu_284_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_pwm_cnt_r_array_0_fu_78 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_in_V_TVALID == 1'b0) & (ap_predicate_op46_read_state3 == 1'b1)) & (icmp_ln103_reg_470 == 1'd0) & (icmp_ln100_reg_461 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        p_pwm_cnt_r_off_0_fu_66 <= select_ln107_1_reg_484;
    end else if (((icmp_ln103_fu_216_p2 == 1'd1) & (icmp_ln100_fu_202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_pwm_cnt_r_off_0_fu_66 <= add_ln113_fu_260_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_pwm_cnt_r_off_0_fu_66 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_in_V_TVALID == 1'b0) & (ap_predicate_op46_read_state3 == 1'b1)) & (icmp_ln103_reg_470 == 1'd1) & (icmp_ln100_reg_461 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        p_pwm_cnt_r_on_0_fu_70 <= select_ln114_fu_306_p3;
    end else if (((icmp_ln103_fu_216_p2 == 1'd0) & (icmp_ln100_fu_202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_pwm_cnt_r_on_0_fu_70 <= add_ln106_fu_228_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_pwm_cnt_r_on_0_fu_70 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((p_pwm_write_on_load_load_fu_339_p1 == 1'd1) & (icmp_ln136_fu_328_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_pwm_cnt_w_array <= add_ln141_fu_373_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_pwm_cnt_w_array <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((p_pwm_write_on_load_load_fu_339_p1 == 1'd0) & (icmp_ln136_fu_328_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_pwm_cnt_w_off <= add_ln149_fu_347_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln143_fu_401_p2 == 1'd1) & (p_pwm_write_on_load_load_fu_339_p1 == 1'd1) & (icmp_ln136_fu_328_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        p_pwm_cnt_w_off <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((p_pwm_write_on_load_load_fu_339_p1 == 1'd1) & (icmp_ln136_fu_328_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_pwm_cnt_w_on <= add_ln142_fu_389_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln150_fu_359_p2 == 1'd1) & (p_pwm_write_on_load_load_fu_339_p1 == 1'd0) & (icmp_ln136_fu_328_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        p_pwm_cnt_w_on <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_in_V_TVALID == 1'b0) & (ap_predicate_op46_read_state3 == 1'b1)) & (icmp_ln103_reg_470 == 1'd1) & (icmp_ln100_reg_461 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        p_pwm_read_on_0_fu_74 <= zext_ln114_fu_303_p1;
    end else if ((~((stream_in_V_TVALID == 1'b0) & (ap_predicate_op46_read_state3 == 1'b1)) & (icmp_ln103_reg_470 == 1'd0) & (icmp_ln100_reg_461 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        p_pwm_read_on_0_fu_74 <= select_ln107_reg_479;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_pwm_read_on_0_fu_74 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln143_fu_401_p2 == 1'd1) & (p_pwm_write_on_load_load_fu_339_p1 == 1'd1) & (icmp_ln136_fu_328_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_pwm_write_on <= 1'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln150_fu_359_p2 == 1'd1) & (p_pwm_write_on_load_load_fu_339_p1 == 1'd0) & (icmp_ln136_fu_328_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        p_pwm_write_on <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        empty_reg_455 <= empty_fu_178_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln100_reg_461 <= icmp_ln100_fu_202_p2;
        ii_reg_465 <= ii_fu_207_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_fu_202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln103_reg_470 <= icmp_ln103_fu_216_p2;
        p_pwm_cnt_r_on_0_load_reg_474 <= p_pwm_cnt_r_on_0_fu_70;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln103_fu_216_p2 == 1'd1) & (icmp_ln100_fu_202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln114_reg_489 <= icmp_ln114_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln136_fu_328_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_pwm_write_on_load_reg_504 <= p_pwm_write_on;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln103_fu_216_p2 == 1'd0) & (icmp_ln100_fu_202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        select_ln107_1_reg_484 <= select_ln107_1_fu_247_p3;
        select_ln107_reg_479 <= select_ln107_fu_239_p3;
    end
end

always @ (*) begin
    if ((icmp_ln136_fu_328_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        local_address0 = zext_ln140_fu_368_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        local_address0 = zext_ln104_fu_279_p1;
    end else begin
        local_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | (~((stream_in_V_TVALID == 1'b0) & (ap_predicate_op46_read_state3 == 1'b1)) & (1'b1 == ap_CS_fsm_state3)))) begin
        local_ce0 = 1'b1;
    end else begin
        local_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((stream_in_V_TVALID == 1'b0) & (ap_predicate_op46_read_state3 == 1'b1)) & (icmp_ln103_reg_470 == 1'd0) & (icmp_ln100_reg_461 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        local_we0 = 1'b1;
    end else begin
        local_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln103_reg_470 == 1'd0) & (icmp_ln100_reg_461 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        stream_in_V_TDATA_blk_n = stream_in_V_TVALID;
    end else begin
        stream_in_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((stream_in_V_TVALID == 1'b0) & (ap_predicate_op46_read_state3 == 1'b1)) & (1'b1 == ap_CS_fsm_state3) & (ap_predicate_op46_read_state3 == 1'b1))) begin
        stream_in_V_TREADY = 1'b1;
    end else begin
        stream_in_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((p_pwm_write_on_load_reg_504 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        stream_out_V_TDATA_blk_n = stream_out_V_TREADY;
    end else begin
        stream_out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((p_pwm_write_on_load_reg_504 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        stream_out_V_TVALID = 1'b1;
    end else begin
        stream_out_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln100_fu_202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((stream_in_V_TVALID == 1'b0) & (ap_predicate_op46_read_state3 == 1'b1)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln136_fu_328_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln136_fu_328_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln105_fu_284_p2 = (p_pwm_cnt_r_array_0_fu_78 + 32'd1);

assign add_ln106_fu_228_p2 = (p_pwm_cnt_r_on_0_fu_70 + 32'd1);

assign add_ln113_fu_260_p2 = (p_pwm_cnt_r_off_0_fu_66 + 32'd1);

assign add_ln141_fu_373_p2 = (p_pwm_cnt_w_array + 32'd1);

assign add_ln142_fu_389_p2 = (p_pwm_cnt_w_on + 32'd1);

assign add_ln149_fu_347_p2 = (p_pwm_cnt_w_off + 32'd1);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_block_state6_io));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_block_state6_io));
end

always @ (*) begin
    ap_block_state3 = ((stream_in_V_TVALID == 1'b0) & (ap_predicate_op46_read_state3 == 1'b1));
end

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((p_pwm_write_on_load_reg_504 == 1'd1) & (stream_out_V_TREADY == 1'b0));
end

assign ap_block_state6_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_predicate_op46_read_state3 = ((icmp_ln103_reg_470 == 1'd0) & (icmp_ln100_reg_461 == 1'd0));
end

assign empty_fu_178_p1 = t_total[17:0];

assign icmp_ln100_fu_202_p2 = ((ii_0_reg_138 == empty_reg_455) ? 1'b1 : 1'b0);

assign icmp_ln103_fu_216_p2 = ((p_pwm_read_on_0_fu_74 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_234_p2 = ((add_ln106_fu_228_p2 == t_on) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_266_p2 = ((add_ln113_fu_260_p2 == t_off) ? 1'b1 : 1'b0);

assign icmp_ln136_fu_328_p2 = ((jj_0_reg_149 == empty_reg_455) ? 1'b1 : 1'b0);

assign icmp_ln143_fu_401_p2 = ((add_ln142_fu_389_p2 == t_on) ? 1'b1 : 1'b0);

assign icmp_ln150_fu_359_p2 = ((add_ln149_fu_347_p2 == t_off) ? 1'b1 : 1'b0);

assign ii_fu_207_p2 = (ii_0_reg_138 + 18'd1);

assign jj_fu_333_p2 = (jj_0_reg_149 + 18'd1);

assign p_pwm_write_on_load_load_fu_339_p1 = p_pwm_write_on;

assign select_ln107_1_fu_247_p3 = ((icmp_ln107_fu_234_p2[0:0] === 1'b1) ? 32'd0 : p_pwm_cnt_r_off_0_fu_66);

assign select_ln107_fu_239_p3 = ((icmp_ln107_fu_234_p2[0:0] === 1'b1) ? 32'd0 : p_pwm_read_on_0_fu_74);

assign select_ln114_fu_306_p3 = ((icmp_ln114_reg_489[0:0] === 1'b1) ? 32'd0 : p_pwm_cnt_r_on_0_load_reg_474);

assign stream_out_V_TDATA = local_q0;

assign zext_ln104_fu_279_p1 = p_pwm_cnt_r_array_0_fu_78;

assign zext_ln114_fu_303_p1 = icmp_ln114_reg_489;

assign zext_ln140_fu_368_p1 = p_pwm_cnt_w_array;

endmodule //generate_reqs
