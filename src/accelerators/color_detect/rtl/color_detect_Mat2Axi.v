// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.1 (64-bit)
// Version: 2022.2.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module color_detect_Mat2Axi (
        imgOutput_data7_dout,
        imgOutput_data7_empty_n,
        imgOutput_data7_read,
        img_out_TDATA,
        rows,
        cols,
        ap_clk,
        ap_rst,
        rows_ap_vld,
        cols_ap_vld,
        ap_start,
        img_out_TVALID,
        img_out_TREADY,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [7:0] imgOutput_data7_dout;
input   imgOutput_data7_empty_n;
output   imgOutput_data7_read;
output  [31:0] img_out_TDATA;
input  [31:0] rows;
input  [31:0] cols;
input   ap_clk;
input   ap_rst;
input   rows_ap_vld;
input   cols_ap_vld;
input   ap_start;
output   img_out_TVALID;
input   img_out_TREADY;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    addrbound_1_U0_ap_start;
wire    addrbound_1_U0_ap_done;
wire    addrbound_1_U0_ap_continue;
wire    addrbound_1_U0_ap_idle;
wire    addrbound_1_U0_ap_ready;
wire   [12:0] addrbound_1_U0_p_channel;
wire   [14:0] addrbound_1_U0_rows;
wire   [14:0] addrbound_1_U0_cols;
wire    p_channel_full_n;
wire    Mat2Axi_Block_entry35_proc_U0_ap_start;
wire    Mat2Axi_Block_entry35_proc_U0_ap_done;
wire    Mat2Axi_Block_entry35_proc_U0_ap_continue;
wire    Mat2Axi_Block_entry35_proc_U0_ap_idle;
wire    Mat2Axi_Block_entry35_proc_U0_ap_ready;
wire   [12:0] Mat2Axi_Block_entry35_proc_U0_ap_return;
wire    axibound_V_full_n;
wire    Mat2AxiStream_U0_imgOutput_data7_read;
wire   [31:0] Mat2AxiStream_U0_ldata1_din;
wire    Mat2AxiStream_U0_ldata1_write;
wire    Mat2AxiStream_U0_ap_start;
wire    Mat2AxiStream_U0_ap_done;
wire    Mat2AxiStream_U0_ap_ready;
wire    Mat2AxiStream_U0_ap_idle;
wire    Mat2AxiStream_U0_ap_continue;
wire    AxiStream2Axi_U0_ap_start;
wire    AxiStream2Axi_U0_ap_done;
wire    AxiStream2Axi_U0_ap_continue;
wire    AxiStream2Axi_U0_ap_idle;
wire    AxiStream2Axi_U0_ap_ready;
wire    AxiStream2Axi_U0_ldata1_read;
wire   [31:0] AxiStream2Axi_U0_img_out_TDATA;
wire    AxiStream2Axi_U0_img_out_TVALID;
wire   [12:0] p_channel_dout;
wire   [1:0] p_channel_num_data_valid;
wire   [1:0] p_channel_fifo_cap;
wire    p_channel_empty_n;
wire   [12:0] axibound_V_dout;
wire   [1:0] axibound_V_num_data_valid;
wire   [1:0] axibound_V_fifo_cap;
wire    axibound_V_empty_n;
wire    ldata_full_n;
wire   [31:0] ldata_dout;
wire   [1:0] ldata_num_data_valid;
wire   [1:0] ldata_fifo_cap;
wire    ldata_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_addrbound_1_U0_ap_ready;
wire    ap_sync_addrbound_1_U0_ap_ready;
reg    ap_sync_reg_Mat2AxiStream_U0_ap_ready;
wire    ap_sync_Mat2AxiStream_U0_ap_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_addrbound_1_U0_ap_ready = 1'b0;
#0 ap_sync_reg_Mat2AxiStream_U0_ap_ready = 1'b0;
end

color_detect_addrbound_1 addrbound_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(addrbound_1_U0_ap_start),
    .ap_done(addrbound_1_U0_ap_done),
    .ap_continue(addrbound_1_U0_ap_continue),
    .ap_idle(addrbound_1_U0_ap_idle),
    .ap_ready(addrbound_1_U0_ap_ready),
    .p_channel(addrbound_1_U0_p_channel),
    .rows(addrbound_1_U0_rows),
    .cols(addrbound_1_U0_cols)
);

color_detect_Mat2Axi_Block_entry35_proc Mat2Axi_Block_entry35_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Mat2Axi_Block_entry35_proc_U0_ap_start),
    .ap_done(Mat2Axi_Block_entry35_proc_U0_ap_done),
    .ap_continue(Mat2Axi_Block_entry35_proc_U0_ap_continue),
    .ap_idle(Mat2Axi_Block_entry35_proc_U0_ap_idle),
    .ap_ready(Mat2Axi_Block_entry35_proc_U0_ap_ready),
    .axibound_V_1(p_channel_dout),
    .ap_return(Mat2Axi_Block_entry35_proc_U0_ap_return)
);

color_detect_Mat2AxiStream Mat2AxiStream_U0(
    .imgOutput_data7_dout(imgOutput_data7_dout),
    .imgOutput_data7_empty_n(imgOutput_data7_empty_n),
    .imgOutput_data7_read(Mat2AxiStream_U0_imgOutput_data7_read),
    .ldata1_din(Mat2AxiStream_U0_ldata1_din),
    .ldata1_full_n(ldata_full_n),
    .ldata1_write(Mat2AxiStream_U0_ldata1_write),
    .rows(rows),
    .cols(cols),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .rows_ap_vld(rows_ap_vld),
    .cols_ap_vld(cols_ap_vld),
    .ap_start(Mat2AxiStream_U0_ap_start),
    .ap_done(Mat2AxiStream_U0_ap_done),
    .ap_ready(Mat2AxiStream_U0_ap_ready),
    .ap_idle(Mat2AxiStream_U0_ap_idle),
    .ap_continue(Mat2AxiStream_U0_ap_continue)
);

color_detect_AxiStream2Axi AxiStream2Axi_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(AxiStream2Axi_U0_ap_start),
    .ap_done(AxiStream2Axi_U0_ap_done),
    .ap_continue(AxiStream2Axi_U0_ap_continue),
    .ap_idle(AxiStream2Axi_U0_ap_idle),
    .ap_ready(AxiStream2Axi_U0_ap_ready),
    .ldata1_dout(ldata_dout),
    .ldata1_num_data_valid(ldata_num_data_valid),
    .ldata1_fifo_cap(ldata_fifo_cap),
    .ldata1_empty_n(ldata_empty_n),
    .ldata1_read(AxiStream2Axi_U0_ldata1_read),
    .img_out_TREADY(img_out_TREADY),
    .img_out_TDATA(AxiStream2Axi_U0_img_out_TDATA),
    .img_out_TVALID(AxiStream2Axi_U0_img_out_TVALID),
    .p_read(axibound_V_dout)
);

color_detect_fifo_w13_d2_S p_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(addrbound_1_U0_p_channel),
    .if_full_n(p_channel_full_n),
    .if_write(addrbound_1_U0_ap_done),
    .if_dout(p_channel_dout),
    .if_num_data_valid(p_channel_num_data_valid),
    .if_fifo_cap(p_channel_fifo_cap),
    .if_empty_n(p_channel_empty_n),
    .if_read(Mat2Axi_Block_entry35_proc_U0_ap_ready)
);

color_detect_fifo_w13_d2_S axibound_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Mat2Axi_Block_entry35_proc_U0_ap_return),
    .if_full_n(axibound_V_full_n),
    .if_write(Mat2Axi_Block_entry35_proc_U0_ap_done),
    .if_dout(axibound_V_dout),
    .if_num_data_valid(axibound_V_num_data_valid),
    .if_fifo_cap(axibound_V_fifo_cap),
    .if_empty_n(axibound_V_empty_n),
    .if_read(AxiStream2Axi_U0_ap_ready)
);

color_detect_fifo_w32_d2_S_x ldata_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Mat2AxiStream_U0_ldata1_din),
    .if_full_n(ldata_full_n),
    .if_write(Mat2AxiStream_U0_ldata1_write),
    .if_dout(ldata_dout),
    .if_num_data_valid(ldata_num_data_valid),
    .if_fifo_cap(ldata_fifo_cap),
    .if_empty_n(ldata_empty_n),
    .if_read(AxiStream2Axi_U0_ldata1_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Mat2AxiStream_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Mat2AxiStream_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Mat2AxiStream_U0_ap_ready <= ap_sync_Mat2AxiStream_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_addrbound_1_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_addrbound_1_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_addrbound_1_U0_ap_ready <= ap_sync_addrbound_1_U0_ap_ready;
        end
    end
end

assign AxiStream2Axi_U0_ap_continue = ap_continue;

assign AxiStream2Axi_U0_ap_start = axibound_V_empty_n;

assign Mat2AxiStream_U0_ap_continue = 1'b1;

assign Mat2AxiStream_U0_ap_start = ((ap_sync_reg_Mat2AxiStream_U0_ap_ready ^ 1'b1) & ap_start);

assign Mat2Axi_Block_entry35_proc_U0_ap_continue = axibound_V_full_n;

assign Mat2Axi_Block_entry35_proc_U0_ap_start = p_channel_empty_n;

assign addrbound_1_U0_ap_continue = p_channel_full_n;

assign addrbound_1_U0_ap_start = ((ap_sync_reg_addrbound_1_U0_ap_ready ^ 1'b1) & ap_start);

assign addrbound_1_U0_cols = {{cols[(15 - 32'd1):0]}};

assign addrbound_1_U0_rows = {{rows[(15 - 32'd1):0]}};

assign ap_done = AxiStream2Axi_U0_ap_done;

assign ap_idle = ((axibound_V_empty_n ^ 1'b1) & (p_channel_empty_n ^ 1'b1) & addrbound_1_U0_ap_idle & Mat2Axi_Block_entry35_proc_U0_ap_idle & Mat2AxiStream_U0_ap_idle & AxiStream2Axi_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_Mat2AxiStream_U0_ap_ready = (ap_sync_reg_Mat2AxiStream_U0_ap_ready | Mat2AxiStream_U0_ap_ready);

assign ap_sync_addrbound_1_U0_ap_ready = (ap_sync_reg_addrbound_1_U0_ap_ready | addrbound_1_U0_ap_ready);

assign ap_sync_ready = (ap_sync_addrbound_1_U0_ap_ready & ap_sync_Mat2AxiStream_U0_ap_ready);

assign imgOutput_data7_read = Mat2AxiStream_U0_imgOutput_data7_read;

assign img_out_TDATA = AxiStream2Axi_U0_img_out_TDATA;

assign img_out_TVALID = AxiStream2Axi_U0_img_out_TVALID;

endmodule //color_detect_Mat2Axi
