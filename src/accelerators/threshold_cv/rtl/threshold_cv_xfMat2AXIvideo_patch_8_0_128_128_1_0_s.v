// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.1 (64-bit)
// Version: 2022.2.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module threshold_cv_xfMat2AXIvideo_patch_8_0_128_128_1_0_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        img_1_dout,
        img_1_num_data_valid,
        img_1_fifo_cap,
        img_1_empty_n,
        img_1_read,
        img_2_dout,
        img_2_num_data_valid,
        img_2_fifo_cap,
        img_2_empty_n,
        img_2_read,
        threshold_out_data18_dout,
        threshold_out_data18_num_data_valid,
        threshold_out_data18_fifo_cap,
        threshold_out_data18_empty_n,
        threshold_out_data18_read,
        img_out_TDATA,
        img_out_TVALID,
        img_out_TREADY,
        img_out_TKEEP,
        img_out_TSTRB,
        img_out_TUSER,
        img_out_TLAST,
        img_out_TID,
        img_out_TDEST
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] img_1_dout;
input  [1:0] img_1_num_data_valid;
input  [1:0] img_1_fifo_cap;
input   img_1_empty_n;
output   img_1_read;
input  [31:0] img_2_dout;
input  [1:0] img_2_num_data_valid;
input  [1:0] img_2_fifo_cap;
input   img_2_empty_n;
output   img_2_read;
input  [7:0] threshold_out_data18_dout;
input  [1:0] threshold_out_data18_num_data_valid;
input  [1:0] threshold_out_data18_fifo_cap;
input   threshold_out_data18_empty_n;
output   threshold_out_data18_read;
output  [7:0] img_out_TDATA;
output   img_out_TVALID;
input   img_out_TREADY;
output  [0:0] img_out_TKEEP;
output  [0:0] img_out_TSTRB;
output  [0:0] img_out_TUSER;
output  [0:0] img_out_TLAST;
output  [0:0] img_out_TID;
output  [0:0] img_out_TDEST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_1_read;
reg img_2_read;
reg threshold_out_data18_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    img_1_blk_n;
reg    img_2_blk_n;
reg   [31:0] rows_reg_147;
reg   [31:0] cols_reg_152;
wire   [31:0] sub_fu_106_p2;
reg   [31:0] sub_reg_157;
wire    grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_start;
wire    grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_done;
wire    grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_idle;
wire    grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_ready;
wire    grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_threshold_out_data18_read;
wire    grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TREADY;
wire   [7:0] grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TDATA;
wire    grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TVALID;
wire   [0:0] grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TKEEP;
wire   [0:0] grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TSTRB;
wire   [0:0] grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TUSER;
wire   [0:0] grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TLAST;
wire   [0:0] grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TID;
wire   [0:0] grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TDEST;
reg    grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [7:0] i_fu_68;
wire   [7:0] i_2_fu_129_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln139_fu_124_p2;
reg    ap_block_state1;
wire   [31:0] zext_ln139_fu_120_p1;
wire    ap_CS_fsm_state5;
wire    regslice_both_img_out_V_data_V_U_apdone_blk;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    img_out_TVALID_int_regslice;
wire    img_out_TREADY_int_regslice;
wire    regslice_both_img_out_V_data_V_U_vld_out;
wire    regslice_both_img_out_V_keep_V_U_apdone_blk;
wire    regslice_both_img_out_V_keep_V_U_ack_in_dummy;
wire    regslice_both_img_out_V_keep_V_U_vld_out;
wire    regslice_both_img_out_V_strb_V_U_apdone_blk;
wire    regslice_both_img_out_V_strb_V_U_ack_in_dummy;
wire    regslice_both_img_out_V_strb_V_U_vld_out;
wire    regslice_both_img_out_V_user_V_U_apdone_blk;
wire    regslice_both_img_out_V_user_V_U_ack_in_dummy;
wire    regslice_both_img_out_V_user_V_U_vld_out;
wire    regslice_both_img_out_V_last_V_U_apdone_blk;
wire    regslice_both_img_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_img_out_V_last_V_U_vld_out;
wire    regslice_both_img_out_V_id_V_U_apdone_blk;
wire    regslice_both_img_out_V_id_V_U_ack_in_dummy;
wire    regslice_both_img_out_V_id_V_U_vld_out;
wire    regslice_both_img_out_V_dest_V_U_apdone_blk;
wire    regslice_both_img_out_V_dest_V_U_ack_in_dummy;
wire    regslice_both_img_out_V_dest_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_start_reg = 1'b0;
end

threshold_cv_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_start),
    .ap_done(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_done),
    .ap_idle(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_idle),
    .ap_ready(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_ready),
    .threshold_out_data18_dout(threshold_out_data18_dout),
    .threshold_out_data18_num_data_valid(2'd0),
    .threshold_out_data18_fifo_cap(2'd0),
    .threshold_out_data18_empty_n(threshold_out_data18_empty_n),
    .threshold_out_data18_read(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_threshold_out_data18_read),
    .img_out_TREADY(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TREADY),
    .cols(cols_reg_152),
    .sub(sub_reg_157),
    .img_out_TDATA(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TDATA),
    .img_out_TVALID(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TVALID),
    .img_out_TKEEP(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TKEEP),
    .img_out_TSTRB(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TSTRB),
    .img_out_TUSER(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TUSER),
    .img_out_TLAST(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TLAST),
    .img_out_TID(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TID),
    .img_out_TDEST(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TDEST)
);

threshold_cv_regslice_both #(
    .DataWidth( 8 ))
regslice_both_img_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TDATA),
    .vld_in(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TVALID),
    .ack_in(img_out_TREADY_int_regslice),
    .data_out(img_out_TDATA),
    .vld_out(regslice_both_img_out_V_data_V_U_vld_out),
    .ack_out(img_out_TREADY),
    .apdone_blk(regslice_both_img_out_V_data_V_U_apdone_blk)
);

threshold_cv_regslice_both #(
    .DataWidth( 1 ))
regslice_both_img_out_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TKEEP),
    .vld_in(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TVALID),
    .ack_in(regslice_both_img_out_V_keep_V_U_ack_in_dummy),
    .data_out(img_out_TKEEP),
    .vld_out(regslice_both_img_out_V_keep_V_U_vld_out),
    .ack_out(img_out_TREADY),
    .apdone_blk(regslice_both_img_out_V_keep_V_U_apdone_blk)
);

threshold_cv_regslice_both #(
    .DataWidth( 1 ))
regslice_both_img_out_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TSTRB),
    .vld_in(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TVALID),
    .ack_in(regslice_both_img_out_V_strb_V_U_ack_in_dummy),
    .data_out(img_out_TSTRB),
    .vld_out(regslice_both_img_out_V_strb_V_U_vld_out),
    .ack_out(img_out_TREADY),
    .apdone_blk(regslice_both_img_out_V_strb_V_U_apdone_blk)
);

threshold_cv_regslice_both #(
    .DataWidth( 1 ))
regslice_both_img_out_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TUSER),
    .vld_in(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TVALID),
    .ack_in(regslice_both_img_out_V_user_V_U_ack_in_dummy),
    .data_out(img_out_TUSER),
    .vld_out(regslice_both_img_out_V_user_V_U_vld_out),
    .ack_out(img_out_TREADY),
    .apdone_blk(regslice_both_img_out_V_user_V_U_apdone_blk)
);

threshold_cv_regslice_both #(
    .DataWidth( 1 ))
regslice_both_img_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TLAST),
    .vld_in(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TVALID),
    .ack_in(regslice_both_img_out_V_last_V_U_ack_in_dummy),
    .data_out(img_out_TLAST),
    .vld_out(regslice_both_img_out_V_last_V_U_vld_out),
    .ack_out(img_out_TREADY),
    .apdone_blk(regslice_both_img_out_V_last_V_U_apdone_blk)
);

threshold_cv_regslice_both #(
    .DataWidth( 1 ))
regslice_both_img_out_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TID),
    .vld_in(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TVALID),
    .ack_in(regslice_both_img_out_V_id_V_U_ack_in_dummy),
    .data_out(img_out_TID),
    .vld_out(regslice_both_img_out_V_id_V_U_vld_out),
    .ack_out(img_out_TREADY),
    .apdone_blk(regslice_both_img_out_V_id_V_U_apdone_blk)
);

threshold_cv_regslice_both #(
    .DataWidth( 1 ))
regslice_both_img_out_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TDEST),
    .vld_in(grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TVALID),
    .ack_in(regslice_both_img_out_V_dest_V_U_ack_in_dummy),
    .data_out(img_out_TDEST),
    .vld_out(regslice_both_img_out_V_dest_V_U_vld_out),
    .ack_out(img_out_TREADY),
    .apdone_blk(regslice_both_img_out_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (regslice_both_img_out_V_data_V_U_apdone_blk == 1'b0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_start_reg <= 1'b1;
        end else if ((grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_ready == 1'b1)) begin
            grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((img_2_empty_n == 1'b0) | (img_1_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_68 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln139_fu_124_p2 == 1'd1))) begin
        i_fu_68 <= i_2_fu_129_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        cols_reg_152 <= img_2_dout;
        rows_reg_147 <= img_1_dout;
        sub_reg_157 <= sub_fu_106_p2;
    end
end

always @ (*) begin
    if (((img_2_empty_n == 1'b0) | (img_1_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_img_out_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (regslice_both_img_out_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (regslice_both_img_out_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_1_blk_n = img_1_empty_n;
    end else begin
        img_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((img_2_empty_n == 1'b0) | (img_1_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_1_read = 1'b1;
    end else begin
        img_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_2_blk_n = img_2_empty_n;
    end else begin
        img_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((img_2_empty_n == 1'b0) | (img_1_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_2_read = 1'b1;
    end else begin
        img_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        threshold_out_data18_read = grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_threshold_out_data18_read;
    end else begin
        threshold_out_data18_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((img_2_empty_n == 1'b0) | (img_1_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln139_fu_124_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (regslice_both_img_out_V_data_V_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((img_2_empty_n == 1'b0) | (img_1_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_start = grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_ap_start_reg;

assign grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TREADY = (img_out_TREADY_int_regslice & ap_CS_fsm_state4);

assign i_2_fu_129_p2 = (i_fu_68 + 8'd1);

assign icmp_ln139_fu_124_p2 = (($signed(zext_ln139_fu_120_p1) < $signed(rows_reg_147)) ? 1'b1 : 1'b0);

assign img_out_TVALID = regslice_both_img_out_V_data_V_U_vld_out;

assign img_out_TVALID_int_regslice = grp_xfMat2AXIvideo_patch_8_0_128_128_1_0_Pipeline_loop_col_mat2axi_fu_84_img_out_TVALID;

assign sub_fu_106_p2 = ($signed(img_2_dout) + $signed(32'd4294967295));

assign zext_ln139_fu_120_p1 = i_fu_68;

endmodule //threshold_cv_xfMat2AXIvideo_patch_8_0_128_128_1_0_s
