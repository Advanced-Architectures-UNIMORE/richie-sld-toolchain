// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.1 (64-bit)
// Version: 2022.2.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="color_detect_color_detect,hls_ip_2022_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=3.300000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=2.692000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=7419,HLS_SYN_LUT=8613,HLS_VERSION=2022_2_1}" *)

module color_detect (
        img_in_TDATA,
        img_in_TKEEP,
        img_in_TSTRB,
        img_in_TUSER,
        img_in_TLAST,
        img_in_TID,
        img_in_TDEST,
        img_out_TDATA,
        img_out_TKEEP,
        img_out_TSTRB,
        img_out_TUSER,
        img_out_TLAST,
        img_out_TID,
        img_out_TDEST,
        rows,
        cols,
        ap_clk,
        ap_rst_n,
        ap_start,
        img_in_TVALID,
        img_in_TREADY,
        img_out_TVALID,
        img_out_TREADY,
        ap_done,
        ap_ready,
        ap_idle
);


input  [31:0] img_in_TDATA;
input  [3:0] img_in_TKEEP;
input  [3:0] img_in_TSTRB;
input  [0:0] img_in_TUSER;
input  [0:0] img_in_TLAST;
input  [0:0] img_in_TID;
input  [0:0] img_in_TDEST;
output  [7:0] img_out_TDATA;
output  [0:0] img_out_TKEEP;
output  [0:0] img_out_TSTRB;
output  [0:0] img_out_TUSER;
output  [0:0] img_out_TLAST;
output  [0:0] img_out_TID;
output  [0:0] img_out_TDEST;
input  [31:0] rows;
input  [31:0] cols;
input   ap_clk;
input   ap_rst_n;
input   ap_start;
input   img_in_TVALID;
output   img_in_TREADY;
output   img_out_TVALID;
input   img_out_TREADY;
output   ap_done;
output   ap_ready;
output   ap_idle;

 reg    ap_rst_n_inv;
wire    Block_entry1_proc_U0_ap_start;
wire    Block_entry1_proc_U0_ap_done;
wire    Block_entry1_proc_U0_ap_continue;
wire    Block_entry1_proc_U0_ap_idle;
wire    Block_entry1_proc_U0_ap_ready;
wire   [31:0] Block_entry1_proc_U0_ap_return_0;
wire   [31:0] Block_entry1_proc_U0_ap_return_1;
wire   [31:0] Block_entry1_proc_U0_ap_return_2;
wire   [31:0] Block_entry1_proc_U0_ap_return_3;
wire   [31:0] Block_entry1_proc_U0_ap_return_4;
wire   [31:0] Block_entry1_proc_U0_ap_return_5;
wire   [31:0] Block_entry1_proc_U0_ap_return_6;
wire   [31:0] Block_entry1_proc_U0_ap_return_7;
wire   [31:0] Block_entry1_proc_U0_ap_return_8;
wire   [31:0] Block_entry1_proc_U0_ap_return_9;
wire   [31:0] Block_entry1_proc_U0_ap_return_10;
wire   [31:0] Block_entry1_proc_U0_ap_return_11;
wire   [31:0] Block_entry1_proc_U0_ap_return_12;
wire   [31:0] Block_entry1_proc_U0_ap_return_13;
wire    ap_channel_done_rgb2hsv_cols_channel;
wire    rgb2hsv_cols_channel_full_n;
reg    ap_sync_reg_channel_write_rgb2hsv_cols_channel;
wire    ap_sync_channel_write_rgb2hsv_cols_channel;
wire    ap_channel_done_rgb2hsv_rows_channel;
wire    rgb2hsv_rows_channel_full_n;
reg    ap_sync_reg_channel_write_rgb2hsv_rows_channel;
wire    ap_sync_channel_write_rgb2hsv_rows_channel;
wire    ap_channel_done_imgHelper1_rows_channel;
wire    imgHelper1_rows_channel_full_n;
reg    ap_sync_reg_channel_write_imgHelper1_rows_channel;
wire    ap_sync_channel_write_imgHelper1_rows_channel;
wire    ap_channel_done_imgHelper1_cols_channel;
wire    imgHelper1_cols_channel_full_n;
reg    ap_sync_reg_channel_write_imgHelper1_cols_channel;
wire    ap_sync_channel_write_imgHelper1_cols_channel;
wire    ap_channel_done_imgHelper2_rows_channel;
wire    imgHelper2_rows_channel_full_n;
reg    ap_sync_reg_channel_write_imgHelper2_rows_channel;
wire    ap_sync_channel_write_imgHelper2_rows_channel;
wire    ap_channel_done_imgHelper2_cols_channel;
wire    imgHelper2_cols_channel_full_n;
reg    ap_sync_reg_channel_write_imgHelper2_cols_channel;
wire    ap_sync_channel_write_imgHelper2_cols_channel;
wire    ap_channel_done_imgHelper3_rows_channel;
wire    imgHelper3_rows_channel_full_n;
reg    ap_sync_reg_channel_write_imgHelper3_rows_channel;
wire    ap_sync_channel_write_imgHelper3_rows_channel;
wire    ap_channel_done_imgHelper3_cols_channel;
wire    imgHelper3_cols_channel_full_n;
reg    ap_sync_reg_channel_write_imgHelper3_cols_channel;
wire    ap_sync_channel_write_imgHelper3_cols_channel;
wire    ap_channel_done_imgHelper4_rows_channel;
wire    imgHelper4_rows_channel_full_n;
reg    ap_sync_reg_channel_write_imgHelper4_rows_channel;
wire    ap_sync_channel_write_imgHelper4_rows_channel;
wire    ap_channel_done_imgHelper4_cols_channel;
wire    imgHelper4_cols_channel_full_n;
reg    ap_sync_reg_channel_write_imgHelper4_cols_channel;
wire    ap_sync_channel_write_imgHelper4_cols_channel;
wire    ap_channel_done_imgOutput_rows_channel;
wire    imgOutput_rows_channel_full_n;
reg    ap_sync_reg_channel_write_imgOutput_rows_channel;
wire    ap_sync_channel_write_imgOutput_rows_channel;
wire    ap_channel_done_imgOutput_cols_channel;
wire    imgOutput_cols_channel_full_n;
reg    ap_sync_reg_channel_write_imgOutput_cols_channel;
wire    ap_sync_channel_write_imgOutput_cols_channel;
wire    ap_channel_done_imgInput_rows_c19_channel;
wire    imgInput_rows_c19_channel_full_n;
reg    ap_sync_reg_channel_write_imgInput_rows_c19_channel;
wire    ap_sync_channel_write_imgInput_rows_c19_channel;
wire    ap_channel_done_imgInput_cols_c20_channel;
wire    imgInput_cols_c20_channel_full_n;
reg    ap_sync_reg_channel_write_imgInput_cols_c20_channel;
wire    ap_sync_channel_write_imgInput_cols_c20_channel;
wire    AXIvideo2xfMat_32_9_128_128_1_U0_ap_start;
wire    AXIvideo2xfMat_32_9_128_128_1_U0_ap_done;
wire    AXIvideo2xfMat_32_9_128_128_1_U0_ap_continue;
wire    AXIvideo2xfMat_32_9_128_128_1_U0_ap_idle;
wire    AXIvideo2xfMat_32_9_128_128_1_U0_ap_ready;
wire    AXIvideo2xfMat_32_9_128_128_1_U0_start_out;
wire    AXIvideo2xfMat_32_9_128_128_1_U0_start_write;
wire    AXIvideo2xfMat_32_9_128_128_1_U0_img_in_TREADY;
wire   [23:0] AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_data118_din;
wire    AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_data118_write;
wire   [31:0] AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_rows_c_din;
wire    AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_rows_c_write;
wire   [31:0] AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_cols_c_din;
wire    AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_cols_c_write;
wire    bgr2hsv_9_128_128_1_U0_ap_start;
wire    bgr2hsv_9_128_128_1_U0_ap_done;
wire    bgr2hsv_9_128_128_1_U0_ap_continue;
wire    bgr2hsv_9_128_128_1_U0_ap_idle;
wire    bgr2hsv_9_128_128_1_U0_ap_ready;
wire    bgr2hsv_9_128_128_1_U0_p_src_mat_rows_read;
wire    bgr2hsv_9_128_128_1_U0_p_src_mat_cols_read;
wire    bgr2hsv_9_128_128_1_U0_imgInput_data118_read;
wire   [23:0] bgr2hsv_9_128_128_1_U0_rgb2hsv_data119_din;
wire    bgr2hsv_9_128_128_1_U0_rgb2hsv_data119_write;
wire    colorthresholding_9_0_3_128_128_1_U0_rgb2hsv_data119_read;
wire   [7:0] colorthresholding_9_0_3_128_128_1_U0_imgHelper1_data120_din;
wire    colorthresholding_9_0_3_128_128_1_U0_imgHelper1_data120_write;
wire    colorthresholding_9_0_3_128_128_1_U0_ap_start;
wire    colorthresholding_9_0_3_128_128_1_U0_ap_done;
wire    colorthresholding_9_0_3_128_128_1_U0_ap_ready;
wire    colorthresholding_9_0_3_128_128_1_U0_ap_idle;
wire    colorthresholding_9_0_3_128_128_1_U0_ap_continue;
wire    erode_0_0_128_128_0_3_3_1_1_U0_ap_start;
wire    erode_0_0_128_128_0_3_3_1_1_U0_ap_done;
wire    erode_0_0_128_128_0_3_3_1_1_U0_ap_continue;
wire    erode_0_0_128_128_0_3_3_1_1_U0_ap_idle;
wire    erode_0_0_128_128_0_3_3_1_1_U0_ap_ready;
wire    erode_0_0_128_128_0_3_3_1_1_U0_imgHelper1_data120_read;
wire   [7:0] erode_0_0_128_128_0_3_3_1_1_U0_imgHelper2_data121_din;
wire    erode_0_0_128_128_0_3_3_1_1_U0_imgHelper2_data121_write;
wire    dilate_0_0_128_128_0_3_3_1_1_U0_ap_start;
wire    dilate_0_0_128_128_0_3_3_1_1_U0_ap_done;
wire    dilate_0_0_128_128_0_3_3_1_1_U0_ap_continue;
wire    dilate_0_0_128_128_0_3_3_1_1_U0_ap_idle;
wire    dilate_0_0_128_128_0_3_3_1_1_U0_ap_ready;
wire    dilate_0_0_128_128_0_3_3_1_1_U0_imgHelper2_data121_read;
wire   [7:0] dilate_0_0_128_128_0_3_3_1_1_U0_imgHelper3_data122_din;
wire    dilate_0_0_128_128_0_3_3_1_1_U0_imgHelper3_data122_write;
wire    dilate_0_0_128_128_0_3_3_1_1_1_U0_ap_start;
wire    dilate_0_0_128_128_0_3_3_1_1_1_U0_ap_done;
wire    dilate_0_0_128_128_0_3_3_1_1_1_U0_ap_continue;
wire    dilate_0_0_128_128_0_3_3_1_1_1_U0_ap_idle;
wire    dilate_0_0_128_128_0_3_3_1_1_1_U0_ap_ready;
wire    dilate_0_0_128_128_0_3_3_1_1_1_U0_imgHelper3_data122_read;
wire   [7:0] dilate_0_0_128_128_0_3_3_1_1_1_U0_imgHelper4_data123_din;
wire    dilate_0_0_128_128_0_3_3_1_1_1_U0_imgHelper4_data123_write;
wire    erode_0_0_128_128_0_3_3_1_1_2_U0_ap_start;
wire    erode_0_0_128_128_0_3_3_1_1_2_U0_ap_done;
wire    erode_0_0_128_128_0_3_3_1_1_2_U0_ap_continue;
wire    erode_0_0_128_128_0_3_3_1_1_2_U0_ap_idle;
wire    erode_0_0_128_128_0_3_3_1_1_2_U0_ap_ready;
wire    erode_0_0_128_128_0_3_3_1_1_2_U0_imgHelper4_data123_read;
wire   [7:0] erode_0_0_128_128_0_3_3_1_1_2_U0_imgOutput_data124_din;
wire    erode_0_0_128_128_0_3_3_1_1_2_U0_imgOutput_data124_write;
wire    xfMat2AXIvideo_8_0_128_128_1_U0_ap_start;
wire    xfMat2AXIvideo_8_0_128_128_1_U0_ap_done;
wire    xfMat2AXIvideo_8_0_128_128_1_U0_ap_continue;
wire    xfMat2AXIvideo_8_0_128_128_1_U0_ap_idle;
wire    xfMat2AXIvideo_8_0_128_128_1_U0_ap_ready;
wire    xfMat2AXIvideo_8_0_128_128_1_U0_imgOutput_data124_read;
wire   [7:0] xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TDATA;
wire    xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TVALID;
wire   [0:0] xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TKEEP;
wire   [0:0] xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TSTRB;
wire   [0:0] xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TUSER;
wire   [0:0] xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TLAST;
wire   [0:0] xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TID;
wire   [0:0] xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TDEST;
wire   [31:0] imgInput_cols_c20_channel_dout;
wire   [1:0] imgInput_cols_c20_channel_num_data_valid;
wire   [1:0] imgInput_cols_c20_channel_fifo_cap;
wire    imgInput_cols_c20_channel_empty_n;
wire   [31:0] imgInput_rows_c19_channel_dout;
wire   [1:0] imgInput_rows_c19_channel_num_data_valid;
wire   [1:0] imgInput_rows_c19_channel_fifo_cap;
wire    imgInput_rows_c19_channel_empty_n;
wire   [31:0] imgOutput_cols_channel_dout;
wire   [4:0] imgOutput_cols_channel_num_data_valid;
wire   [4:0] imgOutput_cols_channel_fifo_cap;
wire    imgOutput_cols_channel_empty_n;
wire   [31:0] imgOutput_rows_channel_dout;
wire   [4:0] imgOutput_rows_channel_num_data_valid;
wire   [4:0] imgOutput_rows_channel_fifo_cap;
wire    imgOutput_rows_channel_empty_n;
wire   [31:0] imgHelper4_cols_channel_dout;
wire   [3:0] imgHelper4_cols_channel_num_data_valid;
wire   [3:0] imgHelper4_cols_channel_fifo_cap;
wire    imgHelper4_cols_channel_empty_n;
wire   [31:0] imgHelper4_rows_channel_dout;
wire   [3:0] imgHelper4_rows_channel_num_data_valid;
wire   [3:0] imgHelper4_rows_channel_fifo_cap;
wire    imgHelper4_rows_channel_empty_n;
wire   [31:0] imgHelper3_cols_channel_dout;
wire   [3:0] imgHelper3_cols_channel_num_data_valid;
wire   [3:0] imgHelper3_cols_channel_fifo_cap;
wire    imgHelper3_cols_channel_empty_n;
wire   [31:0] imgHelper3_rows_channel_dout;
wire   [3:0] imgHelper3_rows_channel_num_data_valid;
wire   [3:0] imgHelper3_rows_channel_fifo_cap;
wire    imgHelper3_rows_channel_empty_n;
wire   [31:0] imgHelper2_cols_channel_dout;
wire   [3:0] imgHelper2_cols_channel_num_data_valid;
wire   [3:0] imgHelper2_cols_channel_fifo_cap;
wire    imgHelper2_cols_channel_empty_n;
wire   [31:0] imgHelper2_rows_channel_dout;
wire   [3:0] imgHelper2_rows_channel_num_data_valid;
wire   [3:0] imgHelper2_rows_channel_fifo_cap;
wire    imgHelper2_rows_channel_empty_n;
wire   [31:0] imgHelper1_cols_channel_dout;
wire   [3:0] imgHelper1_cols_channel_num_data_valid;
wire   [3:0] imgHelper1_cols_channel_fifo_cap;
wire    imgHelper1_cols_channel_empty_n;
wire   [31:0] imgHelper1_rows_channel_dout;
wire   [3:0] imgHelper1_rows_channel_num_data_valid;
wire   [3:0] imgHelper1_rows_channel_fifo_cap;
wire    imgHelper1_rows_channel_empty_n;
wire   [31:0] rgb2hsv_rows_channel_dout;
wire   [2:0] rgb2hsv_rows_channel_num_data_valid;
wire   [2:0] rgb2hsv_rows_channel_fifo_cap;
wire    rgb2hsv_rows_channel_empty_n;
wire   [31:0] rgb2hsv_cols_channel_dout;
wire   [2:0] rgb2hsv_cols_channel_num_data_valid;
wire   [2:0] rgb2hsv_cols_channel_fifo_cap;
wire    rgb2hsv_cols_channel_empty_n;
wire    imgInput_data_full_n;
wire   [23:0] imgInput_data_dout;
wire   [1:0] imgInput_data_num_data_valid;
wire   [1:0] imgInput_data_fifo_cap;
wire    imgInput_data_empty_n;
wire    imgInput_rows_c_full_n;
wire   [31:0] imgInput_rows_c_dout;
wire   [1:0] imgInput_rows_c_num_data_valid;
wire   [1:0] imgInput_rows_c_fifo_cap;
wire    imgInput_rows_c_empty_n;
wire    imgInput_cols_c_full_n;
wire   [31:0] imgInput_cols_c_dout;
wire   [1:0] imgInput_cols_c_num_data_valid;
wire   [1:0] imgInput_cols_c_fifo_cap;
wire    imgInput_cols_c_empty_n;
wire    rgb2hsv_data_full_n;
wire   [23:0] rgb2hsv_data_dout;
wire   [1:0] rgb2hsv_data_num_data_valid;
wire   [1:0] rgb2hsv_data_fifo_cap;
wire    rgb2hsv_data_empty_n;
wire    imgHelper1_data_full_n;
wire   [7:0] imgHelper1_data_dout;
wire   [1:0] imgHelper1_data_num_data_valid;
wire   [1:0] imgHelper1_data_fifo_cap;
wire    imgHelper1_data_empty_n;
wire    imgHelper2_data_full_n;
wire   [7:0] imgHelper2_data_dout;
wire   [1:0] imgHelper2_data_num_data_valid;
wire   [1:0] imgHelper2_data_fifo_cap;
wire    imgHelper2_data_empty_n;
wire    imgHelper3_data_full_n;
wire   [7:0] imgHelper3_data_dout;
wire   [1:0] imgHelper3_data_num_data_valid;
wire   [1:0] imgHelper3_data_fifo_cap;
wire    imgHelper3_data_empty_n;
wire    imgHelper4_data_full_n;
wire   [7:0] imgHelper4_data_dout;
wire   [1:0] imgHelper4_data_num_data_valid;
wire   [1:0] imgHelper4_data_fifo_cap;
wire    imgHelper4_data_empty_n;
wire    imgOutput_data_full_n;
wire   [7:0] imgOutput_data_dout;
wire   [1:0] imgOutput_data_num_data_valid;
wire   [1:0] imgOutput_data_fifo_cap;
wire    imgOutput_data_empty_n;
wire   [0:0] start_for_bgr2hsv_9_128_128_1_U0_din;
wire    start_for_bgr2hsv_9_128_128_1_U0_full_n;
wire   [0:0] start_for_bgr2hsv_9_128_128_1_U0_dout;
wire    start_for_bgr2hsv_9_128_128_1_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_rgb2hsv_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_rgb2hsv_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgHelper1_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgHelper1_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgHelper2_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgHelper2_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgHelper3_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgHelper3_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgHelper4_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgHelper4_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgOutput_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgOutput_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgInput_rows_c19_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgInput_cols_c20_channel = 1'b0;
end

color_detect_Block_entry1_proc Block_entry1_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_entry1_proc_U0_ap_start),
    .ap_done(Block_entry1_proc_U0_ap_done),
    .ap_continue(Block_entry1_proc_U0_ap_continue),
    .ap_idle(Block_entry1_proc_U0_ap_idle),
    .ap_ready(Block_entry1_proc_U0_ap_ready),
    .rows(rows),
    .cols(cols),
    .ap_return_0(Block_entry1_proc_U0_ap_return_0),
    .ap_return_1(Block_entry1_proc_U0_ap_return_1),
    .ap_return_2(Block_entry1_proc_U0_ap_return_2),
    .ap_return_3(Block_entry1_proc_U0_ap_return_3),
    .ap_return_4(Block_entry1_proc_U0_ap_return_4),
    .ap_return_5(Block_entry1_proc_U0_ap_return_5),
    .ap_return_6(Block_entry1_proc_U0_ap_return_6),
    .ap_return_7(Block_entry1_proc_U0_ap_return_7),
    .ap_return_8(Block_entry1_proc_U0_ap_return_8),
    .ap_return_9(Block_entry1_proc_U0_ap_return_9),
    .ap_return_10(Block_entry1_proc_U0_ap_return_10),
    .ap_return_11(Block_entry1_proc_U0_ap_return_11),
    .ap_return_12(Block_entry1_proc_U0_ap_return_12),
    .ap_return_13(Block_entry1_proc_U0_ap_return_13)
);

color_detect_AXIvideo2xfMat_32_9_128_128_1_s AXIvideo2xfMat_32_9_128_128_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2xfMat_32_9_128_128_1_U0_ap_start),
    .start_full_n(start_for_bgr2hsv_9_128_128_1_U0_full_n),
    .ap_done(AXIvideo2xfMat_32_9_128_128_1_U0_ap_done),
    .ap_continue(AXIvideo2xfMat_32_9_128_128_1_U0_ap_continue),
    .ap_idle(AXIvideo2xfMat_32_9_128_128_1_U0_ap_idle),
    .ap_ready(AXIvideo2xfMat_32_9_128_128_1_U0_ap_ready),
    .start_out(AXIvideo2xfMat_32_9_128_128_1_U0_start_out),
    .start_write(AXIvideo2xfMat_32_9_128_128_1_U0_start_write),
    .img_in_TDATA(img_in_TDATA),
    .img_in_TVALID(img_in_TVALID),
    .img_in_TREADY(AXIvideo2xfMat_32_9_128_128_1_U0_img_in_TREADY),
    .img_in_TKEEP(img_in_TKEEP),
    .img_in_TSTRB(img_in_TSTRB),
    .img_in_TUSER(img_in_TUSER),
    .img_in_TLAST(img_in_TLAST),
    .img_in_TID(img_in_TID),
    .img_in_TDEST(img_in_TDEST),
    .p_read(imgInput_rows_c19_channel_dout),
    .p_read1(imgInput_cols_c20_channel_dout),
    .imgInput_data118_din(AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_data118_din),
    .imgInput_data118_num_data_valid(imgInput_data_num_data_valid),
    .imgInput_data118_fifo_cap(imgInput_data_fifo_cap),
    .imgInput_data118_full_n(imgInput_data_full_n),
    .imgInput_data118_write(AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_data118_write),
    .imgInput_rows_c_din(AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_rows_c_din),
    .imgInput_rows_c_num_data_valid(imgInput_rows_c_num_data_valid),
    .imgInput_rows_c_fifo_cap(imgInput_rows_c_fifo_cap),
    .imgInput_rows_c_full_n(imgInput_rows_c_full_n),
    .imgInput_rows_c_write(AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_rows_c_write),
    .imgInput_cols_c_din(AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_cols_c_din),
    .imgInput_cols_c_num_data_valid(imgInput_cols_c_num_data_valid),
    .imgInput_cols_c_fifo_cap(imgInput_cols_c_fifo_cap),
    .imgInput_cols_c_full_n(imgInput_cols_c_full_n),
    .imgInput_cols_c_write(AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_cols_c_write)
);

color_detect_bgr2hsv_9_128_128_1_s bgr2hsv_9_128_128_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(bgr2hsv_9_128_128_1_U0_ap_start),
    .ap_done(bgr2hsv_9_128_128_1_U0_ap_done),
    .ap_continue(bgr2hsv_9_128_128_1_U0_ap_continue),
    .ap_idle(bgr2hsv_9_128_128_1_U0_ap_idle),
    .ap_ready(bgr2hsv_9_128_128_1_U0_ap_ready),
    .p_src_mat_rows_dout(imgInput_rows_c_dout),
    .p_src_mat_rows_num_data_valid(imgInput_rows_c_num_data_valid),
    .p_src_mat_rows_fifo_cap(imgInput_rows_c_fifo_cap),
    .p_src_mat_rows_empty_n(imgInput_rows_c_empty_n),
    .p_src_mat_rows_read(bgr2hsv_9_128_128_1_U0_p_src_mat_rows_read),
    .p_src_mat_cols_dout(imgInput_cols_c_dout),
    .p_src_mat_cols_num_data_valid(imgInput_cols_c_num_data_valid),
    .p_src_mat_cols_fifo_cap(imgInput_cols_c_fifo_cap),
    .p_src_mat_cols_empty_n(imgInput_cols_c_empty_n),
    .p_src_mat_cols_read(bgr2hsv_9_128_128_1_U0_p_src_mat_cols_read),
    .imgInput_data118_dout(imgInput_data_dout),
    .imgInput_data118_num_data_valid(imgInput_data_num_data_valid),
    .imgInput_data118_fifo_cap(imgInput_data_fifo_cap),
    .imgInput_data118_empty_n(imgInput_data_empty_n),
    .imgInput_data118_read(bgr2hsv_9_128_128_1_U0_imgInput_data118_read),
    .rgb2hsv_data119_din(bgr2hsv_9_128_128_1_U0_rgb2hsv_data119_din),
    .rgb2hsv_data119_num_data_valid(rgb2hsv_data_num_data_valid),
    .rgb2hsv_data119_fifo_cap(rgb2hsv_data_fifo_cap),
    .rgb2hsv_data119_full_n(rgb2hsv_data_full_n),
    .rgb2hsv_data119_write(bgr2hsv_9_128_128_1_U0_rgb2hsv_data119_write)
);

color_detect_colorthresholding_9_0_3_128_128_1_s colorthresholding_9_0_3_128_128_1_U0(
    .p_read(rgb2hsv_rows_channel_dout),
    .p_read1(rgb2hsv_cols_channel_dout),
    .rgb2hsv_data119_dout(rgb2hsv_data_dout),
    .rgb2hsv_data119_empty_n(rgb2hsv_data_empty_n),
    .rgb2hsv_data119_read(colorthresholding_9_0_3_128_128_1_U0_rgb2hsv_data119_read),
    .imgHelper1_data120_din(colorthresholding_9_0_3_128_128_1_U0_imgHelper1_data120_din),
    .imgHelper1_data120_full_n(imgHelper1_data_full_n),
    .imgHelper1_data120_write(colorthresholding_9_0_3_128_128_1_U0_imgHelper1_data120_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .p_read_ap_vld(1'b0),
    .p_read1_ap_vld(1'b0),
    .ap_start(colorthresholding_9_0_3_128_128_1_U0_ap_start),
    .ap_done(colorthresholding_9_0_3_128_128_1_U0_ap_done),
    .ap_ready(colorthresholding_9_0_3_128_128_1_U0_ap_ready),
    .ap_idle(colorthresholding_9_0_3_128_128_1_U0_ap_idle),
    .ap_continue(colorthresholding_9_0_3_128_128_1_U0_ap_continue)
);

color_detect_erode_0_0_128_128_0_3_3_1_1_s erode_0_0_128_128_0_3_3_1_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(erode_0_0_128_128_0_3_3_1_1_U0_ap_start),
    .ap_done(erode_0_0_128_128_0_3_3_1_1_U0_ap_done),
    .ap_continue(erode_0_0_128_128_0_3_3_1_1_U0_ap_continue),
    .ap_idle(erode_0_0_128_128_0_3_3_1_1_U0_ap_idle),
    .ap_ready(erode_0_0_128_128_0_3_3_1_1_U0_ap_ready),
    .p_read(imgHelper1_rows_channel_dout),
    .p_read1(imgHelper1_cols_channel_dout),
    .imgHelper1_data120_dout(imgHelper1_data_dout),
    .imgHelper1_data120_num_data_valid(imgHelper1_data_num_data_valid),
    .imgHelper1_data120_fifo_cap(imgHelper1_data_fifo_cap),
    .imgHelper1_data120_empty_n(imgHelper1_data_empty_n),
    .imgHelper1_data120_read(erode_0_0_128_128_0_3_3_1_1_U0_imgHelper1_data120_read),
    .imgHelper2_data121_din(erode_0_0_128_128_0_3_3_1_1_U0_imgHelper2_data121_din),
    .imgHelper2_data121_num_data_valid(imgHelper2_data_num_data_valid),
    .imgHelper2_data121_fifo_cap(imgHelper2_data_fifo_cap),
    .imgHelper2_data121_full_n(imgHelper2_data_full_n),
    .imgHelper2_data121_write(erode_0_0_128_128_0_3_3_1_1_U0_imgHelper2_data121_write)
);

color_detect_dilate_0_0_128_128_0_3_3_1_1_s dilate_0_0_128_128_0_3_3_1_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(dilate_0_0_128_128_0_3_3_1_1_U0_ap_start),
    .ap_done(dilate_0_0_128_128_0_3_3_1_1_U0_ap_done),
    .ap_continue(dilate_0_0_128_128_0_3_3_1_1_U0_ap_continue),
    .ap_idle(dilate_0_0_128_128_0_3_3_1_1_U0_ap_idle),
    .ap_ready(dilate_0_0_128_128_0_3_3_1_1_U0_ap_ready),
    .p_read(imgHelper2_rows_channel_dout),
    .p_read1(imgHelper2_cols_channel_dout),
    .imgHelper2_data121_dout(imgHelper2_data_dout),
    .imgHelper2_data121_num_data_valid(imgHelper2_data_num_data_valid),
    .imgHelper2_data121_fifo_cap(imgHelper2_data_fifo_cap),
    .imgHelper2_data121_empty_n(imgHelper2_data_empty_n),
    .imgHelper2_data121_read(dilate_0_0_128_128_0_3_3_1_1_U0_imgHelper2_data121_read),
    .imgHelper3_data122_din(dilate_0_0_128_128_0_3_3_1_1_U0_imgHelper3_data122_din),
    .imgHelper3_data122_num_data_valid(imgHelper3_data_num_data_valid),
    .imgHelper3_data122_fifo_cap(imgHelper3_data_fifo_cap),
    .imgHelper3_data122_full_n(imgHelper3_data_full_n),
    .imgHelper3_data122_write(dilate_0_0_128_128_0_3_3_1_1_U0_imgHelper3_data122_write)
);

color_detect_dilate_0_0_128_128_0_3_3_1_1_1 dilate_0_0_128_128_0_3_3_1_1_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(dilate_0_0_128_128_0_3_3_1_1_1_U0_ap_start),
    .ap_done(dilate_0_0_128_128_0_3_3_1_1_1_U0_ap_done),
    .ap_continue(dilate_0_0_128_128_0_3_3_1_1_1_U0_ap_continue),
    .ap_idle(dilate_0_0_128_128_0_3_3_1_1_1_U0_ap_idle),
    .ap_ready(dilate_0_0_128_128_0_3_3_1_1_1_U0_ap_ready),
    .p_read(imgHelper3_rows_channel_dout),
    .p_read1(imgHelper3_cols_channel_dout),
    .imgHelper3_data122_dout(imgHelper3_data_dout),
    .imgHelper3_data122_num_data_valid(imgHelper3_data_num_data_valid),
    .imgHelper3_data122_fifo_cap(imgHelper3_data_fifo_cap),
    .imgHelper3_data122_empty_n(imgHelper3_data_empty_n),
    .imgHelper3_data122_read(dilate_0_0_128_128_0_3_3_1_1_1_U0_imgHelper3_data122_read),
    .imgHelper4_data123_din(dilate_0_0_128_128_0_3_3_1_1_1_U0_imgHelper4_data123_din),
    .imgHelper4_data123_num_data_valid(imgHelper4_data_num_data_valid),
    .imgHelper4_data123_fifo_cap(imgHelper4_data_fifo_cap),
    .imgHelper4_data123_full_n(imgHelper4_data_full_n),
    .imgHelper4_data123_write(dilate_0_0_128_128_0_3_3_1_1_1_U0_imgHelper4_data123_write)
);

color_detect_erode_0_0_128_128_0_3_3_1_1_2 erode_0_0_128_128_0_3_3_1_1_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(erode_0_0_128_128_0_3_3_1_1_2_U0_ap_start),
    .ap_done(erode_0_0_128_128_0_3_3_1_1_2_U0_ap_done),
    .ap_continue(erode_0_0_128_128_0_3_3_1_1_2_U0_ap_continue),
    .ap_idle(erode_0_0_128_128_0_3_3_1_1_2_U0_ap_idle),
    .ap_ready(erode_0_0_128_128_0_3_3_1_1_2_U0_ap_ready),
    .p_read(imgHelper4_rows_channel_dout),
    .p_read1(imgHelper4_cols_channel_dout),
    .imgHelper4_data123_dout(imgHelper4_data_dout),
    .imgHelper4_data123_num_data_valid(imgHelper4_data_num_data_valid),
    .imgHelper4_data123_fifo_cap(imgHelper4_data_fifo_cap),
    .imgHelper4_data123_empty_n(imgHelper4_data_empty_n),
    .imgHelper4_data123_read(erode_0_0_128_128_0_3_3_1_1_2_U0_imgHelper4_data123_read),
    .imgOutput_data124_din(erode_0_0_128_128_0_3_3_1_1_2_U0_imgOutput_data124_din),
    .imgOutput_data124_num_data_valid(imgOutput_data_num_data_valid),
    .imgOutput_data124_fifo_cap(imgOutput_data_fifo_cap),
    .imgOutput_data124_full_n(imgOutput_data_full_n),
    .imgOutput_data124_write(erode_0_0_128_128_0_3_3_1_1_2_U0_imgOutput_data124_write)
);

color_detect_xfMat2AXIvideo_8_0_128_128_1_s xfMat2AXIvideo_8_0_128_128_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(xfMat2AXIvideo_8_0_128_128_1_U0_ap_start),
    .ap_done(xfMat2AXIvideo_8_0_128_128_1_U0_ap_done),
    .ap_continue(xfMat2AXIvideo_8_0_128_128_1_U0_ap_continue),
    .ap_idle(xfMat2AXIvideo_8_0_128_128_1_U0_ap_idle),
    .ap_ready(xfMat2AXIvideo_8_0_128_128_1_U0_ap_ready),
    .p_read(imgOutput_rows_channel_dout),
    .p_read1(imgOutput_cols_channel_dout),
    .imgOutput_data124_dout(imgOutput_data_dout),
    .imgOutput_data124_num_data_valid(imgOutput_data_num_data_valid),
    .imgOutput_data124_fifo_cap(imgOutput_data_fifo_cap),
    .imgOutput_data124_empty_n(imgOutput_data_empty_n),
    .imgOutput_data124_read(xfMat2AXIvideo_8_0_128_128_1_U0_imgOutput_data124_read),
    .img_out_TDATA(xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TDATA),
    .img_out_TVALID(xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TVALID),
    .img_out_TREADY(img_out_TREADY),
    .img_out_TKEEP(xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TKEEP),
    .img_out_TSTRB(xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TSTRB),
    .img_out_TUSER(xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TUSER),
    .img_out_TLAST(xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TLAST),
    .img_out_TID(xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TID),
    .img_out_TDEST(xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TDEST)
);

color_detect_fifo_w32_d2_S imgInput_cols_c20_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_11),
    .if_full_n(imgInput_cols_c20_channel_full_n),
    .if_write(ap_channel_done_imgInput_cols_c20_channel),
    .if_dout(imgInput_cols_c20_channel_dout),
    .if_num_data_valid(imgInput_cols_c20_channel_num_data_valid),
    .if_fifo_cap(imgInput_cols_c20_channel_fifo_cap),
    .if_empty_n(imgInput_cols_c20_channel_empty_n),
    .if_read(AXIvideo2xfMat_32_9_128_128_1_U0_ap_ready)
);

color_detect_fifo_w32_d2_S imgInput_rows_c19_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_10),
    .if_full_n(imgInput_rows_c19_channel_full_n),
    .if_write(ap_channel_done_imgInput_rows_c19_channel),
    .if_dout(imgInput_rows_c19_channel_dout),
    .if_num_data_valid(imgInput_rows_c19_channel_num_data_valid),
    .if_fifo_cap(imgInput_rows_c19_channel_fifo_cap),
    .if_empty_n(imgInput_rows_c19_channel_empty_n),
    .if_read(AXIvideo2xfMat_32_9_128_128_1_U0_ap_ready)
);

color_detect_fifo_w32_d9_S imgOutput_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_9),
    .if_full_n(imgOutput_cols_channel_full_n),
    .if_write(ap_channel_done_imgOutput_cols_channel),
    .if_dout(imgOutput_cols_channel_dout),
    .if_num_data_valid(imgOutput_cols_channel_num_data_valid),
    .if_fifo_cap(imgOutput_cols_channel_fifo_cap),
    .if_empty_n(imgOutput_cols_channel_empty_n),
    .if_read(xfMat2AXIvideo_8_0_128_128_1_U0_ap_ready)
);

color_detect_fifo_w32_d9_S imgOutput_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_8),
    .if_full_n(imgOutput_rows_channel_full_n),
    .if_write(ap_channel_done_imgOutput_rows_channel),
    .if_dout(imgOutput_rows_channel_dout),
    .if_num_data_valid(imgOutput_rows_channel_num_data_valid),
    .if_fifo_cap(imgOutput_rows_channel_fifo_cap),
    .if_empty_n(imgOutput_rows_channel_empty_n),
    .if_read(xfMat2AXIvideo_8_0_128_128_1_U0_ap_ready)
);

color_detect_fifo_w32_d8_S imgHelper4_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_7),
    .if_full_n(imgHelper4_cols_channel_full_n),
    .if_write(ap_channel_done_imgHelper4_cols_channel),
    .if_dout(imgHelper4_cols_channel_dout),
    .if_num_data_valid(imgHelper4_cols_channel_num_data_valid),
    .if_fifo_cap(imgHelper4_cols_channel_fifo_cap),
    .if_empty_n(imgHelper4_cols_channel_empty_n),
    .if_read(erode_0_0_128_128_0_3_3_1_1_2_U0_ap_ready)
);

color_detect_fifo_w32_d8_S imgHelper4_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_6),
    .if_full_n(imgHelper4_rows_channel_full_n),
    .if_write(ap_channel_done_imgHelper4_rows_channel),
    .if_dout(imgHelper4_rows_channel_dout),
    .if_num_data_valid(imgHelper4_rows_channel_num_data_valid),
    .if_fifo_cap(imgHelper4_rows_channel_fifo_cap),
    .if_empty_n(imgHelper4_rows_channel_empty_n),
    .if_read(erode_0_0_128_128_0_3_3_1_1_2_U0_ap_ready)
);

color_detect_fifo_w32_d7_S imgHelper3_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_5),
    .if_full_n(imgHelper3_cols_channel_full_n),
    .if_write(ap_channel_done_imgHelper3_cols_channel),
    .if_dout(imgHelper3_cols_channel_dout),
    .if_num_data_valid(imgHelper3_cols_channel_num_data_valid),
    .if_fifo_cap(imgHelper3_cols_channel_fifo_cap),
    .if_empty_n(imgHelper3_cols_channel_empty_n),
    .if_read(dilate_0_0_128_128_0_3_3_1_1_1_U0_ap_ready)
);

color_detect_fifo_w32_d7_S imgHelper3_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_4),
    .if_full_n(imgHelper3_rows_channel_full_n),
    .if_write(ap_channel_done_imgHelper3_rows_channel),
    .if_dout(imgHelper3_rows_channel_dout),
    .if_num_data_valid(imgHelper3_rows_channel_num_data_valid),
    .if_fifo_cap(imgHelper3_rows_channel_fifo_cap),
    .if_empty_n(imgHelper3_rows_channel_empty_n),
    .if_read(dilate_0_0_128_128_0_3_3_1_1_1_U0_ap_ready)
);

color_detect_fifo_w32_d6_S imgHelper2_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_3),
    .if_full_n(imgHelper2_cols_channel_full_n),
    .if_write(ap_channel_done_imgHelper2_cols_channel),
    .if_dout(imgHelper2_cols_channel_dout),
    .if_num_data_valid(imgHelper2_cols_channel_num_data_valid),
    .if_fifo_cap(imgHelper2_cols_channel_fifo_cap),
    .if_empty_n(imgHelper2_cols_channel_empty_n),
    .if_read(dilate_0_0_128_128_0_3_3_1_1_U0_ap_ready)
);

color_detect_fifo_w32_d6_S imgHelper2_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_2),
    .if_full_n(imgHelper2_rows_channel_full_n),
    .if_write(ap_channel_done_imgHelper2_rows_channel),
    .if_dout(imgHelper2_rows_channel_dout),
    .if_num_data_valid(imgHelper2_rows_channel_num_data_valid),
    .if_fifo_cap(imgHelper2_rows_channel_fifo_cap),
    .if_empty_n(imgHelper2_rows_channel_empty_n),
    .if_read(dilate_0_0_128_128_0_3_3_1_1_U0_ap_ready)
);

color_detect_fifo_w32_d5_S imgHelper1_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_1),
    .if_full_n(imgHelper1_cols_channel_full_n),
    .if_write(ap_channel_done_imgHelper1_cols_channel),
    .if_dout(imgHelper1_cols_channel_dout),
    .if_num_data_valid(imgHelper1_cols_channel_num_data_valid),
    .if_fifo_cap(imgHelper1_cols_channel_fifo_cap),
    .if_empty_n(imgHelper1_cols_channel_empty_n),
    .if_read(erode_0_0_128_128_0_3_3_1_1_U0_ap_ready)
);

color_detect_fifo_w32_d5_S imgHelper1_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_0),
    .if_full_n(imgHelper1_rows_channel_full_n),
    .if_write(ap_channel_done_imgHelper1_rows_channel),
    .if_dout(imgHelper1_rows_channel_dout),
    .if_num_data_valid(imgHelper1_rows_channel_num_data_valid),
    .if_fifo_cap(imgHelper1_rows_channel_fifo_cap),
    .if_empty_n(imgHelper1_rows_channel_empty_n),
    .if_read(erode_0_0_128_128_0_3_3_1_1_U0_ap_ready)
);

color_detect_fifo_w32_d4_S rgb2hsv_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_12),
    .if_full_n(rgb2hsv_rows_channel_full_n),
    .if_write(ap_channel_done_rgb2hsv_rows_channel),
    .if_dout(rgb2hsv_rows_channel_dout),
    .if_num_data_valid(rgb2hsv_rows_channel_num_data_valid),
    .if_fifo_cap(rgb2hsv_rows_channel_fifo_cap),
    .if_empty_n(rgb2hsv_rows_channel_empty_n),
    .if_read(colorthresholding_9_0_3_128_128_1_U0_ap_ready)
);

color_detect_fifo_w32_d4_S rgb2hsv_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_13),
    .if_full_n(rgb2hsv_cols_channel_full_n),
    .if_write(ap_channel_done_rgb2hsv_cols_channel),
    .if_dout(rgb2hsv_cols_channel_dout),
    .if_num_data_valid(rgb2hsv_cols_channel_num_data_valid),
    .if_fifo_cap(rgb2hsv_cols_channel_fifo_cap),
    .if_empty_n(rgb2hsv_cols_channel_empty_n),
    .if_read(colorthresholding_9_0_3_128_128_1_U0_ap_ready)
);

color_detect_fifo_w24_d2_S imgInput_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_data118_din),
    .if_full_n(imgInput_data_full_n),
    .if_write(AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_data118_write),
    .if_dout(imgInput_data_dout),
    .if_num_data_valid(imgInput_data_num_data_valid),
    .if_fifo_cap(imgInput_data_fifo_cap),
    .if_empty_n(imgInput_data_empty_n),
    .if_read(bgr2hsv_9_128_128_1_U0_imgInput_data118_read)
);

color_detect_fifo_w32_d2_S imgInput_rows_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_rows_c_din),
    .if_full_n(imgInput_rows_c_full_n),
    .if_write(AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_rows_c_write),
    .if_dout(imgInput_rows_c_dout),
    .if_num_data_valid(imgInput_rows_c_num_data_valid),
    .if_fifo_cap(imgInput_rows_c_fifo_cap),
    .if_empty_n(imgInput_rows_c_empty_n),
    .if_read(bgr2hsv_9_128_128_1_U0_p_src_mat_rows_read)
);

color_detect_fifo_w32_d2_S imgInput_cols_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_cols_c_din),
    .if_full_n(imgInput_cols_c_full_n),
    .if_write(AXIvideo2xfMat_32_9_128_128_1_U0_imgInput_cols_c_write),
    .if_dout(imgInput_cols_c_dout),
    .if_num_data_valid(imgInput_cols_c_num_data_valid),
    .if_fifo_cap(imgInput_cols_c_fifo_cap),
    .if_empty_n(imgInput_cols_c_empty_n),
    .if_read(bgr2hsv_9_128_128_1_U0_p_src_mat_cols_read)
);

color_detect_fifo_w24_d2_S rgb2hsv_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(bgr2hsv_9_128_128_1_U0_rgb2hsv_data119_din),
    .if_full_n(rgb2hsv_data_full_n),
    .if_write(bgr2hsv_9_128_128_1_U0_rgb2hsv_data119_write),
    .if_dout(rgb2hsv_data_dout),
    .if_num_data_valid(rgb2hsv_data_num_data_valid),
    .if_fifo_cap(rgb2hsv_data_fifo_cap),
    .if_empty_n(rgb2hsv_data_empty_n),
    .if_read(colorthresholding_9_0_3_128_128_1_U0_rgb2hsv_data119_read)
);

color_detect_fifo_w8_d2_S imgHelper1_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_128_128_1_U0_imgHelper1_data120_din),
    .if_full_n(imgHelper1_data_full_n),
    .if_write(colorthresholding_9_0_3_128_128_1_U0_imgHelper1_data120_write),
    .if_dout(imgHelper1_data_dout),
    .if_num_data_valid(imgHelper1_data_num_data_valid),
    .if_fifo_cap(imgHelper1_data_fifo_cap),
    .if_empty_n(imgHelper1_data_empty_n),
    .if_read(erode_0_0_128_128_0_3_3_1_1_U0_imgHelper1_data120_read)
);

color_detect_fifo_w8_d2_S imgHelper2_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(erode_0_0_128_128_0_3_3_1_1_U0_imgHelper2_data121_din),
    .if_full_n(imgHelper2_data_full_n),
    .if_write(erode_0_0_128_128_0_3_3_1_1_U0_imgHelper2_data121_write),
    .if_dout(imgHelper2_data_dout),
    .if_num_data_valid(imgHelper2_data_num_data_valid),
    .if_fifo_cap(imgHelper2_data_fifo_cap),
    .if_empty_n(imgHelper2_data_empty_n),
    .if_read(dilate_0_0_128_128_0_3_3_1_1_U0_imgHelper2_data121_read)
);

color_detect_fifo_w8_d2_S imgHelper3_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dilate_0_0_128_128_0_3_3_1_1_U0_imgHelper3_data122_din),
    .if_full_n(imgHelper3_data_full_n),
    .if_write(dilate_0_0_128_128_0_3_3_1_1_U0_imgHelper3_data122_write),
    .if_dout(imgHelper3_data_dout),
    .if_num_data_valid(imgHelper3_data_num_data_valid),
    .if_fifo_cap(imgHelper3_data_fifo_cap),
    .if_empty_n(imgHelper3_data_empty_n),
    .if_read(dilate_0_0_128_128_0_3_3_1_1_1_U0_imgHelper3_data122_read)
);

color_detect_fifo_w8_d2_S imgHelper4_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dilate_0_0_128_128_0_3_3_1_1_1_U0_imgHelper4_data123_din),
    .if_full_n(imgHelper4_data_full_n),
    .if_write(dilate_0_0_128_128_0_3_3_1_1_1_U0_imgHelper4_data123_write),
    .if_dout(imgHelper4_data_dout),
    .if_num_data_valid(imgHelper4_data_num_data_valid),
    .if_fifo_cap(imgHelper4_data_fifo_cap),
    .if_empty_n(imgHelper4_data_empty_n),
    .if_read(erode_0_0_128_128_0_3_3_1_1_2_U0_imgHelper4_data123_read)
);

color_detect_fifo_w8_d2_S imgOutput_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(erode_0_0_128_128_0_3_3_1_1_2_U0_imgOutput_data124_din),
    .if_full_n(imgOutput_data_full_n),
    .if_write(erode_0_0_128_128_0_3_3_1_1_2_U0_imgOutput_data124_write),
    .if_dout(imgOutput_data_dout),
    .if_num_data_valid(imgOutput_data_num_data_valid),
    .if_fifo_cap(imgOutput_data_fifo_cap),
    .if_empty_n(imgOutput_data_empty_n),
    .if_read(xfMat2AXIvideo_8_0_128_128_1_U0_imgOutput_data124_read)
);

color_detect_start_for_bgr2hsv_9_128_128_1_U0 start_for_bgr2hsv_9_128_128_1_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_bgr2hsv_9_128_128_1_U0_din),
    .if_full_n(start_for_bgr2hsv_9_128_128_1_U0_full_n),
    .if_write(AXIvideo2xfMat_32_9_128_128_1_U0_start_write),
    .if_dout(start_for_bgr2hsv_9_128_128_1_U0_dout),
    .if_empty_n(start_for_bgr2hsv_9_128_128_1_U0_empty_n),
    .if_read(bgr2hsv_9_128_128_1_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgHelper1_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgHelper1_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgHelper1_cols_channel <= ap_sync_channel_write_imgHelper1_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgHelper1_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgHelper1_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgHelper1_rows_channel <= ap_sync_channel_write_imgHelper1_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgHelper2_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgHelper2_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgHelper2_cols_channel <= ap_sync_channel_write_imgHelper2_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgHelper2_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgHelper2_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgHelper2_rows_channel <= ap_sync_channel_write_imgHelper2_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgHelper3_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgHelper3_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgHelper3_cols_channel <= ap_sync_channel_write_imgHelper3_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgHelper3_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgHelper3_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgHelper3_rows_channel <= ap_sync_channel_write_imgHelper3_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgHelper4_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgHelper4_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgHelper4_cols_channel <= ap_sync_channel_write_imgHelper4_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgHelper4_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgHelper4_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgHelper4_rows_channel <= ap_sync_channel_write_imgHelper4_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgInput_cols_c20_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgInput_cols_c20_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgInput_cols_c20_channel <= ap_sync_channel_write_imgInput_cols_c20_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgInput_rows_c19_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgInput_rows_c19_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgInput_rows_c19_channel <= ap_sync_channel_write_imgInput_rows_c19_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgOutput_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgOutput_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgOutput_cols_channel <= ap_sync_channel_write_imgOutput_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgOutput_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgOutput_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgOutput_rows_channel <= ap_sync_channel_write_imgOutput_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_rgb2hsv_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_rgb2hsv_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_rgb2hsv_cols_channel <= ap_sync_channel_write_rgb2hsv_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_rgb2hsv_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_rgb2hsv_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_rgb2hsv_rows_channel <= ap_sync_channel_write_rgb2hsv_rows_channel;
        end
    end
end

assign AXIvideo2xfMat_32_9_128_128_1_U0_ap_continue = 1'b1;

assign AXIvideo2xfMat_32_9_128_128_1_U0_ap_start = (imgInput_rows_c19_channel_empty_n & imgInput_cols_c20_channel_empty_n);

assign Block_entry1_proc_U0_ap_continue = (ap_sync_channel_write_rgb2hsv_rows_channel & ap_sync_channel_write_rgb2hsv_cols_channel & ap_sync_channel_write_imgOutput_rows_channel & ap_sync_channel_write_imgOutput_cols_channel & ap_sync_channel_write_imgInput_rows_c19_channel & ap_sync_channel_write_imgInput_cols_c20_channel & ap_sync_channel_write_imgHelper4_rows_channel & ap_sync_channel_write_imgHelper4_cols_channel & ap_sync_channel_write_imgHelper3_rows_channel & ap_sync_channel_write_imgHelper3_cols_channel & ap_sync_channel_write_imgHelper2_rows_channel & ap_sync_channel_write_imgHelper2_cols_channel & ap_sync_channel_write_imgHelper1_rows_channel & ap_sync_channel_write_imgHelper1_cols_channel);

assign Block_entry1_proc_U0_ap_start = ap_start;

assign ap_channel_done_imgHelper1_cols_channel = ((ap_sync_reg_channel_write_imgHelper1_cols_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_imgHelper1_rows_channel = ((ap_sync_reg_channel_write_imgHelper1_rows_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_imgHelper2_cols_channel = ((ap_sync_reg_channel_write_imgHelper2_cols_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_imgHelper2_rows_channel = ((ap_sync_reg_channel_write_imgHelper2_rows_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_imgHelper3_cols_channel = ((ap_sync_reg_channel_write_imgHelper3_cols_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_imgHelper3_rows_channel = ((ap_sync_reg_channel_write_imgHelper3_rows_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_imgHelper4_cols_channel = ((ap_sync_reg_channel_write_imgHelper4_cols_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_imgHelper4_rows_channel = ((ap_sync_reg_channel_write_imgHelper4_rows_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_imgInput_cols_c20_channel = ((ap_sync_reg_channel_write_imgInput_cols_c20_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_imgInput_rows_c19_channel = ((ap_sync_reg_channel_write_imgInput_rows_c19_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_imgOutput_cols_channel = ((ap_sync_reg_channel_write_imgOutput_cols_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_imgOutput_rows_channel = ((ap_sync_reg_channel_write_imgOutput_rows_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_rgb2hsv_cols_channel = ((ap_sync_reg_channel_write_rgb2hsv_cols_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_rgb2hsv_rows_channel = ((ap_sync_reg_channel_write_rgb2hsv_rows_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_done = xfMat2AXIvideo_8_0_128_128_1_U0_ap_done;

assign ap_idle = (xfMat2AXIvideo_8_0_128_128_1_U0_ap_idle & (rgb2hsv_cols_channel_empty_n ^ 1'b1) & (rgb2hsv_rows_channel_empty_n ^ 1'b1) & (imgHelper1_rows_channel_empty_n ^ 1'b1) & (imgHelper1_cols_channel_empty_n ^ 1'b1) & (imgHelper2_rows_channel_empty_n ^ 1'b1) & (imgHelper2_cols_channel_empty_n ^ 1'b1) & (imgHelper3_rows_channel_empty_n ^ 1'b1) & (imgHelper3_cols_channel_empty_n ^ 1'b1) & (imgHelper4_rows_channel_empty_n ^ 1'b1) & (imgHelper4_cols_channel_empty_n ^ 1'b1) & (imgOutput_rows_channel_empty_n ^ 1'b1) & (imgOutput_cols_channel_empty_n ^ 1'b1) & (imgInput_rows_c19_channel_empty_n ^ 1'b1) & (imgInput_cols_c20_channel_empty_n ^ 1'b1) & erode_0_0_128_128_0_3_3_1_1_U0_ap_idle & erode_0_0_128_128_0_3_3_1_1_2_U0_ap_idle & dilate_0_0_128_128_0_3_3_1_1_U0_ap_idle & dilate_0_0_128_128_0_3_3_1_1_1_U0_ap_idle & colorthresholding_9_0_3_128_128_1_U0_ap_idle & bgr2hsv_9_128_128_1_U0_ap_idle & Block_entry1_proc_U0_ap_idle & AXIvideo2xfMat_32_9_128_128_1_U0_ap_idle);

assign ap_ready = Block_entry1_proc_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_channel_write_imgHelper1_cols_channel = ((imgHelper1_cols_channel_full_n & ap_channel_done_imgHelper1_cols_channel) | ap_sync_reg_channel_write_imgHelper1_cols_channel);

assign ap_sync_channel_write_imgHelper1_rows_channel = ((imgHelper1_rows_channel_full_n & ap_channel_done_imgHelper1_rows_channel) | ap_sync_reg_channel_write_imgHelper1_rows_channel);

assign ap_sync_channel_write_imgHelper2_cols_channel = ((imgHelper2_cols_channel_full_n & ap_channel_done_imgHelper2_cols_channel) | ap_sync_reg_channel_write_imgHelper2_cols_channel);

assign ap_sync_channel_write_imgHelper2_rows_channel = ((imgHelper2_rows_channel_full_n & ap_channel_done_imgHelper2_rows_channel) | ap_sync_reg_channel_write_imgHelper2_rows_channel);

assign ap_sync_channel_write_imgHelper3_cols_channel = ((imgHelper3_cols_channel_full_n & ap_channel_done_imgHelper3_cols_channel) | ap_sync_reg_channel_write_imgHelper3_cols_channel);

assign ap_sync_channel_write_imgHelper3_rows_channel = ((imgHelper3_rows_channel_full_n & ap_channel_done_imgHelper3_rows_channel) | ap_sync_reg_channel_write_imgHelper3_rows_channel);

assign ap_sync_channel_write_imgHelper4_cols_channel = ((imgHelper4_cols_channel_full_n & ap_channel_done_imgHelper4_cols_channel) | ap_sync_reg_channel_write_imgHelper4_cols_channel);

assign ap_sync_channel_write_imgHelper4_rows_channel = ((imgHelper4_rows_channel_full_n & ap_channel_done_imgHelper4_rows_channel) | ap_sync_reg_channel_write_imgHelper4_rows_channel);

assign ap_sync_channel_write_imgInput_cols_c20_channel = ((imgInput_cols_c20_channel_full_n & ap_channel_done_imgInput_cols_c20_channel) | ap_sync_reg_channel_write_imgInput_cols_c20_channel);

assign ap_sync_channel_write_imgInput_rows_c19_channel = ((imgInput_rows_c19_channel_full_n & ap_channel_done_imgInput_rows_c19_channel) | ap_sync_reg_channel_write_imgInput_rows_c19_channel);

assign ap_sync_channel_write_imgOutput_cols_channel = ((imgOutput_cols_channel_full_n & ap_channel_done_imgOutput_cols_channel) | ap_sync_reg_channel_write_imgOutput_cols_channel);

assign ap_sync_channel_write_imgOutput_rows_channel = ((imgOutput_rows_channel_full_n & ap_channel_done_imgOutput_rows_channel) | ap_sync_reg_channel_write_imgOutput_rows_channel);

assign ap_sync_channel_write_rgb2hsv_cols_channel = ((rgb2hsv_cols_channel_full_n & ap_channel_done_rgb2hsv_cols_channel) | ap_sync_reg_channel_write_rgb2hsv_cols_channel);

assign ap_sync_channel_write_rgb2hsv_rows_channel = ((rgb2hsv_rows_channel_full_n & ap_channel_done_rgb2hsv_rows_channel) | ap_sync_reg_channel_write_rgb2hsv_rows_channel);

assign bgr2hsv_9_128_128_1_U0_ap_continue = 1'b1;

assign bgr2hsv_9_128_128_1_U0_ap_start = start_for_bgr2hsv_9_128_128_1_U0_empty_n;

assign colorthresholding_9_0_3_128_128_1_U0_ap_continue = 1'b1;

assign colorthresholding_9_0_3_128_128_1_U0_ap_start = (rgb2hsv_rows_channel_empty_n & rgb2hsv_cols_channel_empty_n);

assign dilate_0_0_128_128_0_3_3_1_1_1_U0_ap_continue = 1'b1;

assign dilate_0_0_128_128_0_3_3_1_1_1_U0_ap_start = (imgHelper3_rows_channel_empty_n & imgHelper3_cols_channel_empty_n);

assign dilate_0_0_128_128_0_3_3_1_1_U0_ap_continue = 1'b1;

assign dilate_0_0_128_128_0_3_3_1_1_U0_ap_start = (imgHelper2_rows_channel_empty_n & imgHelper2_cols_channel_empty_n);

assign erode_0_0_128_128_0_3_3_1_1_2_U0_ap_continue = 1'b1;

assign erode_0_0_128_128_0_3_3_1_1_2_U0_ap_start = (imgHelper4_rows_channel_empty_n & imgHelper4_cols_channel_empty_n);

assign erode_0_0_128_128_0_3_3_1_1_U0_ap_continue = 1'b1;

assign erode_0_0_128_128_0_3_3_1_1_U0_ap_start = (imgHelper1_rows_channel_empty_n & imgHelper1_cols_channel_empty_n);

assign img_in_TREADY = AXIvideo2xfMat_32_9_128_128_1_U0_img_in_TREADY;

assign img_out_TDATA = xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TDATA;

assign img_out_TDEST = xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TDEST;

assign img_out_TID = xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TID;

assign img_out_TKEEP = xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TKEEP;

assign img_out_TLAST = xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TLAST;

assign img_out_TSTRB = xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TSTRB;

assign img_out_TUSER = xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TUSER;

assign img_out_TVALID = xfMat2AXIvideo_8_0_128_128_1_U0_img_out_TVALID;

assign start_for_bgr2hsv_9_128_128_1_U0_din = 1'b1;

assign xfMat2AXIvideo_8_0_128_128_1_U0_ap_continue = 1'b1;

assign xfMat2AXIvideo_8_0_128_128_1_U0_ap_start = (imgOutput_rows_channel_empty_n & imgOutput_cols_channel_empty_n);

endmodule //color_detect
