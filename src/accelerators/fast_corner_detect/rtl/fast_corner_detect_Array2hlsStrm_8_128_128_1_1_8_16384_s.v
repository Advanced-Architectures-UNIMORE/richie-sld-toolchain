// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.1 (64-bit)
// Version: 2022.2.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fast_corner_detect_Array2hlsStrm_8_128_128_1_1_8_16384_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        img_in_TDATA,
        img_in_TVALID,
        img_in_TREADY,
        stream_img_in3_din,
        stream_img_in3_num_data_valid,
        stream_img_in3_fifo_cap,
        stream_img_in3_full_n,
        stream_img_in3_write,
        rows,
        cols,
        cols_c14_din,
        cols_c14_num_data_valid,
        cols_c14_fifo_cap,
        cols_c14_full_n,
        cols_c14_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] img_in_TDATA;
input   img_in_TVALID;
output   img_in_TREADY;
output  [7:0] stream_img_in3_din;
input  [1:0] stream_img_in3_num_data_valid;
input  [1:0] stream_img_in3_fifo_cap;
input   stream_img_in3_full_n;
output   stream_img_in3_write;
input  [31:0] rows;
input  [31:0] cols;
output  [31:0] cols_c14_din;
input  [1:0] cols_c14_num_data_valid;
input  [1:0] cols_c14_fifo_cap;
input   cols_c14_full_n;
output   cols_c14_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_in_TREADY;
reg stream_img_in3_write;
reg cols_c14_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    cols_c14_blk_n;
wire   [15:0] mul_ln215_fu_85_p2;
reg   [15:0] mul_ln215_reg_91;
wire    grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_start;
wire    grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_done;
wire    grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_idle;
wire    grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_ready;
wire   [7:0] grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_stream_img_in3_din;
wire    grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_stream_img_in3_write;
wire    grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_img_in_TREADY;
reg    grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    ap_block_state1;
wire   [7:0] empty_fu_69_p1;
wire   [7:0] empty_74_fu_77_p1;
wire   [7:0] mul_ln215_fu_85_p0;
wire   [7:0] mul_ln215_fu_85_p1;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire   [15:0] mul_ln215_fu_85_p00;
wire   [15:0] mul_ln215_fu_85_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_start_reg = 1'b0;
end

fast_corner_detect_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1 grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_start),
    .ap_done(grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_done),
    .ap_idle(grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_idle),
    .ap_ready(grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_ready),
    .img_in_TVALID(img_in_TVALID),
    .stream_img_in3_din(grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_stream_img_in3_din),
    .stream_img_in3_num_data_valid(2'd0),
    .stream_img_in3_fifo_cap(2'd0),
    .stream_img_in3_full_n(stream_img_in3_full_n),
    .stream_img_in3_write(grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_stream_img_in3_write),
    .mul_ln215(mul_ln215_reg_91),
    .img_in_TDATA(img_in_TDATA),
    .img_in_TREADY(grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_img_in_TREADY)
);

fast_corner_detect_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U9(
    .din0(mul_ln215_fu_85_p0),
    .din1(mul_ln215_fu_85_p1),
    .dout(mul_ln215_fu_85_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_start_reg <= 1'b1;
        end else if ((grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_ready == 1'b1)) begin
            grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        mul_ln215_reg_91 <= mul_ln215_fu_85_p2;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (cols_c14_full_n == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_c14_blk_n = cols_c14_full_n;
    end else begin
        cols_c14_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (cols_c14_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_c14_write = 1'b1;
    end else begin
        cols_c14_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        img_in_TREADY = grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_img_in_TREADY;
    end else begin
        img_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        stream_img_in3_write = grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_stream_img_in3_write;
    end else begin
        stream_img_in3_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (cols_c14_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (cols_c14_full_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign cols_c14_din = cols;

assign empty_74_fu_77_p1 = rows[7:0];

assign empty_fu_69_p1 = cols[7:0];

assign grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_start = grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_ap_start_reg;

assign mul_ln215_fu_85_p0 = mul_ln215_fu_85_p00;

assign mul_ln215_fu_85_p00 = empty_fu_69_p1;

assign mul_ln215_fu_85_p1 = mul_ln215_fu_85_p10;

assign mul_ln215_fu_85_p10 = empty_74_fu_77_p1;

assign stream_img_in3_din = grp_Array2hlsStrm_8_128_128_1_1_8_16384_Pipeline_VITIS_LOOP_215_1_fu_60_stream_img_in3_din;

endmodule //fast_corner_detect_Array2hlsStrm_8_128_128_1_1_8_16384_s
