<%
###################################
## Kernel wrapper waves -> DFLOW ##
###################################
%>

<%def name="kernel_wrapper_waves_ap_dflow(is_intf, target, stream_in, stream_out, n_sink, n_source)">\

% if is_intf:

add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Global} -label {clk_i} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/clk_i}
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Global} -label {rst_ni} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/rst_ni}
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Global} -label {test_mode_i} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/test_mode_i}

% for i in range (n_sink):
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Input data} -group {${stream_in[i]}} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/${stream_in[i]}_i/valid}
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Input data} -group {${stream_in[i]}} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/${stream_in[i]}_i/data}
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Input data} -group {${stream_in[i]}} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/${stream_in[i]}_i/ready}
% endfor

% for i in range (n_source):
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Output data} -group {${stream_out[i]}} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/${stream_out[i]}_o/valid}
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Output data} -group {${stream_out[i]}} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/${stream_out[i]}_o/data}
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Output data} -group {${stream_out[i]}} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/${stream_out[i]}_o/ready}
% endfor

% for i in range (custom_reg_num):
<% NAME=custom_reg_name[i].upper() %>
<% name=custom_reg_name[i].lower() %>
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Custom registers} -label {${custom_reg_name[i]}} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/${custom_reg_name[i]}}
% endfor

add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Control} -label {Start} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/start}
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Control} -label {Clear} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/clear}

add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Flags} -label {Done} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/done}
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Flags} -label {Idle} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/idle}
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Flags} -label {Ready} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/ready}

% if is_dflow is True:
  % for j in range (n_source):
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Output counters} -label {cnt_${chr(j+n_sink+97)}} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/cnt_${chr(j+n_sink+97)}}
  % endfor 
% endif

add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Local} -group {Control} -label {Start} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/local_start}

% for i in range (n_sink):
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Local} -group {Flags} -label {Ready_in_${i}} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/local_ready_in_${i}}
 % endfor
% for i in range (n_sink):
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Local} -group {Flags} -label {Done_in_${i}} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/local_done_in_${i}}
 % endfor
% for j in range (n_source):
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Local} -group {Flags} -label {Done_out_${i}} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/local_done_out_${j}}
 % endfor

add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Local} -group {Flags} -label {Idle} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/local_idle}

% for i in range (n_sink):
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Local} -group {Counter-in} -label {Count_in_${i}} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/local_cnt_${chr(i+97)}}
 % endfor
% for j in range (n_source):
add wave -noupdate -group {HWPE_${TARGET}_kernel_wrapper[0]} -group {Local} -group {Counter-out} -label {Count_out_${j}} {/pulp_tb/dut/gen_clusters[0]/gen_cluster_sync/i_cluster/i_ooc/i_bound/hwpe_gen/hwpe_wrap_i/i_hwpe_top_wrap/i_${TARGET}_top/i_engine/i_k_wrap/local_cnt_${chr(j+n_sink+97)}}
 % endfor

% endif

</%def>\
