/*
 * HWPE: Francesco Conti <fconti@iis.ee.ethz.ch>
 *
 * Copyright (C) 2018 ETH Zurich, University of Bologna
 * Copyright and related rights are licensed under the Solderpad Hardware
 * License, Version 0.51 (the "License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of the License at
 * http://solderpad.org/licenses/SHL-0.51. Unless required by applicable law
 * or agreed to in writing, software, hardware and materials distributed under
 * this License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * Authors:     Francesco Conti <fconti@iis.ee.ethz.ch>
 * Contribute:  ${author} ${email}
 *
 * Module: ${target}_engine.sv
 * 
 */

import ${target}_package::*;

module ${target}_engine (\

  // Global signals
  ${port('clk', 'logic', 1, False)},\
  ${port('rst', 'logic', 1, False, True)},
  ${port('test_mode', 'logic', 1, False)},

  // Sink ports
  % for i in range (n_sink):
  hwpe_stream_intf_stream.sink    ${chr(i+97)}_i,
  % endfor 

  // Source ports
  % for j in range (n_source):
  hwpe_stream_intf_stream.source  ${chr(j+i+98)}_o,
  % endfor 

  // Control channel
  input  ctrl_engine_t            ctrl_i,
  output flags_engine_t           flags_o
);

<%
##############################################
## Kernel interface -> AP_CTRL (Vivado HLS) ##
##############################################
%>

  % if (ap_ctrl==1):
    ${intf_ap_ctrl()}
  % endif

  % if (dflow==1):
    ${intf_ap_ctrl()}
  % endif

endmodule\

