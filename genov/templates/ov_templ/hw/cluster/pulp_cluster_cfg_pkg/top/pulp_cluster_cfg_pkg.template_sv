<%
# =====================================================================
# Project:      Cluster package
# Title:        pulp_cluster_cfg_pkg.template_sv
# Description:  Packages compliant with hardware accelerator parameters.
#
# $Date:        29.12.2021
#
# Generator:    generate_cluster
# =====================================================================
#
# Copyright (C) 2021 University of Modena and Reggio Emilia.
#
# Author: Gianluca Bellocchi, University of Modena and Reggio Emilia.
#
# =====================================================================
%>

/* =====================================================================
 * Project:      Cluster package
 * Title:        pulp_cluster_${cl_offset}cfg_pkg.sv
 * Description:  This package instantiates the following device:
 *
 *               >> PULP cluster:      
 *                  - Offset: ${cl_offset}
 *                  - LIC interconnect:
 *                    o Number of data ports (total): ${cl_lic_total_data_ports}
 *                    o Accelerators:
 *                      + Applications: [ ${print_cl_acc_names("lic")} ]
 *                      + Number of data ports: [ ${print_cl_acc_n_data_ports("lic")} ]
 *                      + Communication protocols: [ ${print_cl_acc_protocols("lic")} ]
 *                  - HCI interconnect:
 *                    o Number of data ports (total): ${cl_hci_total_data_ports}
 *                    o Accelerators:
 *                      + Applications: [ ${print_cl_acc_names("hci")} ]
 *                      + Number of data ports: [ ${print_cl_acc_n_data_ports("hci")} ]
 *                      + Communication protocols: [ ${print_cl_acc_protocols("hci")} ]
 *
 * $Date:        29.12.2021
 * ===================================================================== */
/*
 * Copyright (C) 2021 University of Modena and Reggio Emilia.
 *
 * Author: Gianluca Bellocchi, University of Modena and Reggio Emilia.
 *
 */

`define L1_ATOMIC_PRESENT // TO DO: REMOVE

package automatic pulp_cluster_${cl_offset}_cfg_pkg;

    <%
        # Definition of parameters for proxy core
    %>

    // -- Proxy cores
    localparam int unsigned N_CORES = 8; 
    // Notes:
    // - must be a power of 2 and <= 8
    // - all clusters have same number of cores

    <%
        # Definition of parameters for HWPE-based accelerator wrappers
    %>

    // HWPE wrapper - LIC interconnect
    ${def_param_hwpe_lic_region()}
    ${def_param_hwpe_lic_interface()}

    // HWPE wrapper - HCI interconnect
    ${def_param_hwpe_hci_region()}
    ${def_param_hwpe_hci_interface()}

    <%
        # Definition of parameters for DMA engine
    %>

    // -- DMA
    localparam int unsigned DMA_STREAMS = 1;
    localparam int unsigned DMA_MAX_BURST_SIZE = 2048; // [B], must be a power of 2

    // Maximum number of transactions the DMA can have in flight
    localparam int unsigned DMA_MAX_N_TXNS = N_CORES;
    localparam int unsigned N_DMAS = 4; // larger values seem to break the cluster

    <%
        # Definition of parameters for memory hierarchy
    %>

    // -- Instruction Cache
    localparam int unsigned ICACHE_SIZE = 4096; // [B], must be a power of 2

    // -- TCDM
    localparam int unsigned N_TCDM_BANKS = 64; // must be a power of 2
    localparam int unsigned TCDM_SIZE = 128*1024; // [B], must be a power of 2

    <%
        # Definition of parameters for cluster peripheral interconnect

        # Count number of wrappers
        n_acc_cl = len(cl_lic_acc_names)
    %>

    // position of HWPE peripherals on slave port of periph interconnect
    % for i in range(n_acc_cl): 
        <%
            # Define accelerator offset
            acc_offset = i
        %>

        % if (cl_lic_acc_protocols[acc_offset] == "hwpe"):
            % if (acc_offset == 0):
    parameter SPER_HWPE_${acc_offset}_ID      = 4; // original offset on peripheral interconnect
            % else:
    parameter SPER_HWPE_${acc_offset}_ID      = 8 + ${acc_offset} - 1; // additional offsets  
            % endif
        % endif
    % endfor

endpackage