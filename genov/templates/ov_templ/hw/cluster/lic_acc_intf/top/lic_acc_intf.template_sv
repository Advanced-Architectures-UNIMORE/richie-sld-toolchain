<%
# =====================================================================
# Project:      LIC Accelerator interface
# Title:        lic_acc_intf.template_sv
# Description:  The LIC accelerator interface is positioned in between an 
#               accelerator region and the top module of an accelerator 
#               wrapper. The goal of the IP is to decompose the crossbar
#               TCDM master interface (from the overlay cluster) into
#               the single signals of the TCDM communication protocol.
#
# $Date:        29.12.2021
#
# Generator:    generate_ov
# =====================================================================
#
# Copyright (C) 2021 University of Modena and Reggio Emilia.
#
# Author: Gianluca Bellocchi, University of Modena and Reggio Emilia.
#
# =====================================================================
%>

<%
  # Count number of wrappers

  n_acc_cl = len(cl_lic_acc_names)
%>

/* =====================================================================
 * Project:      LIC accelerator interface
 * Title:        cl_${cl_offset}_lic_acc_intf.template_sv
 * Description:  The accelerator interface is positioned in between an 
 *               accelerator region and the top module of an accelerator 
 *               wrapper. The goal of the IP is to decompose the crossbar
 *               TCDM master interface (from the overlay cluster) into
 *               the single signals of the TCDM communication protocol.
 *
 * $Date:        29.12.2021
 *
 * Target Processor: PULP cores
 * ===================================================================== */
/*
 * Copyright (C) 2021 University of Modena and Reggio Emilia.
 *
 * Author: Gianluca Bellocchi, University of Modena and Reggio Emilia.
 *
 */

<%
  # Define accelerator list to keep track of generated 
  # accelerator interfaces and avoid duplicated definitions

  hwpe_gen_list = []
  is_hwpe_duplicate = False
%>

% for i in range(n_acc_cl):

  <%
    # Define accelerator offset

    acc_offset = i

    # Search for duplicates

    for hwpe_gen in hwpe_gen_list:
      if (cl_lic_acc_names[acc_offset]==hwpe_gen):
        is_hwpe_duplicate = True 
  %>

  % if (is_hwpe_duplicate==False):

    <%
      # If no duplicates are found, then insert 
      # the accelerator interface that will be 
      # soon generated in the list

      if (is_hwpe_duplicate==False):
        hwpe_gen_list.append(cl_lic_acc_names[acc_offset])
    %>

    % if (cl_lic_acc_protocols[acc_offset] == "hwpe"):

${def_ip_hwpe_intf(acc_offset)}
${insert_ip_hwpe_wrapper(acc_offset, n_acc_cl)}

    % endif

    <%
      # Reset duplicate token

      is_hwpe_duplicate = False
    %>

  % endif
% endfor
