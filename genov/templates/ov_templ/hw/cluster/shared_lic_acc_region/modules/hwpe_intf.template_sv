<%
# =====================================================================
# Project:      Shared LIC accelerator region
# Title:        hwpe_intf.template_sv
# Description:  HWPE-based accelerator interface (Shared LCI)
#
# $Date:        29.12.2021
#
# Generator:    genov
# =====================================================================
#
# Copyright (C) 2021 University of Modena and Reggio Emilia.
#
# Author: Gianluca Bellocchi, University of Modena and Reggio Emilia.
#
# =====================================================================
%>

<%
# =====================================================================
# Title:        insert_ip_hwpe_intf
# Type:         Template API
# Description:  Interface to HWPE-based accelerator wrapper. Instantiation 
#               of HWPE-based accelerator wrapper(-s) connected to the 
#               shared LIC inside an overlay cluster.
# =====================================================================
%>

<%def name="insert_ip_hwpe_intf(cl_offset)">\

  <%
    # Count number of wrappers

    n_acc_cl = len(cl_acc_names[cl_offset])
  %>

  logic [NB_HWPE-1:0] busy_acc;

  % for i in range(n_acc_cl):
    % if cl_acc_protocols[cl_offset][i] == "hwpe":

      <%
        # Determine accelerator offset

        acc_offset = i
      %>

  /* ---------------------------------------------------------- */

  /* Interface to accelerator #${acc_offset}. */

  ${def_param_master_port_idx(cl_offset, acc_offset)}

  ${cl_acc_names[cl_offset][acc_offset]}_hwpe_intf #( 
    .N_CORES          ( NB_CORES  ),
    .N_HWPE_PORTS     ( NB_HWPE_PORTS_${acc_offset}   ),
    .ID_WIDTH         ( ID_WIDTH )
  ) i_hwpe_intf (
    .clk              ( clk                                         ),
    .rst_n            ( rst_n                                       ),
    .test_mode        ( test_mode                                   ),
    .hwpe_mst         ( hwacc_xbar_master[mst_idx_${acc_offset}_H:mst_idx_${acc_offset}_L]  ), 
    .hwpe_slv         ( hwacc_cfg_slave[${acc_offset}]                          ), 
    .evt_o            ( evt_o[${acc_offset}]                                    ),
    .busy_o           ( busy_acc[${acc_offset}]                                 ) 
  );

  assign busy_acc[${acc_offset}] = 1'b1;

  % endif
% endfor

  /* ---------------------------------------------------------- */

  ${proc_signal_busy_o(n_acc_cl)}

endmodule

</%def>

<%
# =====================================================================
# Title:        def_param_master_port_idx
# Type:         Template API
# Description:  Definition and initialization of shared LIC port indices  
#               associated with clustered HWPE-based accelerator wrapper(-s).
#               This is because the master ports are wrapped into an array
#               "hwacc_xbar_master[NB_HWPE_PORTS_TOTAL-1:0]" that is input
#               to the accelerator interface. The latter subsequently needs
#               to distribute the data ports to each accelerator wrapper.
#               This is accomplished using the indices defined below.
# =====================================================================
%>

<%def name="def_param_master_port_idx(cl_offset, acc_offset)">\

  <%
    is_first_hwpe = True

    str_H = ""
    str_L = ""
  %>

  <%
    # Scan all clustered accelerators till the current one
  %>

  % for i in range(acc_offset+1):

    <%
      # Only HWPE-based wrappers are currently supported
    %>

    % if cl_acc_protocols[cl_offset][i] == "hwpe":

      <%
        # Construction of the string defining the indices
      %>

      % if is_first_hwpe is True:
        <%
          is_first_hwpe = False

          str_H = "NB_HWPE_PORTS_" + str(i) + " - 1"
          str_L = "0"
        %>
      % else:
        <%
          str_H = "NB_HWPE_PORTS_" + str(i) + " + " + str_H
        %>

        <%
          str_L = "NB_HWPE_PORTS_" + str(i-1) + " + " + str_L
        %>
      % endif
    % endif
  % endfor

  <%
    # Definition and initialization of shared LIC port indices
  %>

  parameter mst_idx_${acc_offset}_H = ${str_H};
  parameter mst_idx_${acc_offset}_L = ${str_L};
    
</%def>

<%
# =====================================================================
# Title:        proc_signal_busy_o
# Type:         Template API
# Description:  Assign value of output busy signal. This is a combination  
#               of the busy signals coming from each accelerator interface.
# =====================================================================
%>

<%def name="proc_signal_busy_o(n_acc_cl)">\
\
assign busy_o = \
% for i in range (n_acc_cl-1):
busy_acc[${i}] | \
% endfor
\
busy_acc[${i+1}];\
\
</%def>