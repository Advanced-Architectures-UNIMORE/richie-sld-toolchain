<%
# =====================================================================
# Project:       Bender
# Title:         bender.template_yml
# Description:   Bender is a dependency management tool for hardware 
#                design projects. It provides a way to define dependencies 
#                among IPs, execute unit tests, and verify that the source 
#                files are valid input for various simulation and synthesis 
#                tools. 
#                For more information about it:
#                    - https://github.com/fabianschuiki/bender
#
# $Date:        29.12.2021
#
# Generator:    generate_ov
# ===================================================================== */
#
# Copyright (C) 2021 University of Modena and Reggio Emilia.
#
# Author: Gianluca Bellocchi, University of Modena and Reggio Emilia.
%>

package:
  name: soc
  authors: [ "Gianluca Bellocchi <gianluca.bellocchi@unimore.it>", "Andreas Kurth <akurth@iis.ee.ethz.ch>" ]

dependencies:
  axi2apb: { git: "https://github.com/pulp-platform/axi2apb.git", rev: atop }
  axi: { git: "https://github.com/pulp-platform/axi.git", rev: axi_dwc_akurth }
  axi2mem: { git: "https://github.com/pulp-platform/axi2mem.git", rev: undefined } # TODO: upstream
  axi_riscv_atomics: { git: "https://github.com/pulp-platform/axi_riscv_atomics.git", rev: fix-ordering }
  axi_slice_dc: { git: "https://github.com/pulp-platform/axi_slice_dc.git", rev: atomics }
  common_verification: { git: "https://github.com/pulp-platform/common_verification.git", rev: release-0.2 }
  pulp_cluster: { git: "git@git.hipert.unimore.it:comp4drones/HERO/pulp_cluster.git", rev: acc_rich_ov }

workspace:
  checkout_dir: "./deps"

export_include_dirs:
  - rtl/apb/include # TODO: move to APB repository
  - packages

sources:
  # generic APB modules; to be moved to APB repository
  - rtl/apb/apb_bus.sv
  - rtl/apb/apb_ro_regs.sv
  - rtl/apb/apb_rw_regs.sv
  - rtl/apb/apb_bus_wrap.sv
  # Level 0
  - packages/soc_cfg_pkg.sv
  # Level 1
  - rtl/hero_axi_mailbox.sv
  - rtl/soc_bus.sv
  - rtl/soc_ctrl_regs.sv
  - rtl/out-of-context/dmac_wrap_ooc.sv 
  # Level 2
  - rtl/l2_mem.sv
  % for i in range(n_clusters):
  - rtl/out-of-context/pulp_cluster_${i}_ooc.sv 
  % endfor 
  - rtl/soc_peripherals.sv
  # Level 3
  - rtl/pulp.sv
  # Level 4
  - rtl/out-of-context/pulp_ooc.sv

  - target: test
    files:
      # Level 0
      - rtl/apb/apb_stdout.sv
