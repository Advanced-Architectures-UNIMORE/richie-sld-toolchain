<%
# =====================================================================
# Project:       QuestaSim waves
# Title:         group_by_device.template_wave_do
# Description:   QuestaSim waves to simplify validation phase of cluster 
#                components.
#
# $Date:         13.10.2022
#
# Generator:     generate_ov_test
# ===================================================================== */
#
# Copyright (C) 2022 University of Modena and Reggio Emilia.
#
# Author: Gianluca Bellocchi, University of Modena and Reggio Emilia.
%>

<%
# =====================================================================
# Title:        vsim_waves_experiment_group_by_device
# Type:         Template API
# Description:  Waves grouped by device.
# =====================================================================
%>

<%def name="vsim_waves_experiment_group_by_device()">\
% for i_l2_bank in range(n_l2_banks):
add wave -noupdate -expand -group {Experiment [DEV-grouped]} -group {L2} -label {L2_${i_l2_bank} - WRITE valid} {/overlay_tb/dut/l2_mst[${i_l2_bank}]/aw_valid}
add wave -noupdate -expand -group {Experiment [DEV-grouped]} -group {L2} -label {L2_${i_l2_bank} - WRITE ready} {/overlay_tb/dut/l2_mst[${i_l2_bank}]/aw_ready}
add wave -noupdate -expand -group {Experiment [DEV-grouped]} -group {L2} -label {L2_${i_l2_bank} - READ valid} {/overlay_tb/dut/l2_mst[${i_l2_bank}]/r_valid}
add wave -noupdate -expand -group {Experiment [DEV-grouped]} -group {L2} -label {L2_${i_l2_bank} - READ ready} {/overlay_tb/dut/l2_mst[${i_l2_bank}]/r_ready}
% endfor

% for cl_id in range(n_clusters):

    <%
        # Additional design parameters
        cl_lic_acc_names = extra_param_0.list_cl_lic[cl_id][1]
        cl_lic_acc_protocols = extra_param_0.list_cl_lic[cl_id][2]
        cl_lic_acc_n_data_ports = extra_param_0.list_cl_lic[cl_id][3]

        n_acc_cl = len(cl_lic_acc_names)
    %>
add wave -noupdate -expand -group {Experiment [DEV-grouped]} -group {CORE]} -label {CORE_0_CL_${cl_id} - CLK en}  {/overlay_tb/dut/gen_clusters[${cl_id}]/gen_cluster_sync/i_cluster/i_ooc/i_bound/CORE[0]/core_region_i/clock_en_i}
add wave -noupdate -expand -group {Experiment [DEV-grouped]} -group {CORE]} -label {CORE_0_CL_${cl_id} - INSTR req}  {/overlay_tb/dut/gen_clusters[${cl_id}]/gen_cluster_sync/i_cluster/i_ooc/i_bound/CORE[0]/core_region_i/instr_req_o}

add wave -noupdate -expand -group {Experiment [DEV-grouped]} -group {DMA} -label {DMA_0_CL_${cl_id} - WRITE valid} {/overlay_tb/dut/gen_clusters[${cl_id}]/gen_cluster_sync/i_cluster/i_ooc/i_bound/dmac_wrap_i/ext_master/w_valid}
add wave -noupdate -expand -group {Experiment [DEV-grouped]} -group {DMA} -label {DMA_0_CL_${cl_id} - WRITE ready} {/overlay_tb/dut/gen_clusters[${cl_id}]/gen_cluster_sync/i_cluster/i_ooc/i_bound/dmac_wrap_i/ext_master/w_ready}
add wave -noupdate -expand -group {Experiment [DEV-grouped]} -group {DMA} -label {DMA_0_CL_${cl_id} - READY valid} {/overlay_tb/dut/gen_clusters[${cl_id}]/gen_cluster_sync/i_cluster/i_ooc/i_bound/dmac_wrap_i/ext_master/r_valid}
add wave -noupdate -expand -group {Experiment [DEV-grouped]} -group {DMA} -label {DMA_0_CL_${cl_id} - READY ready} {/overlay_tb/dut/gen_clusters[${cl_id}]/gen_cluster_sync/i_cluster/i_ooc/i_bound/dmac_wrap_i/ext_master/r_ready}
    
    % for acc_id in range(n_acc_cl):

        <%
            if (cl_lic_acc_protocols[acc_id] == "hwpe"):
                if (acc_id == 0):
                    mst_port_offset_L = 0
                    mst_port_offset_H = cl_lic_acc_n_data_ports[acc_id] - 1
                else:
                    mst_port_offset_L = cl_lic_acc_n_data_ports[acc_id-1] + mst_port_offset_L
                    mst_port_offset_H = cl_lic_acc_n_data_ports[acc_id] + mst_port_offset_H
        %>

        % for port_offset in range(mst_port_offset_L, mst_port_offset_H+1):
add wave -noupdate -expand -group {Experiment [DEV-grouped]} -group {ACC} -label {ACC_${acc_id}_CL_${cl_id} - READ req} {/overlay_tb/dut/gen_clusters[${cl_id}]/gen_cluster_sync/i_cluster/i_ooc/i_bound/lic_acc_region_gen/lic_acc_region_i/hwpe_xbar_master[${port_offset}]/r_valid}
        % endfor

    % endfor
% endfor
</%def>