<%
# =====================================================================
# Project:       QuestaSim waves
# Title:         hwpe_streamer.template_wave_do
# Description:   QuestaSim waves to simplify validation phase.
#
# $Date:        29.12.2021
#
# Generator:    generate_ov
# ===================================================================== */
#
# Copyright (C) 2021 University of Modena and Reggio Emilia.
#
# Author: Gianluca Bellocchi, University of Modena and Reggio Emilia.
%>

<%
# =====================================================================
# Title:        vsim_waves_hwpe_streamer
# Type:         Template API
# Description:  HWPE streamer
# =====================================================================
%>

<%def name="vsim_waves_hwpe_streamer()">\

<%
# HWPE streamer - Top
%>

add wave -noupdate -group {pulp_cluster[${extra_param_0}]} -group {LIC_acc_region} -group {wrapper[${extra_param_1}]} -group {hwpe_streamer} -group {top} {/overlay_tb/dut/gen_clusters[${extra_param_0}]/gen_cluster_sync/i_cluster/i_ooc/i_bound/lic_acc_region_gen/lic_acc_region_i/i_cl_${extra_param_0}_lic_intf_${extra_param_1}/i_top_wrap/i_${target}_top/i_streamer/*}

</%def>

<%
# =====================================================================
# Title:        vsim_waves_hwpe_streamer_source
# Type:         Template API
# Description:  HWPE streamer source modules
# =====================================================================
%>

<%def name="vsim_waves_hwpe_streamer_source()">\

<%
# HWPE streamer - Source modules
%>

% for i in range (n_sink):
    % if (is_parallel_in[i]):
        % for k in range (in_parallelism_factor[i]):
add wave -noupdate -group {pulp_cluster[${extra_param_0}]} -group {LIC_acc_region} -group {wrapper[${extra_param_1}]} -group {hwpe_streamer} -group {${stream_in[i]}_${k}_source} -group {source} {/overlay_tb/dut/gen_clusters[${extra_param_0}]/gen_cluster_sync/i_cluster/i_ooc/i_bound/lic_acc_region_gen/lic_acc_region_i/i_cl_${extra_param_0}_lic_intf_${extra_param_1}/i_top_wrap/i_${target}_top/i_streamer/i_${stream_in[i]}_${k}_source/*}
        % endfor
    % else:
add wave -noupdate -group {pulp_cluster[${extra_param_0}]} -group {LIC_acc_region} -group {wrapper[${extra_param_1}]} -group {hwpe_streamer} -group {${stream_in[i]}_source} -group {source} {/overlay_tb/dut/gen_clusters[${extra_param_0}]/gen_cluster_sync/i_cluster/i_ooc/i_bound/lic_acc_region_gen/lic_acc_region_i/i_cl_${extra_param_0}_lic_intf_${extra_param_1}/i_top_wrap/i_${target}_top/i_streamer/i_${stream_in[i]}_source/*}
    % endif
% endfor 

</%def>


<%
# =====================================================================
# Title:        vsim_waves_hwpe_streamer_sink
# Type:         Template API
# Description:  HWPE streamer sink modules
# =====================================================================
%>

<%def name="vsim_waves_hwpe_streamer_sink()">\

<%
# HWPE streamer - Sink modules
%>

% for j in range (n_source):
    % if (is_parallel_out[j]):
        % for k in range (out_parallelism_factor[j]):
add wave -noupdate -group {pulp_cluster[${extra_param_0}]} -group {LIC_acc_region} -group {wrapper[${extra_param_1}]} -group {hwpe_streamer} -group {${stream_out[j]}_${k}_sink} -group {sink} {/overlay_tb/dut/gen_clusters[${extra_param_0}]/gen_cluster_sync/i_cluster/i_ooc/i_bound/lic_acc_region_gen/lic_acc_region_i/i_cl_${extra_param_0}_lic_intf_${extra_param_1}/i_top_wrap/i_${target}_top/i_streamer/i_${stream_out[j]}_${k}_sink/*}
        % endfor
    % else:
add wave -noupdate -group {pulp_cluster[${extra_param_0}]} -group {LIC_acc_region} -group {wrapper[${extra_param_1}]} -group {hwpe_streamer} -group {${stream_out[j]}_sink} -group {sink} {/overlay_tb/dut/gen_clusters[${extra_param_0}]/gen_cluster_sync/i_cluster/i_ooc/i_bound/lic_acc_region_gen/lic_acc_region_i/i_cl_${extra_param_0}_lic_intf_${extra_param_1}/i_top_wrap/i_${target}_top/i_streamer/i_${stream_out[j]}_sink/*}
    % endif
% endfor 

</%def>

<%
# =====================================================================
# Title:        vsim_waves_hwpe_streamer_addressgen
# Type:         Template API
# Description:  HWPE streamer address generator
# =====================================================================
%>

<%def name="vsim_waves_hwpe_streamer_addressgen()">\

<%
# HWPE streamer - Address generators (source modules)
%>

% for i in range (n_sink):
    % if (is_parallel_in[i]):
        % for k in range (in_parallelism_factor[i]):
add wave -noupdate -group {pulp_cluster[${extra_param_0}]} -group {LIC_acc_region} -group {wrapper[${extra_param_1}]} -group {hwpe_streamer} -group {${stream_in[i]}_${k}_source} -group {addressgen} {/overlay_tb/dut/gen_clusters[${extra_param_0}]/gen_cluster_sync/i_cluster/i_ooc/i_bound/lic_acc_region_gen/lic_acc_region_i/i_cl_${extra_param_0}_lic_intf_${extra_param_1}/i_top_wrap/i_${target}_top/i_streamer/i_${stream_in[i]}_${k}_source/i_addressgen/*}
        % endfor
    % else:
add wave -noupdate -group {pulp_cluster[${extra_param_0}]} -group {LIC_acc_region} -group {wrapper[${extra_param_1}]} -group {hwpe_streamer} -group {${stream_in[i]}_source} -group {addressgen} {/overlay_tb/dut/gen_clusters[${extra_param_0}]/gen_cluster_sync/i_cluster/i_ooc/i_bound/lic_acc_region_gen/lic_acc_region_i/i_cl_${extra_param_0}_lic_intf_${extra_param_1}/i_top_wrap/i_${target}_top/i_streamer/i_${stream_in[i]}_source/i_addressgen/*}
    % endif
% endfor 

<%
# HWPE streamer - Address generators (sink modules)
%>

% for j in range (n_source):
    % if (is_parallel_out[j]):
        % for k in range (out_parallelism_factor[j]):
add wave -noupdate -group {pulp_cluster[${extra_param_0}]} -group {LIC_acc_region} -group {wrapper[${extra_param_1}]} -group {hwpe_streamer} -group {${stream_out[j]}_${k}_sink} -group {addressgen} {/overlay_tb/dut/gen_clusters[${extra_param_0}]/gen_cluster_sync/i_cluster/i_ooc/i_bound/lic_acc_region_gen/lic_acc_region_i/i_cl_${extra_param_0}_lic_intf_${extra_param_1}/i_top_wrap/i_${target}_top/i_streamer/i_${stream_out[j]}_${k}_sink/i_addressgen/*}
        % endfor
    % else:
add wave -noupdate -group {pulp_cluster[${extra_param_0}]} -group {LIC_acc_region} -group {wrapper[${extra_param_1}]} -group {hwpe_streamer} -group {${stream_out[j]}_sink} -group {addressgen} {/overlay_tb/dut/gen_clusters[${extra_param_0}]/gen_cluster_sync/i_cluster/i_ooc/i_bound/lic_acc_region_gen/lic_acc_region_i/i_cl_${extra_param_0}_lic_intf_${extra_param_1}/i_top_wrap/i_${target}_top/i_streamer/i_${stream_out[j]}_sink/i_addressgen/*}
    % endif
% endfor 

</%def>